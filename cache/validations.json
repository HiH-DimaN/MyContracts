{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin\\contracts\\access\\AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin\\contracts\\access\\AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin\\contracts\\access\\IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "8efc65d1ed48ff194d41072e288403df5cbec0ad1833415de5c367a4c3b0d6f2",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "1e44ebc02ee7aa95f9a78df5eba12cbbffb78d783c912fcc610ab4d091466700",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "82de34af45e11ebf0344bc3b36db8df2cda412154fce50dc0ad2013adf6e71f2",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/Panic.sol:Panic": {
        "src": "@openzeppelin\\contracts\\utils\\Panic.sol:26",
        "version": {
          "withMetadata": "32617ea715337d3c9302c492b901e93673441e9ef62093542787feb1b35eb024",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "5a09a96b51afc6d696dc9f3b17585ac92db4153f6dfd17a08b9d869eb873ce9c",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:12",
        "version": {
          "withMetadata": "ddfcad2a919b61a12e578a9f7cb5c0abaa1867009cb3a30b4743ef0ab91ad23c",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/Panic.sol:Panic"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeCast.sol:19",
        "version": {
          "withMetadata": "633b75be74e6b2748e79a03cb470f3869248c21c6f16be56f9a2828e7512fd78",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:11",
        "version": {
          "withMetadata": "201a4feab0f9a7f5c39c06df387759cc5de3a1cd25e20f10ec9888dd202df0f8",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/AddressDemo.sol:AddresDemo": {
        "src": "contracts\\practice-GuideDAO\\AddressDemo.sol:5",
        "version": {
          "withMetadata": "7f246d553837137162db40aa271b91f009722f6e9bf45db3215cdda9cd186dd8",
          "withoutMetadata": "ca9170f225bccba97f9298391fb76cefa8a5a215524974464f5aec41d1d88a1e",
          "linkedWithoutMetadata": "ca9170f225bccba97f9298391fb76cefa8a5a215524974464f5aec41d1d88a1e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setAddress(address)",
          "getBalance()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "myAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "AddresDemo",
              "src": "contracts\\practice-GuideDAO\\AddressDemo.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/Album.sol:Album": {
        "src": "contracts\\practice-GuideDAO\\Album.sol:6",
        "version": {
          "withMetadata": "23b6701a541dcf4ff588b4f0e6617e0bf8198266367e67a699d7be4f8db231f2",
          "withoutMetadata": "d562dae49d079767532f38772ff0aa5d7e44042d4ba9ab5d206a48292efaa13e",
          "linkedWithoutMetadata": "d562dae49d079767532f38772ff0aa5d7e44042d4ba9ab5d206a48292efaa13e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,string,uint256,address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Album",
            "src": "contracts\\practice-GuideDAO\\Album.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "price",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Album",
              "src": "contracts\\practice-GuideDAO\\Album.sol:7"
            },
            {
              "label": "title",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "Album",
              "src": "contracts\\practice-GuideDAO\\Album.sol:8"
            },
            {
              "label": "purchased",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "Album",
              "src": "contracts\\practice-GuideDAO\\Album.sol:9"
            },
            {
              "label": "index",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Album",
              "src": "contracts\\practice-GuideDAO\\Album.sol:10"
            },
            {
              "label": "tracker",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(AlbumTracker)6340",
              "contract": "Album",
              "src": "contracts\\practice-GuideDAO\\Album.sol:13"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AlbumTracker)6340": {
              "label": "contract AlbumTracker",
              "numberOfBytes": "20"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/AlbumTracker.sol:AlbumTracker": {
        "src": "contracts\\practice-GuideDAO\\AlbumTracker.sol:7",
        "version": {
          "withMetadata": "269775f53cfe850692722a4ddbc1c9d56b2d8f789f856a062748f6f02e875b65",
          "withoutMetadata": "dbb7526057db302659d3ebeef7159e7137b17fa32039c8851d333214ccfbc188",
          "linkedWithoutMetadata": "dbb7526057db302659d3ebeef7159e7137b17fa32039c8851d333214ccfbc188"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "creatAlbum(uint256,string)",
          "triggerPayment(uint256)",
          "triggerDelivery(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AlbumTracker",
            "src": "contracts\\practice-GuideDAO\\AlbumTracker.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "albums",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(AlbumProduct)6158_storage)",
              "contract": "AlbumTracker",
              "src": "contracts\\practice-GuideDAO\\AlbumTracker.sol:36"
            },
            {
              "label": "currentIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "AlbumTracker",
              "src": "contracts\\practice-GuideDAO\\AlbumTracker.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(Album)6129": {
              "label": "contract Album",
              "numberOfBytes": "20"
            },
            "t_enum(AlbumState)6147": {
              "label": "enum AlbumTracker.AlbumState",
              "members": [
                "Created",
                "Paid",
                "Delivered"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(AlbumProduct)6158_storage)": {
              "label": "mapping(uint256 => struct AlbumTracker.AlbumProduct)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AlbumProduct)6158_storage": {
              "label": "struct AlbumTracker.AlbumProduct",
              "members": [
                {
                  "label": "album",
                  "type": "t_contract(Album)6129",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "state",
                  "type": "t_enum(AlbumState)6147",
                  "offset": 20,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "title",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/Demo.sol:Demo": {
        "src": "contracts\\practice-GuideDAO\\Demo.sol:3",
        "version": {
          "withMetadata": "4ae43f05f2c181f6fc0f8e01f98bbf2fdb779b67fa11bf32e183e1bbe48b82a1",
          "withoutMetadata": "24001434cbefd1a3a86ba2f85feb7bfc5bcd4b70782e1f7aa3c69d13b50bf32d",
          "linkedWithoutMetadata": "24001434cbefd1a3a86ba2f85feb7bfc5bcd4b70782e1f7aa3c69d13b50bf32d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "run(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Demo",
            "src": "contracts\\practice-GuideDAO\\Demo.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "a",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Demo",
              "src": "contracts\\practice-GuideDAO\\Demo.sol:5"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Demo",
              "src": "contracts\\practice-GuideDAO\\Demo.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/DemoNew.sol:DemoNew": {
        "src": "contracts\\practice-GuideDAO\\DemoNew.sol:3",
        "version": {
          "withMetadata": "8757fbacb2da2eabd75fef3d39bc38de8dedd73d55607b3a0ef87c65206ecf01",
          "withoutMetadata": "36f5e282f4dcf2f6430ca9dae28f37af905828d449f0eab21ae0b0dfa3e749fd",
          "linkedWithoutMetadata": "36f5e282f4dcf2f6430ca9dae28f37af905828d449f0eab21ae0b0dfa3e749fd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "demo()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "sum",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "DemoNew",
              "src": "contracts\\practice-GuideDAO\\DemoNew.sol:5"
            },
            {
              "label": "sender",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "DemoNew",
              "src": "contracts\\practice-GuideDAO\\DemoNew.sol:6"
            },
            {
              "label": "timestamp",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DemoNew",
              "src": "contracts\\practice-GuideDAO\\DemoNew.sol:7"
            },
            {
              "label": "number",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "DemoNew",
              "src": "contracts\\practice-GuideDAO\\DemoNew.sol:8"
            },
            {
              "label": "limit",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "DemoNew",
              "src": "contracts\\practice-GuideDAO\\DemoNew.sol:9"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "DemoNew",
              "src": "contracts\\practice-GuideDAO\\DemoNew.sol:10"
            },
            {
              "label": "contractAddr",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "DemoNew",
              "src": "contracts\\practice-GuideDAO\\DemoNew.sol:11"
            },
            {
              "label": "balance",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "DemoNew",
              "src": "contracts\\practice-GuideDAO\\DemoNew.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/Destroy.sol:Destroy": {
        "src": "contracts\\practice-GuideDAO\\Destroy.sol:4",
        "version": {
          "withMetadata": "243568a085fa5ad98779165020bb99196c178a041ff3c678a9f7b1a5ca63ac3f",
          "withoutMetadata": "c3f6b6abef0395c767e5ba192bf34ea50ae9c63af1ad08c62342569daedc7f63",
          "linkedWithoutMetadata": "c3f6b6abef0395c767e5ba192bf34ea50ae9c63af1ad08c62342569daedc7f63"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "checkBalance(address[100])",
          "setRecipient(address payable)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Destroy",
            "src": "contracts\\practice-GuideDAO\\Destroy.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "active",
            "src": "contracts\\practice-GuideDAO\\Destroy.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Destroy",
              "src": "contracts\\practice-GuideDAO\\Destroy.sol:6"
            },
            {
              "label": "_to",
              "offset": 0,
              "slot": "1",
              "type": "t_address_payable",
              "contract": "Destroy",
              "src": "contracts\\practice-GuideDAO\\Destroy.sol:7"
            },
            {
              "label": "myAddr",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Destroy",
              "src": "contracts\\practice-GuideDAO\\Destroy.sol:8"
            },
            {
              "label": "active",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "Destroy",
              "src": "contracts\\practice-GuideDAO\\Destroy.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ENSRegistrar.sol:ENSRegistrar": {
        "src": "contracts\\practice-GuideDAO\\ENSRegistrar.sol:5",
        "version": {
          "withMetadata": "4734e82a127ebd7382fcf2f60ec95c2765c9792951ab96f12dd5c91b8007690a",
          "withoutMetadata": "29fcfbf424a40e1b90afe6cee0865ab2ce910a22e1ced4990a42de2755cd22cf",
          "linkedWithoutMetadata": "29fcfbf424a40e1b90afe6cee0865ab2ce910a22e1ced4990a42de2755cd22cf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,uint256)",
          "setRegistrationPricePerYear(uint256)",
          "setRenewalCoefficient(uint256)",
          "registerDomain(string,uint256)",
          "renewDomain(string,uint256)",
          "getDomainOwner(string)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ENSRegistrar",
            "src": "contracts\\practice-GuideDAO\\ENSRegistrar.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "domains",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_string_memory_ptr,t_struct(DomainInfo)6599_storage)",
              "contract": "ENSRegistrar",
              "src": "contracts\\practice-GuideDAO\\ENSRegistrar.sol:18"
            },
            {
              "label": "ensAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ENSRegistrar",
              "src": "contracts\\practice-GuideDAO\\ENSRegistrar.sol:24"
            },
            {
              "label": "registrationPricePerYear",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ENSRegistrar",
              "src": "contracts\\practice-GuideDAO\\ENSRegistrar.sol:25"
            },
            {
              "label": "renewalCoefficient",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ENSRegistrar",
              "src": "contracts\\practice-GuideDAO\\ENSRegistrar.sol:27"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "ENSRegistrar",
              "src": "contracts\\practice-GuideDAO\\ENSRegistrar.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_string_memory_ptr,t_struct(DomainInfo)6599_storage)": {
              "label": "mapping(string => struct ENSRegistrar.DomainInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DomainInfo)6599_storage": {
              "label": "struct ENSRegistrar.DomainInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceReg",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "registrationYears",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC1155/ERC1155.sol:ERC1155": {
        "src": "contracts\\practice-GuideDAO\\ERC1155\\ERC1155.sol:16",
        "version": {
          "withMetadata": "fe73e58b93100e826b75d461ef93d09dd34a7ffcd6015df400777aca9a7dd788",
          "withoutMetadata": "d3259e952ba291a394c32ab174af3ceff5656b3e285aeacab90e9b6fde3dc93b",
          "linkedWithoutMetadata": "d3259e952ba291a394c32ab174af3ceff5656b3e285aeacab90e9b6fde3dc93b"
        },
        "inherit": [
          "contracts/practice-GuideDAO/ERC1155/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "contracts/practice-GuideDAO/ERC1155/IERC1155.sol:IERC1155"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "contracts\\practice-GuideDAO\\ERC1155\\ERC1155.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "contracts\\practice-GuideDAO\\ERC1155\\ERC1155.sol:18"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "contracts\\practice-GuideDAO\\ERC1155\\ERC1155.sol:24"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "contracts\\practice-GuideDAO\\ERC1155\\ERC1155.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC1155/IERC1155.sol:IERC1155": {
        "src": "contracts\\practice-GuideDAO\\ERC1155\\IERC1155.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC1155/IERC1155MetadataURI.sol:IERC1155MetadataURI": {
        "src": "contracts\\practice-GuideDAO\\ERC1155\\IERC1155MetadataURI.sol:4",
        "inherit": [
          "contracts/practice-GuideDAO/ERC1155/IERC1155.sol:IERC1155"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "contracts\\practice-GuideDAO\\ERC1155\\IERC1155Receiver.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC165.sol:ERC165": {
        "src": "contracts\\practice-GuideDAO\\ERC165.sol:8",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC20/ERC20.sol:ERC20": {
        "src": "contracts\\practice-GuideDAO\\ERC20\\ERC20.sol:16",
        "version": {
          "withMetadata": "c676a27f5e50afc6cf9ecfea1380f3b130b327d01a6ec9a9fac4a20d57d73835",
          "withoutMetadata": "55b06088056e4be44e473256b90596460ff8285a14c2661ef36fa74ce6292ec2",
          "linkedWithoutMetadata": "55b06088056e4be44e473256b90596460ff8285a14c2661ef36fa74ce6292ec2"
        },
        "inherit": [
          "contracts/practice-GuideDAO/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "(string,string,uint256,address)",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "mint(uint256,address)",
          "burn(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts\\practice-GuideDAO\\ERC20\\ERC20.sol:87"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalTokens",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC20\\ERC20.sol:17"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC20\\ERC20.sol:17"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC20\\ERC20.sol:19"
            },
            {
              "label": "allowances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC20\\ERC20.sol:22"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC20\\ERC20.sol:26"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC20\\ERC20.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC20/IERC20.sol:IERC20": {
        "src": "contracts\\practice-GuideDAO\\ERC20\\IERC20.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC2612/ERC20.sol:ERC20": {
        "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20.sol:18",
        "version": {
          "withMetadata": "8128f4668a7916c2ca09cc07bae164f7f0e507db6ffcb922cc326fbdcd9d726a",
          "withoutMetadata": "5653a286d085ed61d4c8d4c8a82d4273cecca73b9205aa7a7fdbfd3cd073d4ed",
          "linkedWithoutMetadata": "5653a286d085ed61d4c8d4c8a82d4273cecca73b9205aa7a7fdbfd3cd073d4ed"
        },
        "inherit": [
          "contracts/practice-GuideDAO/ERC2612/IERC20Metadata.sol:IERC20Metadata",
          "contracts/practice-GuideDAO/ERC2612/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20.sol:22"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20.sol:31"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20.sol:35"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC2612/ERC20Permit.sol:ERC20Permit": {
        "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20Permit.sol:17",
        "inherit": [
          "contracts/practice-GuideDAO/ERC2612/crypto/EIP712.sol:EIP712",
          "contracts/practice-GuideDAO/ERC2612/IERC5267.sol:IERC5267",
          "contracts/practice-GuideDAO/ERC2612/IERC20Permit.sol:IERC20Permit",
          "contracts/practice-GuideDAO/ERC2612/ERC20.sol:ERC20",
          "contracts/practice-GuideDAO/ERC2612/IERC20Metadata.sol:IERC20Metadata",
          "contracts/practice-GuideDAO/ERC2612/IERC20.sol:IERC20"
        ],
        "libraries": [
          "contracts/practice-GuideDAO/ERC2612/utils/Counters.sol:Counters",
          "contracts/practice-GuideDAO/ERC2612/crypto/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Permit",
            "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20Permit.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20.sol:22"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20.sol:31"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20.sol:35"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20.sol:40"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\crypto\\EIP712.sol:49"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\crypto\\EIP712.sol:50"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)9805_storage)",
              "contract": "ERC20Permit",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20Permit.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)9805_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)9805_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC2612/IERC20.sol:IERC20": {
        "src": "contracts\\practice-GuideDAO\\ERC2612\\IERC20.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC2612/IERC20Metadata.sol:IERC20Metadata": {
        "src": "contracts\\practice-GuideDAO\\ERC2612\\IERC20Metadata.sol:7",
        "inherit": [
          "contracts/practice-GuideDAO/ERC2612/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC2612/IERC20Permit.sol:IERC20Permit": {
        "src": "contracts\\practice-GuideDAO\\ERC2612\\IERC20Permit.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC2612/IERC5267.sol:IERC5267": {
        "src": "contracts\\practice-GuideDAO\\ERC2612\\IERC5267.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC2612/MyToken.sol:MyToken": {
        "src": "contracts\\practice-GuideDAO\\ERC2612\\MyToken.sol:16",
        "version": {
          "withMetadata": "59aabfb5fff39d16406bd52fff2cda8ba8c58c45cc50d963dad11dc985e216f0",
          "withoutMetadata": "6696e47fb027a2e81beca87122116154e4d3f39b8777ab84aa633bdd5cc46bc5",
          "linkedWithoutMetadata": "6696e47fb027a2e81beca87122116154e4d3f39b8777ab84aa633bdd5cc46bc5"
        },
        "inherit": [
          "contracts/practice-GuideDAO/ERC2612/ERC20Permit.sol:ERC20Permit",
          "contracts/practice-GuideDAO/ERC2612/crypto/EIP712.sol:EIP712",
          "contracts/practice-GuideDAO/ERC2612/IERC5267.sol:IERC5267",
          "contracts/practice-GuideDAO/ERC2612/IERC20Permit.sol:IERC20Permit",
          "contracts/practice-GuideDAO/ERC2612/ERC20.sol:ERC20",
          "contracts/practice-GuideDAO/ERC2612/IERC20Metadata.sol:IERC20Metadata",
          "contracts/practice-GuideDAO/ERC2612/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyToken",
            "src": "contracts\\practice-GuideDAO\\ERC2612\\MyToken.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20.sol:22"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20.sol:31"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20.sol:35"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20.sol:40"
            },
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\crypto\\EIP712.sol:49"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\crypto\\EIP712.sol:50"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Counter)9805_storage)",
              "contract": "ERC20Permit",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\ERC20Permit.sol:24"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "MyToken",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\MyToken.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Counter)9805_storage)": {
              "label": "mapping(address => struct Counters.Counter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)9805_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC2612/Proxy.sol:Proxy": {
        "src": "contracts\\practice-GuideDAO\\ERC2612\\Proxy.sol:7",
        "version": {
          "withMetadata": "6324f27c81b767d52db99a3e3a828a812da88f6dadadee2698e795291427d195",
          "withoutMetadata": "b790070c0eec4db8f7b816779714ab100e4fa738513c88a92e134e699b9eeca3",
          "linkedWithoutMetadata": "b790070c0eec4db8f7b816779714ab100e4fa738513c88a92e134e699b9eeca3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "doSend(address,address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC2612/crypto/ECDSA.sol:ECDSA": {
        "src": "contracts\\practice-GuideDAO\\ERC2612\\crypto\\ECDSA.sol:14",
        "version": {
          "withMetadata": "6b6bcaefe6513a7607e382fcd64ca512a5be2443b33acfda57b9fc8c1c74c1a1",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/practice-GuideDAO/ERC2612/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC2612/crypto/EIP712.sol:EIP712": {
        "src": "contracts\\practice-GuideDAO\\ERC2612\\crypto\\EIP712.sol:35",
        "inherit": [
          "contracts/practice-GuideDAO/ERC2612/IERC5267.sol:IERC5267"
        ],
        "libraries": [
          "contracts/practice-GuideDAO/ERC2612/utils/ShortStrings.sol:ShortStrings",
          "contracts/practice-GuideDAO/ERC2612/crypto/ECDSA.sol:ECDSA"
        ],
        "methods": [
          "eip712Domain()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EIP712",
            "src": "contracts\\practice-GuideDAO\\ERC2612\\crypto\\EIP712.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_nameFallback",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\crypto\\EIP712.sol:49"
            },
            {
              "label": "_versionFallback",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EIP712",
              "src": "contracts\\practice-GuideDAO\\ERC2612\\crypto\\EIP712.sol:50"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC2612/utils/Counters.sol:Counters": {
        "src": "contracts\\practice-GuideDAO\\ERC2612\\utils\\Counters.sol:18",
        "version": {
          "withMetadata": "992285dd8287a88403fecaa306b9782db902d4ff94b2030a8c85a6889f149835",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC2612/utils/Math.sol:Math": {
        "src": "contracts\\practice-GuideDAO\\ERC2612\\utils\\Math.sol:9",
        "version": {
          "withMetadata": "423b9c84848ec45c1f1a52d89caf5c005b8105c25459c83889eecb955c412178",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC2612/utils/ShortStrings.sol:ShortStrings": {
        "src": "contracts\\practice-GuideDAO\\ERC2612\\utils\\ShortStrings.sol:34",
        "version": {
          "withMetadata": "b99dac950e88614cfb17b22f5329f15c9c8fd179032724370b7c8a68418bd093",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/practice-GuideDAO/ERC2612/utils/StorageSlot.sol:StorageSlot"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC2612/utils/SignedMath.sol:SignedMath": {
        "src": "contracts\\practice-GuideDAO\\ERC2612\\utils\\SignedMath.sol:9",
        "version": {
          "withMetadata": "85b931727a89f0c314910aa7a0b1ea5a069dd28b1416d80894ccbb2c5c4e8411",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC2612/utils/StorageSlot.sol:StorageSlot": {
        "src": "contracts\\practice-GuideDAO\\ERC2612\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "c8ea63592fb114d719812937a2b5e9482502807fb5d6144e7b6ef6eb075374c7",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/ERC2612/utils/Strings.sol:Strings": {
        "src": "contracts\\practice-GuideDAO\\ERC2612\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "3e663769d19833e0d39caecb7573c6eba3c96b0925c422cc8916ad17ca22127a",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [
          "contracts/practice-GuideDAO/ERC2612/utils/Math.sol:Math",
          "contracts/practice-GuideDAO/ERC2612/utils/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/Factory.sol:Factory": {
        "src": "contracts\\practice-GuideDAO\\Factory.sol:8",
        "version": {
          "withMetadata": "55d9a4e68f086cacda7be78474861bc18902a28b976b1f49fbff54d99e776915",
          "withoutMetadata": "fcff339ad37c83cc531138bd68547d35a99f6214550e8ffa1d09dc543075a80c",
          "linkedWithoutMetadata": "fcff339ad37c83cc531138bd68547d35a99f6214550e8ffa1d09dc543075a80c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createVoting(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/FundsDemo.sol:FundsDemo": {
        "src": "contracts\\practice-GuideDAO\\FundsDemo.sol:4",
        "version": {
          "withMetadata": "4a26048532debbbbf93d12bff51265ca84e40ab94d39d41c19f715ab8e15ebcd",
          "withoutMetadata": "084af87a4cc06dfd543983a3b087d34be1c3d9a11bb7e0a5fe00717138a83bd3",
          "linkedWithoutMetadata": "084af87a4cc06dfd543983a3b087d34be1c3d9a11bb7e0a5fe00717138a83bd3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveMoney()",
          "getBalance()",
          "withdrawMoney()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "balanceReceied",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "FundsDemo",
              "src": "contracts\\practice-GuideDAO\\FundsDemo.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/LibStringDemo.sol:LibStringsDemo": {
        "src": "contracts\\practice-GuideDAO\\LibStringDemo.sol:8",
        "version": {
          "withMetadata": "d9157df75a3db584c5fefaba8f52333332d6871e6b7df601864d0b6759047a7b",
          "withoutMetadata": "3c9f4a97bc8fa6b093caa75837da85a15a9e42f37f1ba5a039bec30a15fea591",
          "linkedWithoutMetadata": "3c9f4a97bc8fa6b093caa75837da85a15a9e42f37f1ba5a039bec30a15fea591"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "testConvert(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/MappingDemo.sol:MappingDemo": {
        "src": "contracts\\practice-GuideDAO\\MappingDemo.sol:4",
        "version": {
          "withMetadata": "45e63ba3d28093e72a1a78f8438ad3719bf3fe2570d84e07aa1b460fc329b18a",
          "withoutMetadata": "41038058c19d5f0d55da867f8d90fa10d66db8bd23bea1b53363a27210cd2e43",
          "linkedWithoutMetadata": "41038058c19d5f0d55da867f8d90fa10d66db8bd23bea1b53363a27210cd2e43"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "addAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "addrMap",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MappingDemo",
              "src": "contracts\\practice-GuideDAO\\MappingDemo.sol:5"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/MusicShop.sol:MusicShop": {
        "src": "contracts\\practice-GuideDAO\\MusicShop.sol:6",
        "inherit": [
          "contracts/practice-GuideDAO/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addAlbum(bytes32,string,uint256,uint256)",
          "buy(uint256)",
          "delivered(uint256)",
          "()",
          "allAlbums()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MusicShop",
            "src": "contracts\\practice-GuideDAO\\MusicShop.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "albums",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_struct(Album)11516_storage)dyn_storage",
              "contract": "MusicShop",
              "src": "contracts\\practice-GuideDAO\\MusicShop.sol:28"
            },
            {
              "label": "orders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_struct(Order)11528_storage)dyn_storage",
              "contract": "MusicShop",
              "src": "contracts\\practice-GuideDAO\\MusicShop.sol:29"
            },
            {
              "label": "currentIndex",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MusicShop",
              "src": "contracts\\practice-GuideDAO\\MusicShop.sol:31"
            },
            {
              "label": "currentOrderId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MusicShop",
              "src": "contracts\\practice-GuideDAO\\MusicShop.sol:32"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "MusicShop",
              "src": "contracts\\practice-GuideDAO\\MusicShop.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Album)11516_storage)dyn_storage": {
              "label": "struct MusicShop.Album[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Order)11528_storage)dyn_storage": {
              "label": "struct MusicShop.Order[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(OrderStatus)11505": {
              "label": "enum MusicShop.OrderStatus",
              "members": [
                "Paid",
                "Delivered"
              ],
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Album)11516_storage": {
              "label": "struct MusicShop.Album",
              "members": [
                {
                  "label": "index",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "uid",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "title",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "quantity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Order)11528_storage": {
              "label": "struct MusicShop.Order",
              "members": [
                {
                  "label": "orderId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "albumUid",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "customer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "orderedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "status",
                  "type": "t_enum(OrderStatus)11505",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/MyContract.sol:MyContract": {
        "src": "contracts\\practice-GuideDAO\\MyContract.sol:4",
        "version": {
          "withMetadata": "5000bc33eed3c100cee4891afd09abf8f8d33ff0818cdcd52e4b571b15a2fd97",
          "withoutMetadata": "8fb06b2c8a9a17ae5b80b846c8642c6d2c812a932e847287414d73ea70082374",
          "linkedWithoutMetadata": "8fb06b2c8a9a17ae5b80b846c8642c6d2c812a932e847287414d73ea70082374"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "newFriends(string,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "listOfFriends",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_struct(Friends)11775_storage)dyn_storage",
              "contract": "MyContract",
              "src": "contracts\\practice-GuideDAO\\MyContract.sol:10"
            },
            {
              "label": "guestList",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_struct(Friends)11775_storage)dyn_storage",
              "contract": "MyContract",
              "src": "contracts\\practice-GuideDAO\\MyContract.sol:11"
            }
          ],
          "types": {
            "t_array(t_struct(Friends)11775_storage)dyn_storage": {
              "label": "struct MyContract.Friends[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Friends)11775_storage": {
              "label": "struct MyContract.Friends",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "invited",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/MyGuideDAOToken.sol:MyGuideDAOToken": {
        "src": "contracts\\practice-GuideDAO\\MyGuideDAOToken.sol:6",
        "version": {
          "withMetadata": "99685e9c38268c703b9472963e2c110496c7011303f2630fbd86f75885df3b2c",
          "withoutMetadata": "3f7800d188a0d3c895e82244375a63f4b1df1f626ef4595248e7b879bff6388d",
          "linkedWithoutMetadata": "3f7800d188a0d3c895e82244375a63f4b1df1f626ef4595248e7b879bff6388d"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyGuideDAOToken",
            "src": "contracts\\practice-GuideDAO\\MyGuideDAOToken.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/MyShop.sol:MyShop": {
        "src": "contracts\\practice-GuideDAO\\MyShop.sol:5",
        "version": {
          "withMetadata": "8195050eabaef1ac5d6544d158f04c5b5d4911e7eaae83d1ac6170c5db631761",
          "withoutMetadata": "32719a4af583babcf65a58446129320e474aba2c96cdc89e6ea838417874bf22",
          "linkedWithoutMetadata": "32719a4af583babcf65a58446129320e474aba2c96cdc89e6ea838417874bf22"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "payForItem()",
          "withdrawAll()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyShop",
            "src": "contracts\\practice-GuideDAO\\MyShop.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "MyShop",
              "src": "contracts\\practice-GuideDAO\\MyShop.sol:6"
            },
            {
              "label": "payments",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MyShop",
              "src": "contracts\\practice-GuideDAO\\MyShop.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/NFT&ERC721/ERC165.sol:ERC165": {
        "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC165.sol:18",
        "version": {
          "withMetadata": "3a5c0f0bbb82e14910f0ac112e8416cd091124c67a83e1223c98972c732cf146",
          "withoutMetadata": "d286a7586d577df22859204babd31076524cf15cda74c84880760c545325aefd",
          "linkedWithoutMetadata": "d286a7586d577df22859204babd31076524cf15cda74c84880760c545325aefd"
        },
        "inherit": [
          "contracts/practice-GuideDAO/NFT&ERC721/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/NFT&ERC721/ERC721.sol:ERC721": {
        "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:24",
        "version": {
          "withMetadata": "f9f15c0be1d0d99bd7c9bc3e58423146868a72380ffd41909cbc8288b4876b8a",
          "withoutMetadata": "340d40845affe27aca0500ec3b74dc5b872b829fe8d996650566b71c4a2ed1a6",
          "linkedWithoutMetadata": "340d40845affe27aca0500ec3b74dc5b872b829fe8d996650566b71c4a2ed1a6"
        },
        "inherit": [
          "contracts/practice-GuideDAO/NFT&ERC721/IERC721Metadata.sol:IERC721Metadata",
          "contracts/practice-GuideDAO/NFT&ERC721/IERC721.sol:IERC721",
          "contracts/practice-GuideDAO/NFT&ERC721/ERC165.sol:ERC165",
          "contracts/practice-GuideDAO/NFT&ERC721/IERC165.sol:IERC165"
        ],
        "libraries": [
          "contracts/practice-GuideDAO/NFT&ERC721/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "name()",
          "symbol()",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)",
          "supportsInterface(bytes4)",
          "burn(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:60"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:26"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:26"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:33"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/NFT&ERC721/ERC721Enumerable.sol:ERC721Enumerable": {
        "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721Enumerable.sol:17",
        "inherit": [
          "contracts/practice-GuideDAO/NFT&ERC721/IERC721Enumerable.sol:IERC721Enumerable",
          "contracts/practice-GuideDAO/NFT&ERC721/ERC721.sol:ERC721",
          "contracts/practice-GuideDAO/NFT&ERC721/IERC721Metadata.sol:IERC721Metadata",
          "contracts/practice-GuideDAO/NFT&ERC721/IERC721.sol:IERC721",
          "contracts/practice-GuideDAO/NFT&ERC721/ERC165.sol:ERC165",
          "contracts/practice-GuideDAO/NFT&ERC721/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:26"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:26"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:33"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:38"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721Enumerable.sol:17"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721Enumerable.sol:18"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721Enumerable.sol:24"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721Enumerable.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/NFT&ERC721/ERC721URIStorage.sol:ERC721URIStorage": {
        "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721URIStorage.sol:18",
        "inherit": [
          "contracts/practice-GuideDAO/NFT&ERC721/ERC721.sol:ERC721",
          "contracts/practice-GuideDAO/NFT&ERC721/IERC721Metadata.sol:IERC721Metadata",
          "contracts/practice-GuideDAO/NFT&ERC721/IERC721.sol:IERC721",
          "contracts/practice-GuideDAO/NFT&ERC721/ERC165.sol:ERC165",
          "contracts/practice-GuideDAO/NFT&ERC721/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:26"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:26"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:33"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:38"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721URIStorage.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/NFT&ERC721/IERC165.sol:IERC165": {
        "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/NFT&ERC721/IERC721.sol:IERC721": {
        "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\IERC721.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/NFT&ERC721/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\IERC721Enumerable.sol:15",
        "inherit": [
          "contracts/practice-GuideDAO/NFT&ERC721/IERC721.sol:IERC721"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/NFT&ERC721/IERC721Metadata.sol:IERC721Metadata": {
        "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\IERC721Metadata.sol:15",
        "inherit": [
          "contracts/practice-GuideDAO/NFT&ERC721/IERC721.sol:IERC721"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/NFT&ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\IERC721Receiver.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/NFT&ERC721/MyTokenERC721.sol:MyTokenERC721": {
        "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\MyTokenERC721.sol:16",
        "version": {
          "withMetadata": "845a07190f0bd4a163b33d1b38ccc75390bef9664d630ee420bc24b78dc84b16",
          "withoutMetadata": "ea17682db9592d92527ddb2feb843899736af40d728748819c1d31efd975b8fe",
          "linkedWithoutMetadata": "ea17682db9592d92527ddb2feb843899736af40d728748819c1d31efd975b8fe"
        },
        "inherit": [
          "contracts/practice-GuideDAO/NFT&ERC721/ERC721URIStorage.sol:ERC721URIStorage",
          "contracts/practice-GuideDAO/NFT&ERC721/ERC721Enumerable.sol:ERC721Enumerable",
          "contracts/practice-GuideDAO/NFT&ERC721/IERC721Enumerable.sol:IERC721Enumerable",
          "contracts/practice-GuideDAO/NFT&ERC721/ERC721.sol:ERC721",
          "contracts/practice-GuideDAO/NFT&ERC721/IERC721Metadata.sol:IERC721Metadata",
          "contracts/practice-GuideDAO/NFT&ERC721/IERC721.sol:IERC721",
          "contracts/practice-GuideDAO/NFT&ERC721/ERC165.sol:ERC165",
          "contracts/practice-GuideDAO/NFT&ERC721/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "()",
          "safeMint(address,string)",
          "supportsInterface(bytes4)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyTokenERC721",
            "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\MyTokenERC721.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:26"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:26"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:26"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:30"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:33"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721.sol:38"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721Enumerable.sol:17"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721Enumerable.sol:18"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721Enumerable.sol:24"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721Enumerable.sol:26"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\ERC721URIStorage.sol:20"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "MyTokenERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\MyTokenERC721.sol:17"
            },
            {
              "label": "currentTokenId",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "MyTokenERC721",
              "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\MyTokenERC721.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/NFT&ERC721/Strings.sol:Strings": {
        "src": "contracts\\practice-GuideDAO\\NFT&ERC721\\Strings.sol:15",
        "version": {
          "withMetadata": "7cf0a3587c933338a41392061af4e07a5b552f79b594b60ed24ec96c4fd2ab80",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/Overflow.sol:Overflow": {
        "src": "contracts\\practice-GuideDAO\\Overflow.sol:4",
        "version": {
          "withMetadata": "b541ace5b046cf1517442d6018250d23de663f7af79e1c9d37db81992b129986",
          "withoutMetadata": "e3447dbd1d66eef2fccb808a62ba7808c53faf666b8276a78270ff52b78c07ce",
          "linkedWithoutMetadata": "e3447dbd1d66eef2fccb808a62ba7808c53faf666b8276a78270ff52b78c07ce"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setMyUint(uint8)",
          "increment()",
          "decrement()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "myUint8",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Overflow",
              "src": "contracts\\practice-GuideDAO\\Overflow.sol:5"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/RecordFactory.sol:AddressRecord": {
        "src": "contracts\\practice-GuideDAO\\RecordFactory.sol:41",
        "version": {
          "withMetadata": "7042f350b057c886c5f63051d05567a2672aa6848d26c4a60c4ce3a8ca353acc",
          "withoutMetadata": "4bcf898c252aa2aa7e9c84ce9710d3fc0d9080374f06f2c9715125800732c604",
          "linkedWithoutMetadata": "4bcf898c252aa2aa7e9c84ce9710d3fc0d9080374f06f2c9715125800732c604"
        },
        "inherit": [
          "contracts/practice-GuideDAO/RecordFactory.sol:Record"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address)",
          "getRecordType()",
          "setRecord(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AddressRecord",
            "src": "contracts\\practice-GuideDAO\\RecordFactory.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "timeOfCreation",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Record",
              "src": "contracts\\practice-GuideDAO\\RecordFactory.sol:6"
            },
            {
              "label": "record",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "AddressRecord",
              "src": "contracts\\practice-GuideDAO\\RecordFactory.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/RecordFactory.sol:Record": {
        "src": "contracts\\practice-GuideDAO\\RecordFactory.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRecordType()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Record",
            "src": "contracts\\practice-GuideDAO\\RecordFactory.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "timeOfCreation",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Record",
              "src": "contracts\\practice-GuideDAO\\RecordFactory.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/RecordFactory.sol:RecordFactory": {
        "src": "contracts\\practice-GuideDAO\\RecordFactory.sol:62",
        "version": {
          "withMetadata": "79f17f6a9629ab983a21fa6989b211adca7c5146cc989680b9b17a22d512e13e",
          "withoutMetadata": "cfb1debf8fa631ff56ec367c19fdd373ed41d772c88ff85f42df4aedd956d6fc",
          "linkedWithoutMetadata": "cfb1debf8fa631ff56ec367c19fdd373ed41d772c88ff85f42df4aedd956d6fc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createStringRecord(string)",
          "createAddressRecord(address)",
          "getRecordsCount()",
          "getRecordAtIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "records",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_struct(RecordEntry)13693_storage)dyn_storage",
              "contract": "RecordFactory",
              "src": "contracts\\practice-GuideDAO\\RecordFactory.sol:69"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(RecordEntry)13693_storage)dyn_storage": {
              "label": "struct RecordFactory.RecordEntry[]",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RecordEntry)13693_storage": {
              "label": "struct RecordFactory.RecordEntry",
              "members": [
                {
                  "label": "timeOfCreation",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "recordAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "recordType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/RecordFactory.sol:StringRecord": {
        "src": "contracts\\practice-GuideDAO\\RecordFactory.sol:20",
        "version": {
          "withMetadata": "9e969d5c3b3b624f0020dbd5021537ec3d18daab6a8ba83aea96e6e2d1bddd92",
          "withoutMetadata": "1a4932ee459b71a054ed515bce8e248f1cc97905f5ab8ee43e72f9ffc156e1b3",
          "linkedWithoutMetadata": "1a4932ee459b71a054ed515bce8e248f1cc97905f5ab8ee43e72f9ffc156e1b3"
        },
        "inherit": [
          "contracts/practice-GuideDAO/RecordFactory.sol:Record"
        ],
        "libraries": [],
        "methods": [
          "(uint256,string)",
          "getRecordType()",
          "setRecord(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StringRecord",
            "src": "contracts\\practice-GuideDAO\\RecordFactory.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "timeOfCreation",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Record",
              "src": "contracts\\practice-GuideDAO\\RecordFactory.sol:6"
            },
            {
              "label": "record",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "StringRecord",
              "src": "contracts\\practice-GuideDAO\\RecordFactory.sol:21"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/RecordFactoryENS.sol:AddressRecord": {
        "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:43",
        "version": {
          "withMetadata": "4cd61be35a30a4f23ae08f291c089b0e165dc13dd59d6e91391a134d3a1c96a4",
          "withoutMetadata": "2f55071992d7669a2a0dd4ebe1e3e99c103d1d2dfa26bcf7e8c5a1b2e1ccf955",
          "linkedWithoutMetadata": "2f55071992d7669a2a0dd4ebe1e3e99c103d1d2dfa26bcf7e8c5a1b2e1ccf955"
        },
        "inherit": [
          "contracts/practice-GuideDAO/RecordFactoryENS.sol:Record"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "getRecordType()",
          "setRecord(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AddressRecord",
            "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:46"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "timeOfCreation",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Record",
              "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:15"
            },
            {
              "label": "record",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "AddressRecord",
              "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/RecordFactoryENS.sol:AddressRecordFactory": {
        "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:152",
        "version": {
          "withMetadata": "4f53778bd7482c27fe8c1460f555f8d1a03aa3b960003e584cc8f9e1a4eb3d46",
          "withoutMetadata": "1f3a391579af0757d13b73aa756d6a40e46a93b93ff323ddd3047fc6184db4a9",
          "linkedWithoutMetadata": "1f3a391579af0757d13b73aa756d6a40e46a93b93ff323ddd3047fc6184db4a9"
        },
        "inherit": [
          "contracts/practice-GuideDAO/RecordFactoryENS.sol:BaseRecordFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addAddressRecord(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AddressRecordFactory",
            "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:153"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "recordsStorage",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IRecordStorage)13842",
              "contract": "BaseRecordFactory",
              "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:127"
            }
          ],
          "types": {
            "t_contract(IRecordStorage)13842": {
              "label": "contract IRecordStorage",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/RecordFactoryENS.sol:BaseRecordFactory": {
        "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:126",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseRecordFactory",
            "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:129"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "recordsStorage",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IRecordStorage)13842",
              "contract": "BaseRecordFactory",
              "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:127"
            }
          ],
          "types": {
            "t_contract(IRecordStorage)13842": {
              "label": "contract IRecordStorage",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/RecordFactoryENS.sol:EnsRecord": {
        "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:62",
        "version": {
          "withMetadata": "5fd2d8afe801d72e3b546fbe1df2c752d5cdcbd5257223b454dee824a7b05c00",
          "withoutMetadata": "e25139e3b1cdca89309426835511943939a5c08eab210d50fca48c7d80066ead",
          "linkedWithoutMetadata": "e25139e3b1cdca89309426835511943939a5c08eab210d50fca48c7d80066ead"
        },
        "inherit": [
          "contracts/practice-GuideDAO/RecordFactoryENS.sol:Record"
        ],
        "libraries": [],
        "methods": [
          "(string,address)",
          "getRecordType()",
          "setOwner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EnsRecord",
            "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "timeOfCreation",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Record",
              "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:15"
            },
            {
              "label": "domain",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "EnsRecord",
              "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:63"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "EnsRecord",
              "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/RecordFactoryENS.sol:EnsRecordFactory": {
        "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:164",
        "version": {
          "withMetadata": "a50728e5fe65f6df7ca0aefbb79d99e2a072fbb483a8b0e3783ff47625b771f7",
          "withoutMetadata": "74cece2c8ac24a9b3473ccb72d2f1b763614efa654bf4016d98a0ef38429f8ac",
          "linkedWithoutMetadata": "74cece2c8ac24a9b3473ccb72d2f1b763614efa654bf4016d98a0ef38429f8ac"
        },
        "inherit": [
          "contracts/practice-GuideDAO/RecordFactoryENS.sol:BaseRecordFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addEnsRecord(string,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EnsRecordFactory",
            "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:165"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "recordsStorage",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IRecordStorage)13842",
              "contract": "BaseRecordFactory",
              "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:127"
            }
          ],
          "types": {
            "t_contract(IRecordStorage)13842": {
              "label": "contract IRecordStorage",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/RecordFactoryENS.sol:IRecordStorage": {
        "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addRecord(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/RecordFactoryENS.sol:Record": {
        "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Record",
            "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "timeOfCreation",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Record",
              "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:15"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/RecordFactoryENS.sol:RecordFactory": {
        "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:83",
        "version": {
          "withMetadata": "ef8283150a904e24872f73631683a772afe10d67a49060430a0a468b027dd208",
          "withoutMetadata": "17e74b503b0902fb7da99f95c330c29e43a024bc00cae63da7e54ff416e3d4d3",
          "linkedWithoutMetadata": "17e74b503b0902fb7da99f95c330c29e43a024bc00cae63da7e54ff416e3d4d3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "addRecord(string)",
          "addRecord(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "records",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_contract(Record)13854)dyn_storage",
              "contract": "RecordFactory",
              "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:84"
            }
          ],
          "types": {
            "t_array(t_contract(Record)13854)dyn_storage": {
              "label": "contract Record[]",
              "numberOfBytes": "32"
            },
            "t_contract(Record)13854": {
              "label": "contract Record",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/RecordFactoryENS.sol:RecordsStorage": {
        "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:101",
        "version": {
          "withMetadata": "96a30e446244d39341aadfe750e05bbb4c5f1cf55702bd9e34685aa48d79d287",
          "withoutMetadata": "97c0bcdf96a25faa0f983e687ec405acac2b762c527878ffd0bebdceca321b17",
          "linkedWithoutMetadata": "97c0bcdf96a25faa0f983e687ec405acac2b762c527878ffd0bebdceca321b17"
        },
        "inherit": [
          "contracts/practice-GuideDAO/RecordFactoryENS.sol:IRecordStorage",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addRecord(address)",
          "addFactory(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RecordsStorage",
            "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "records",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_contract(Record)13854)dyn_storage",
              "contract": "RecordsStorage",
              "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:102"
            },
            {
              "label": "factories",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "RecordsStorage",
              "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_contract(Record)13854)dyn_storage": {
              "label": "contract Record[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(Record)13854": {
              "label": "contract Record",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/RecordFactoryENS.sol:StringRecord": {
        "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:23",
        "version": {
          "withMetadata": "0a22240f8374c4c2052b47603dd56b4d6bf43b15eb159789c490cbf614082734",
          "withoutMetadata": "cacf6a88e47e31e5a0fb7029fb242907bb2b8103665ee666e810619af7d221b1",
          "linkedWithoutMetadata": "cacf6a88e47e31e5a0fb7029fb242907bb2b8103665ee666e810619af7d221b1"
        },
        "inherit": [
          "contracts/practice-GuideDAO/RecordFactoryENS.sol:Record"
        ],
        "libraries": [],
        "methods": [
          "(string)",
          "getRecordType()",
          "setRecord(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StringRecord",
            "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "timeOfCreation",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Record",
              "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:15"
            },
            {
              "label": "record",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "StringRecord",
              "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:24"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/RecordFactoryENS.sol:StringRecordFactory": {
        "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:141",
        "version": {
          "withMetadata": "aa486656d009ea7dfba9bddc4d9e52500c4504cca4c6b631823939429f9f3223",
          "withoutMetadata": "a0b9b69871eb0085050385316040b85f307076a06580fa4b8e66f727f71fb695",
          "linkedWithoutMetadata": "a0b9b69871eb0085050385316040b85f307076a06580fa4b8e66f727f71fb695"
        },
        "inherit": [
          "contracts/practice-GuideDAO/RecordFactoryENS.sol:BaseRecordFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addStringRecord(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "StringRecordFactory",
            "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:142"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "recordsStorage",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IRecordStorage)13842",
              "contract": "BaseRecordFactory",
              "src": "contracts\\practice-GuideDAO\\RecordFactoryENS.sol:127"
            }
          ],
          "types": {
            "t_contract(IRecordStorage)13842": {
              "label": "contract IRecordStorage",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/SharedWallet.sol:SharedWallet": {
        "src": "contracts\\practice-GuideDAO\\SharedWallet.sol:7",
        "version": {
          "withMetadata": "f9dc5410abdfe30eb532535b6a2f8c7b86ca5ee9d66519e83ffd9be2a039cb78",
          "withoutMetadata": "48898a7ff7da2f568be6fa2ff63d492a5310018ce2e3379ac5d299175f4cba9d",
          "linkedWithoutMetadata": "48898a7ff7da2f568be6fa2ff63d492a5310018ce2e3379ac5d299175f4cba9d"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addMember(address,string,uint256,bool)",
          "setLimit(address,uint256)",
          "renounceOwnership()",
          "makeAdmin(address)",
          "revokeAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SharedWallet",
            "src": "contracts\\practice-GuideDAO\\SharedWallet.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "members",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(Member)14209_storage)",
              "contract": "SharedWallet",
              "src": "contracts\\practice-GuideDAO\\SharedWallet.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Member)14209_storage)": {
              "label": "mapping(address => struct SharedWallet.Member)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Member)14209_storage": {
              "label": "struct SharedWallet.Member",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "limit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "is_admin",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/TodoList.sol:TodoList": {
        "src": "contracts\\practice-GuideDAO\\TodoList.sol:12",
        "version": {
          "withMetadata": "d5091244be3c501ccfa618a70bbb4f33fb377d3b198c404f720a18317fb5cde3",
          "withoutMetadata": "11870194523f5c815df95004376bfa8fb3cd8dd08049b0310323c44d576e6477",
          "linkedWithoutMetadata": "11870194523f5c815df95004376bfa8fb3cd8dd08049b0310323c44d576e6477"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "addTodo(string,string,bool)",
          "changeTitle(string,uint256)",
          "getTodo(uint256)",
          "changeTodoStatus(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TodoList",
            "src": "contracts\\practice-GuideDAO\\TodoList.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TodoList",
              "src": "contracts\\practice-GuideDAO\\TodoList.sol:12"
            },
            {
              "label": "todos",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_struct(Todo)14435_storage)dyn_storage",
              "contract": "TodoList",
              "src": "contracts\\practice-GuideDAO\\TodoList.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Todo)14435_storage)dyn_storage": {
              "label": "struct TodoList.Todo[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Todo)14435_storage": {
              "label": "struct TodoList.Todo",
              "members": [
                {
                  "label": "title",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/Voting.sol:Voting": {
        "src": "contracts\\practice-GuideDAO\\Voting.sol:5",
        "version": {
          "withMetadata": "9cf67b2412a4ca09032f90362358656c7a21218142d60598be83726c67dc176e",
          "withoutMetadata": "e79f154391682f7e2d926d6634bbb10959b80d262cadc39e24a878e6a119328d",
          "linkedWithoutMetadata": "e79f154391682f7e2d926d6634bbb10959b80d262cadc39e24a878e6a119328d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address)",
          "vote(bytes32)",
          "addCandidate(string,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Voting",
            "src": "contracts\\practice-GuideDAO\\Voting.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "VOTING_STARTS_AT",
            "src": "contracts\\practice-GuideDAO\\Voting.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "candidates",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(Candidate)14570_storage)",
              "contract": "Voting",
              "src": "contracts\\practice-GuideDAO\\Voting.sol:14"
            },
            {
              "label": "allCandidates",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "Voting",
              "src": "contracts\\practice-GuideDAO\\Voting.sol:15"
            },
            {
              "label": "registeredCandidate",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Voting",
              "src": "contracts\\practice-GuideDAO\\Voting.sol:16"
            },
            {
              "label": "voters",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "Voting",
              "src": "contracts\\practice-GuideDAO\\Voting.sol:17"
            },
            {
              "label": "VOTING_CREATED_AT",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Voting",
              "src": "contracts\\practice-GuideDAO\\Voting.sol:21"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Voting",
              "src": "contracts\\practice-GuideDAO\\Voting.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Candidate)14570_storage)": {
              "label": "mapping(bytes32 => struct Voting.Candidate)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Candidate)14570_storage": {
              "label": "struct Voting.Candidate",
              "members": [
                {
                  "label": "uid",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "surname",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "age",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "from",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/Wallet.sol:Wallet": {
        "src": "contracts\\practice-GuideDAO\\Wallet.sol:7",
        "version": {
          "withMetadata": "d978eab1e1cbc657696d6c4c6462112030a21b30c804fae96db906ae6f052b6d",
          "withoutMetadata": "36b6390cced1effe7b0a2ccac2d2c2fb447b2b037813c103f0460d3a56ee8060",
          "linkedWithoutMetadata": "36b6390cced1effe7b0a2ccac2d2c2fb447b2b037813c103f0460d3a56ee8060"
        },
        "inherit": [
          "contracts/practice-GuideDAO/SharedWallet.sol:SharedWallet",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "withdrawMoney(uint256)",
          "sendToContract(address)",
          "getBalance()",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Wallet",
            "src": "contracts\\practice-GuideDAO\\Wallet.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "members",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(Member)14209_storage)",
              "contract": "SharedWallet",
              "src": "contracts\\practice-GuideDAO\\SharedWallet.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Member)14209_storage)": {
              "label": "mapping(address => struct SharedWallet.Member)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Member)14209_storage": {
              "label": "struct SharedWallet.Member",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "limit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "is_admin",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/security/AuctionDenialOfService.sol:AuctionDenialOfService": {
        "src": "contracts\\practice-GuideDAO\\security\\AuctionDenialOfService.sol:10",
        "version": {
          "withMetadata": "e6e44afdadd3d74c0207a92baecc2bf261c12f4f6f593178d0fc561fd33f2474",
          "withoutMetadata": "cf4b6be2ac04b274f7b63644a891cab0db980671d496f8b6cc3cbd68a9092fd3",
          "linkedWithoutMetadata": "cf4b6be2ac04b274f7b63644a891cab0db980671d496f8b6cc3cbd68a9092fd3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "bid()",
          "refund()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bids",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "AuctionDenialOfService",
              "src": "contracts\\practice-GuideDAO\\security\\AuctionDenialOfService.sol:14"
            },
            {
              "label": "bidders",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AuctionDenialOfService",
              "src": "contracts\\practice-GuideDAO\\security\\AuctionDenialOfService.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/security/AuctionDenialOfService.sol:Hack": {
        "src": "contracts\\practice-GuideDAO\\security\\AuctionDenialOfService.sol:75",
        "version": {
          "withMetadata": "7fb1995a108c6058cdbc112faccf5bd1e11f8f2bca8481973dc04eeebc0cb328",
          "withoutMetadata": "00e92f0dc6f3d36970ce5ac5dff4b26ec3e079ad131d75128e4993add5763927",
          "linkedWithoutMetadata": "00e92f0dc6f3d36970ce5ac5dff4b26ec3e079ad131d75128e4993add5763927"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "disableHacking()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Hack",
            "src": "contracts\\practice-GuideDAO\\security\\AuctionDenialOfService.sol:97"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isHackingEnabled",
            "src": "contracts\\practice-GuideDAO\\security\\AuctionDenialOfService.sol:89"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "toHack",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(AuctionDenialOfService)15008",
              "contract": "Hack",
              "src": "contracts\\practice-GuideDAO\\security\\AuctionDenialOfService.sol:76"
            },
            {
              "label": "isHackingEnabled",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Hack",
              "src": "contracts\\practice-GuideDAO\\security\\AuctionDenialOfService.sol:89"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AuctionDenialOfService)15008": {
              "label": "contract AuctionDenialOfService",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/security/AuctionReentrancy.sol:AuctionReentrancy": {
        "src": "contracts\\practice-GuideDAO\\security\\AuctionReentrancy.sol:11",
        "version": {
          "withMetadata": "6546b898915738f20dad6e3bf8904e7d58b5b762b5c14257252174354079a7d0",
          "withoutMetadata": "2232fddec13e374d2a078f8c2a89a2a0b79bcbf0819c29a3c3a274cc58c69555",
          "linkedWithoutMetadata": "2232fddec13e374d2a078f8c2a89a2a0b79bcbf0819c29a3c3a274cc58c69555"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "bid()",
          "refund()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "bids",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "AuctionReentrancy",
              "src": "contracts\\practice-GuideDAO\\security\\AuctionReentrancy.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/security/AuctionReentrancy.sol:Hack": {
        "src": "contracts\\practice-GuideDAO\\security\\AuctionReentrancy.sol:65",
        "version": {
          "withMetadata": "b4b90ad899d99599d97a040fab3468081c62545370ee6f82df9f993b45b00f2b",
          "withoutMetadata": "794ff195df4fa9fc1b868cd4d08f8c64c45ee47a662d13c8d590c0f43cdb9ee8",
          "linkedWithoutMetadata": "794ff195df4fa9fc1b868cd4d08f8c64c45ee47a662d13c8d590c0f43cdb9ee8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "hack()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Hack",
            "src": "contracts\\practice-GuideDAO\\security\\AuctionReentrancy.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "toHack",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(AuctionReentrancy)15132",
              "contract": "Hack",
              "src": "contracts\\practice-GuideDAO\\security\\AuctionReentrancy.sol:67"
            }
          ],
          "types": {
            "t_contract(AuctionReentrancy)15132": {
              "label": "contract AuctionReentrancy",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/security/AuctionTxOrigin.sol:AuctionTxOrigin": {
        "src": "contracts\\practice-GuideDAO\\security\\AuctionTxOrigin.sol:12",
        "version": {
          "withMetadata": "39d439408ca88d7689b8a38b8e920b54aa37de0e9477c676f3ac9bfb97415669",
          "withoutMetadata": "c4a8fb6f6fe9544d4e218feb33b2af10aef9b7e4c6795df44dc291205f5de035",
          "linkedWithoutMetadata": "c4a8fb6f6fe9544d4e218feb33b2af10aef9b7e4c6795df44dc291205f5de035"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "withdraw(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AuctionTxOrigin",
            "src": "contracts\\practice-GuideDAO\\security\\AuctionTxOrigin.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "AuctionTxOrigin",
              "src": "contracts\\practice-GuideDAO\\security\\AuctionTxOrigin.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/security/AuctionTxOrigin.sol:Hack": {
        "src": "contracts\\practice-GuideDAO\\security\\AuctionTxOrigin.sol:69",
        "version": {
          "withMetadata": "03d9075e5c684e9217cf2cc7c04d7af26753f5e29093479508097874f7276bb2",
          "withoutMetadata": "9cb70d3b40abbe3738642178019bbd358356116a87b4b4c3635fb80f6d95de06",
          "linkedWithoutMetadata": "9cb70d3b40abbe3738642178019bbd358356116a87b4b4c3635fb80f6d95de06"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address payable)",
          "getYourMoney()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Hack",
            "src": "contracts\\practice-GuideDAO\\security\\AuctionTxOrigin.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "toHack",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(AuctionTxOrigin)15259",
              "contract": "Hack",
              "src": "contracts\\practice-GuideDAO\\security\\AuctionTxOrigin.sol:70"
            }
          ],
          "types": {
            "t_contract(AuctionTxOrigin)15259": {
              "label": "contract AuctionTxOrigin",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/security/BankHoneypot.sol:BankHoneypot": {
        "src": "contracts\\practice-GuideDAO\\security\\BankHoneypot.sol:12",
        "version": {
          "withMetadata": "1d55bcb7a6eb056909656f381fa1687fdef521385344beadb600d1d1e4e77ece",
          "withoutMetadata": "beac2f2918744ccceeb018afbd1e598190784a5b369e4f951b95a20d6012d71e",
          "linkedWithoutMetadata": "beac2f2918744ccceeb018afbd1e598190784a5b369e4f951b95a20d6012d71e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BankHoneypot",
            "src": "contracts\\practice-GuideDAO\\security\\BankHoneypot.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "logger",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ILogger)15414",
              "contract": "BankHoneypot",
              "src": "contracts\\practice-GuideDAO\\security\\BankHoneypot.sol:17"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BankHoneypot",
              "src": "contracts\\practice-GuideDAO\\security\\BankHoneypot.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ILogger)15414": {
              "label": "contract ILogger",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/security/BankHoneypot.sol:Honeypot": {
        "src": "contracts\\practice-GuideDAO\\security\\BankHoneypot.sol:94",
        "version": {
          "withMetadata": "56c067dfbaabf44697a302a6c43bd5528742d35c9a00afdec1c1069de96ad82d",
          "withoutMetadata": "dc867581a5aa4a0b3726488352b8698d69c6e5ab5dc73b688421f2ab2bc454ad",
          "linkedWithoutMetadata": "dc867581a5aa4a0b3726488352b8698d69c6e5ab5dc73b688421f2ab2bc454ad"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "log(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/security/BankHoneypot.sol:ILogger": {
        "src": "contracts\\practice-GuideDAO\\security\\BankHoneypot.sol:73",
        "inherit": [],
        "libraries": [],
        "methods": [
          "log(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/security/BankHoneypot.sol:Logger": {
        "src": "contracts\\practice-GuideDAO\\security\\BankHoneypot.sol:85",
        "version": {
          "withMetadata": "6014509bf5b8bd010b8465cc9a4c35d40c50469076551e48c146ed2bb36f41dd",
          "withoutMetadata": "b936559ddad542477c40fabf2a16209ed1e39aba6e8d2d6cc79d5213a8b4998d",
          "linkedWithoutMetadata": "b936559ddad542477c40fabf2a16209ed1e39aba6e8d2d6cc79d5213a8b4998d"
        },
        "inherit": [
          "contracts/practice-GuideDAO/security/BankHoneypot.sol:ILogger"
        ],
        "libraries": [],
        "methods": [
          "log(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-GuideDAO/security/GameCommitReveal.sol:GameCommitRevaal": {
        "src": "contracts\\practice-GuideDAO\\security\\GameCommitReveal.sol:12",
        "version": {
          "withMetadata": "431ca1fbcf64b535b8a7a56fde3f22c7a71d4f17857b0e50e7d35c6f477e4665",
          "withoutMetadata": "432710650950c366e4e6cbd69e231810561af5319eae6bc3140d695c18bded5d",
          "linkedWithoutMetadata": "432710650950c366e4e6cbd69e231810561af5319eae6bc3140d695c18bded5d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(bytes32)",
          "reveal(uint256,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GameCommitRevaal",
            "src": "contracts\\practice-GuideDAO\\security\\GameCommitReveal.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "secretNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "GameCommitRevaal",
              "src": "contracts\\practice-GuideDAO\\security\\GameCommitReveal.sol:17"
            },
            {
              "label": "hashedSecretNumber",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "GameCommitRevaal",
              "src": "contracts\\practice-GuideDAO\\security\\GameCommitReveal.sol:25"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/Adder.sol:Adder": {
        "src": "contracts\\practice-junior\\Adder.sol:9",
        "version": {
          "withMetadata": "8121d6322744e0546cd758da477597d2bbbd281f733deaf6cc86c112841fcf10",
          "withoutMetadata": "8b0c98f62f5abfd0dd8f8b6b2db97ed2243c63145db35faa394e2ed278e89763",
          "linkedWithoutMetadata": "8b0c98f62f5abfd0dd8f8b6b2db97ed2243c63145db35faa394e2ed278e89763"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "add(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/AddressMap.sol:AddressMap": {
        "src": "contracts\\practice-junior\\AddressMap.sol:10",
        "version": {
          "withMetadata": "ff2051817fd613b280d1f4f52e46baf095fa3a794f3700be2577ba8754820878",
          "withoutMetadata": "ccd00a40791211c2d68359d4fa89842893a250b8e122973b48d82f97ff4f8dce",
          "linkedWithoutMetadata": "ccd00a40791211c2d68359d4fa89842893a250b8e122973b48d82f97ff4f8dce"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setBalance(address,uint256)",
          "getBalance(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "AddressMap",
              "src": "contracts\\practice-junior\\AddressMap.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/ArrayContract.sol:ArrayContract": {
        "src": "contracts\\practice-junior\\ArrayContract.sol:8",
        "version": {
          "withMetadata": "d895de74cc7fe6172e44ddbc86a49fe20272f7def4fc63f8c52e6de0443d506a",
          "withoutMetadata": "316fa37ca9d4f1e2666dd841156aa9686d9eed335375295906d74400823dc515",
          "linkedWithoutMetadata": "316fa37ca9d4f1e2666dd841156aa9686d9eed335375295906d74400823dc515"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "addArray(uint256)",
          "getArray()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "array",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ArrayContract",
              "src": "contracts\\practice-junior\\ArrayContract.sol:10"
            }
          ],
          "types": {
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/ArrayCount.sol:ArrayCount": {
        "src": "contracts\\practice-junior\\ArrayCount.sol:9",
        "version": {
          "withMetadata": "cc63745b860941e05c0335cc5b8c4f79d0cf4d4169cb92a86a33004e1c539eba",
          "withoutMetadata": "c1ca22b8fd9c47f4779fb50e21f753f11671eeb5228a6af1496f07908fca9b76",
          "linkedWithoutMetadata": "c1ca22b8fd9c47f4779fb50e21f753f11671eeb5228a6af1496f07908fca9b76"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "addNumber(uint256)",
          "getCount()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "numbers",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ArrayCount",
              "src": "contracts\\practice-junior\\ArrayCount.sol:12"
            }
          ],
          "types": {
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/ArrayDeletion.sol:ArrayDeletion": {
        "src": "contracts\\practice-junior\\ArrayDeletion.sol:10",
        "version": {
          "withMetadata": "aa87153b1be45a3d3398db763916ad57c367f27f2f8ec3a5ca8083a0f8ca4c66",
          "withoutMetadata": "c271dd961b5cab0da92705922b1483099082b61e72502f40e95ebfb4c03f26a3",
          "linkedWithoutMetadata": "c271dd961b5cab0da92705922b1483099082b61e72502f40e95ebfb4c03f26a3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "addNumber(uint256)",
          "removeNumber(uint256)",
          "getNumber(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "numbers",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ArrayDeletion",
              "src": "contracts\\practice-junior\\ArrayDeletion.sol:12"
            }
          ],
          "types": {
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/ArrayStorage.sol:ArrayStorage": {
        "src": "contracts\\practice-junior\\ArrayStorage.sol:10",
        "version": {
          "withMetadata": "6bbe02e1c348c8c376ba1577fe5351ecb3dfdadb02d0eee3634c2e83c0bfd888",
          "withoutMetadata": "9fa58e5375e4b73c1f54b4bb9f299443a6c937dc60b2c5fdd57c702a0f41c6d8",
          "linkedWithoutMetadata": "9fa58e5375e4b73c1f54b4bb9f299443a6c937dc60b2c5fdd57c702a0f41c6d8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "addNumber(uint256)",
          "getNumber(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "numbers",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ArrayStorage",
              "src": "contracts\\practice-junior\\ArrayStorage.sol:12"
            }
          ],
          "types": {
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/ArraySum.sol:ArraySum": {
        "src": "contracts\\practice-junior\\ArraySum.sol:10",
        "version": {
          "withMetadata": "7c6acff0fc5fd3eab2f39b6e2cf76e0c973bee001f0a0279639b126874541a5d",
          "withoutMetadata": "965eeac04f67e3bff977ede3252d5570e29b46f017d4f8b7a159c26fadbf007c",
          "linkedWithoutMetadata": "965eeac04f67e3bff977ede3252d5570e29b46f017d4f8b7a159c26fadbf007c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "addNumber(uint256)",
          "getSum()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "numbers",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ArraySum",
              "src": "contracts\\practice-junior\\ArraySum.sol:13"
            }
          ],
          "types": {
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/BooleanStorage.sol:BooleanStorage": {
        "src": "contracts\\practice-junior\\BooleanStorage.sol:11",
        "version": {
          "withMetadata": "d62c1fb19c6366f5748dfa0ed068659d1bbf08222444dc7a8a1b473248e0af2b",
          "withoutMetadata": "1ce3b64c911eabbd295178894d0b00a600f367411532dd47ee9956f4fd2b4d14",
          "linkedWithoutMetadata": "1ce3b64c911eabbd295178894d0b00a600f367411532dd47ee9956f4fd2b4d14"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "set(bool)",
          "get()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "storedBoolean",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "BooleanStorage",
              "src": "contracts\\practice-junior\\BooleanStorage.sol:13"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/CallLimiter.sol:CallLimiter": {
        "src": "contracts\\practice-junior\\CallLimiter.sol:8",
        "version": {
          "withMetadata": "486f0715646b1228bfcc783cf3611ebd89e5739f756a07990ae4c43befc5bc4f",
          "withoutMetadata": "77bd0e55758d0f32405d6e0b46c0271a11599d8973a1a36851dc616d50618d13",
          "linkedWithoutMetadata": "77bd0e55758d0f32405d6e0b46c0271a11599d8973a1a36851dc616d50618d13"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,uint256)",
          "limitedFunction()",
          "resetCounter()",
          "updateMaxCalls(uint256)",
          "updateRewardAmount(uint256)",
          "deposit()",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CallLimiter",
            "src": "contracts\\practice-junior\\CallLimiter.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "CallLimiter",
              "src": "contracts\\practice-junior\\CallLimiter.sol:9"
            },
            {
              "label": "maxCalls",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "CallLimiter",
              "src": "contracts\\practice-junior\\CallLimiter.sol:10"
            },
            {
              "label": "callCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "CallLimiter",
              "src": "contracts\\practice-junior\\CallLimiter.sol:11"
            },
            {
              "label": "rewardAmount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "CallLimiter",
              "src": "contracts\\practice-junior\\CallLimiter.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/CircularBuffer.sol:CircularBuffer": {
        "src": "contracts\\practice-junior\\CircularBuffer.sol:8",
        "version": {
          "withMetadata": "362b7b41593687a6093bc0850d258704d536dfd2818b1d32371791e281a2bc0d",
          "withoutMetadata": "9d1001024a04b79bed908309e9b1e5b801e539eeb3ba7f77ae4e2609ec2d1fe2",
          "linkedWithoutMetadata": "9d1001024a04b79bed908309e9b1e5b801e539eeb3ba7f77ae4e2609ec2d1fe2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256)",
          "add(uint256)",
          "get(uint256)",
          "getSize()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CircularBuffer",
            "src": "contracts\\practice-junior\\CircularBuffer.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "buffer",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "CircularBuffer",
              "src": "contracts\\practice-junior\\CircularBuffer.sol:10"
            },
            {
              "label": "size",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "CircularBuffer",
              "src": "contracts\\practice-junior\\CircularBuffer.sol:12"
            },
            {
              "label": "index",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "CircularBuffer",
              "src": "contracts\\practice-junior\\CircularBuffer.sol:14"
            }
          ],
          "types": {
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/ConditionChecker.sol:ConditionChecker": {
        "src": "contracts\\practice-junior\\ConditionChecker.sol:9",
        "version": {
          "withMetadata": "c4baee19cce4e754f604b274b4c3aca55ab2a0400e6011e1b2ac7d48af9e70d8",
          "withoutMetadata": "f381ba94c67e3282bde7e4ad1bce5aab6522a8c11224763f6b6216d80437d1e8",
          "linkedWithoutMetadata": "f381ba94c67e3282bde7e4ad1bce5aab6522a8c11224763f6b6216d80437d1e8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "executeIfPositive(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/DataStorage.sol:DataStorage": {
        "src": "contracts\\practice-junior\\DataStorage.sol:8",
        "version": {
          "withMetadata": "2bae552ac5feb13276a8b349ec0e3b16f0701e9f69c45801515d278ddca33e46",
          "withoutMetadata": "758b8c6cc0bfd9a22e9b498df987d2ea75e2aabd52035bed6d624c4eb7244022",
          "linkedWithoutMetadata": "758b8c6cc0bfd9a22e9b498df987d2ea75e2aabd52035bed6d624c4eb7244022"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setData(string)",
          "getData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "data",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "DataStorage",
              "src": "contracts\\practice-junior\\DataStorage.sol:10"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/Divider.sol:Divider": {
        "src": "contracts\\practice-junior\\Divider.sol:11",
        "version": {
          "withMetadata": "8f916bb0a3912d75c3b9ae2bf6fe31ae9c6baf4b9b86c20888ec1cd5869deaed",
          "withoutMetadata": "b1f87a6a45889b210315ac86c4bf6e9684db2eaf57e4ea5b511a745b73519af5",
          "linkedWithoutMetadata": "b1f87a6a45889b210315ac86c4bf6e9684db2eaf57e4ea5b511a745b73519af5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "divide(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/FeedbackContract.sol:FeedbackContract": {
        "src": "contracts\\practice-junior\\FeedbackContract.sol:9",
        "version": {
          "withMetadata": "8293ebec94e23d2474543ed995323e4fca92e95b419059c90c1bd48e363f8990",
          "withoutMetadata": "ae4a689873f560cfefdd1e0c44336fc8d24e00a44fb56cd310e4427502c3544c",
          "linkedWithoutMetadata": "ae4a689873f560cfefdd1e0c44336fc8d24e00a44fb56cd310e4427502c3544c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "perfomAction(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/IncrementWithThreshold.sol:IncrementWithThreshold": {
        "src": "contracts\\practice-junior\\IncrementWithThreshold.sol:9",
        "version": {
          "withMetadata": "a3ab98edf6a474fdb17dd46fee08ffaeab151b3fe4b2e156c6c86fc0060b040d",
          "withoutMetadata": "77a04bd9e5d1b44e707c6400e2aa3a1ec6ca0cdf7011641ecc357b63e05a78a3",
          "linkedWithoutMetadata": "77a04bd9e5d1b44e707c6400e2aa3a1ec6ca0cdf7011641ecc357b63e05a78a3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,uint256)",
          "getValue()",
          "increment()",
          "setNewThreshold(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "IncrementWithThreshold",
            "src": "contracts\\practice-junior\\IncrementWithThreshold.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "IncrementWithThreshold",
              "src": "contracts\\practice-junior\\IncrementWithThreshold.sol:12"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "IncrementWithThreshold",
              "src": "contracts\\practice-junior\\IncrementWithThreshold.sol:14"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/InputValidation.sol:InputValidation": {
        "src": "contracts\\practice-junior\\InputValidation.sol:11",
        "version": {
          "withMetadata": "a39e5213a9249d6f1bb94476134341cb495f0e727f13abc0834384a230e3b90f",
          "withoutMetadata": "96a0dfffabf42facf3c3aa0bbe5cdb1239f5eca733bf8c6bb971e7790567ead3",
          "linkedWithoutMetadata": "96a0dfffabf42facf3c3aa0bbe5cdb1239f5eca733bf8c6bb971e7790567ead3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "validation(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/KeyExistence.sol:KeyExistence": {
        "src": "contracts\\practice-junior\\KeyExistence.sol:9",
        "version": {
          "withMetadata": "fed8646905eb23a4ffbdd7f5753410b4bed13eb7e48e658a4084b6a44bd5cc8d",
          "withoutMetadata": "499a95c7b429754835575afafb22a56231d31f6be66f0da4c37d119da7474b40",
          "linkedWithoutMetadata": "499a95c7b429754835575afafb22a56231d31f6be66f0da4c37d119da7474b40"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "addBalance(address,uint256)",
          "exists(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "KeyExistence",
              "src": "contracts\\practice-junior\\KeyExistence.sol:12"
            },
            {
              "label": "keyExists",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "KeyExistence",
              "src": "contracts\\practice-junior\\KeyExistence.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/MultiReturnExample.sol:MultiReturnExample": {
        "src": "contracts\\practice-junior\\MultiReturnExample.sol:8",
        "version": {
          "withMetadata": "e42b3caeeb1c8370d64b2e206ea41fb8c63eb27eec838a2cedfc8f65afa9ed54",
          "withoutMetadata": "c87675c0f802c2dfc5de2d5f158a123816f0f180d060c0891c10c2ab80916559",
          "linkedWithoutMetadata": "c87675c0f802c2dfc5de2d5f158a123816f0f180d060c0891c10c2ab80916559"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getValues()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/Multiplier.sol:Multiplier": {
        "src": "contracts\\practice-junior\\Multiplier.sol:15",
        "version": {
          "withMetadata": "4a5bac5ea546b29e3e3bf226f5b5776e347cd93057336cf16fee579b8b54148e",
          "withoutMetadata": "be65721b1255e963a9250ead4c1bb14b37fe867466bd40b7ff2d3177e71bbb95",
          "linkedWithoutMetadata": "be65721b1255e963a9250ead4c1bb14b37fe867466bd40b7ff2d3177e71bbb95"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "multiply(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/OwnerContract.sol:OwnerContract": {
        "src": "contracts\\practice-junior\\OwnerContract.sol:12",
        "version": {
          "withMetadata": "d6f3314cb7688c057e25b152fc2e4e08a7b7006278250710d0e031e3017c2918",
          "withoutMetadata": "221dffc5fdcb51330f0702044959dd3f62818f099960ebf20046156399c13c25",
          "linkedWithoutMetadata": "221dffc5fdcb51330f0702044959dd3f62818f099960ebf20046156399c13c25"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "changeOwner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OwnerContract",
            "src": "contracts\\practice-junior\\OwnerContract.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "OwnerContract",
              "src": "contracts\\practice-junior\\OwnerContract.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/RestrictedAccess.sol:RestrictedAccess": {
        "src": "contracts\\practice-junior\\RestrictedAccess.sol:10",
        "version": {
          "withMetadata": "6ee2ddf3c789aebdd36378bc25ae8eaad08cc6d985010164b93a5dd5318a97bc",
          "withoutMetadata": "baf5f3a163aeec2a1fae7b511d672213200731b74bf14cb4c1822d641936ff53",
          "linkedWithoutMetadata": "baf5f3a163aeec2a1fae7b511d672213200731b74bf14cb4c1822d641936ff53"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "restrictedFucnion()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RestrictedAccess",
            "src": "contracts\\practice-junior\\RestrictedAccess.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allowedAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "RestrictedAccess",
              "src": "contracts\\practice-junior\\RestrictedAccess.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/RoleBasedAccessControl.sol:RoleBasedAccessControl": {
        "src": "contracts\\practice-junior\\RoleBasedAccessControl.sol:12",
        "version": {
          "withMetadata": "a8d994087cbf088b5acd4811a294a24bfb726565f54e2a0d0ed4c3f2cfb20e6c",
          "withoutMetadata": "bef2725f4c007ce6e2d8ed85f7f8cf435580424154fbdec78dcb1eab8a74f1dc",
          "linkedWithoutMetadata": "bef2725f4c007ce6e2d8ed85f7f8cf435580424154fbdec78dcb1eab8a74f1dc"
        },
        "inherit": [
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "adminFunction()",
          "userFunction()",
          "addUser(address)",
          "removeUser(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RoleBasedAccessControl",
            "src": "contracts\\practice-junior\\RoleBasedAccessControl.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin\\contracts\\access\\AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)21_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/SimpleStorage.sol:SimpleStorage": {
        "src": "contracts\\practice-junior\\SimpleStorage.sol:10",
        "version": {
          "withMetadata": "13614db14e6dbff74ff579aa6cb93a834d0347b3d51b87fa33d63d8dc72a19d3",
          "withoutMetadata": "c5432b95399fc4b252f2d3d263dba0a8bbbf1218a035744b1a50ea25a4b79146",
          "linkedWithoutMetadata": "c5432b95399fc4b252f2d3d263dba0a8bbbf1218a035744b1a50ea25a4b79146"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "set(uint256)",
          "get()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "storedData",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SimpleStorage",
              "src": "contracts\\practice-junior\\SimpleStorage.sol:12"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/StringStorage.sol:StringStorage": {
        "src": "contracts\\practice-junior\\StringStorage.sol:10",
        "version": {
          "withMetadata": "9fc8ed863674021bed6b136c9f4f2473c7522566db9c0d15a2d07871fe3e0026",
          "withoutMetadata": "70316c781cd5ce2a17c81177a17cc10bf3d35a0083f27697f21832072dc2a029",
          "linkedWithoutMetadata": "70316c781cd5ce2a17c81177a17cc10bf3d35a0083f27697f21832072dc2a029"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "set(string)",
          "get()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "storedString",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "StringStorage",
              "src": "contracts\\practice-junior\\StringStorage.sol:12"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/Subtracter.sol:Subtracter": {
        "src": "contracts\\practice-junior\\Subtracter.sol:10",
        "version": {
          "withMetadata": "48a74b0563e69e2dcfc7c2dde95714662c0e3ebd6c7e6e120e7c135ac488679b",
          "withoutMetadata": "d20e4a48ab8b4279e76f720ea5c87066a46c8aa2b29ac6352301070f957757e3",
          "linkedWithoutMetadata": "d20e4a48ab8b4279e76f720ea5c87066a46c8aa2b29ac6352301070f957757e3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "subtract(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/TimedLock.sol:TimedLock": {
        "src": "contracts\\practice-junior\\TimedLock.sol:10",
        "version": {
          "withMetadata": "e86ea10bb5827429d00665f6136bac3c22d1a4e0d4f6e6226248e99efd605b5c",
          "withoutMetadata": "6b236745db921f1d063cb745f4b83ed096ba6d10a1c2bd954a120f9e7b8c2f82",
          "linkedWithoutMetadata": "6b236745db921f1d063cb745f4b83ed096ba6d10a1c2bd954a120f9e7b8c2f82"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256)",
          "executed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedLock",
            "src": "contracts\\practice-junior\\TimedLock.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "lastExecuted",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TimedLock",
              "src": "contracts\\practice-junior\\TimedLock.sol:13"
            },
            {
              "label": "lockTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TimedLock",
              "src": "contracts\\practice-junior\\TimedLock.sol:16"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/TimestampRecorder.sol:TimestampRecorder": {
        "src": "contracts\\practice-junior\\TimestampRecorder.sol:9",
        "version": {
          "withMetadata": "d4641883f6e40967dc5c0a6125c0f26b765f63335220f2775f08245387002ecc",
          "withoutMetadata": "578f9ec56d9e2d3616d95a2b83a4d8868feac9be5ce9120e095217011b544073",
          "linkedWithoutMetadata": "578f9ec56d9e2d3616d95a2b83a4d8868feac9be5ce9120e095217011b544073"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateTimestamp()",
          "getLustUpdated()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "lustUpdated",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "TimestampRecorder",
              "src": "contracts\\practice-junior\\TimestampRecorder.sol:11"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/UniqueArray.sol:UniqueArray": {
        "src": "contracts\\practice-junior\\UniqueArray.sol:8",
        "version": {
          "withMetadata": "e91397389cb41c9aabf2bbe5d90b3a8c850b346c82fb60c3a4a39975307296de",
          "withoutMetadata": "6af69a6ed929677a4e2b0d9a85f9b835929975b289ca33d9dda7bd4433fa723f",
          "linkedWithoutMetadata": "6af69a6ed929677a4e2b0d9a85f9b835929975b289ca33d9dda7bd4433fa723f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "addUniqueValues(uint256)",
          "getValue(uint256)",
          "getValues()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "uniqueValues",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "UniqueArray",
              "src": "contracts\\practice-junior\\UniqueArray.sol:10"
            }
          ],
          "types": {
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/UniqueCount.sol:UniqueCount": {
        "src": "contracts\\practice-junior\\UniqueCount.sol:9",
        "version": {
          "withMetadata": "58220246cfd01d8efb15196afb3c8bd21c7594cbd5d286bb6d9fe0dff2204bdf",
          "withoutMetadata": "4d5963370d37c391ffcc957414b04a603543b68ab5263656a48f1614b6ad0d80",
          "linkedWithoutMetadata": "4d5963370d37c391ffcc957414b04a603543b68ab5263656a48f1614b6ad0d80"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "addUniqueValue(uint256)",
          "getUniqueCount()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "uniqueValues",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "UniqueCount",
              "src": "contracts\\practice-junior\\UniqueCount.sol:11"
            }
          ],
          "types": {
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-junior/Validator.sol:Validator": {
        "src": "contracts\\practice-junior\\Validator.sol:8",
        "version": {
          "withMetadata": "0ad7c92ea23cbc95c7be182622f8bb16070a8fe61c15b1dfb1107214c87301ef",
          "withoutMetadata": "43f44161ac6f54842142093dd67995fcf512ed516875861c28e8cabdbe84a093",
          "linkedWithoutMetadata": "43f44161ac6f54842142093dd67995fcf512ed516875861c28e8cabdbe84a093"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateParameters(address,uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-middle/BaseContract.sol:BaseContract": {
        "src": "contracts\\practice-middle\\BaseContract.sol:8",
        "version": {
          "withMetadata": "6686bbdfceafd29565e7537ebaa1b733511b190b83a71ffe73ca0d3fc1fb973c",
          "withoutMetadata": "466871d2484e8316ecf86bafd06d3ba467299ff2c398bf2696e2661c3968c180",
          "linkedWithoutMetadata": "466871d2484e8316ecf86bafd06d3ba467299ff2c398bf2696e2661c3968c180"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256)",
          "setValue(uint256)",
          "getValue()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseContract",
            "src": "contracts\\practice-middle\\BaseContract.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BaseContract",
              "src": "contracts\\practice-middle\\BaseContract.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-middle/DataConsumer.sol:DataConsumer": {
        "src": "contracts\\practice-middle\\DataConsumer.sol:14",
        "version": {
          "withMetadata": "4f21b02fb1185cd1dba9b3153696b60db63457ff8e362b0772065f7044a91408",
          "withoutMetadata": "c45f11e5ebf9e7213739049846a2c584bbe53ae8208307304b61c81080adaa65",
          "linkedWithoutMetadata": "c45f11e5ebf9e7213739049846a2c584bbe53ae8208307304b61c81080adaa65"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "fetchData(address)",
          "setData(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-middle/DataProvider.sol:DataProvider": {
        "src": "contracts\\practice-middle\\DataProvider.sol:9",
        "version": {
          "withMetadata": "7ebef7f5ad952206f8dcb817d01e10f28367d46017cf4d9bc6e1036f9a192888",
          "withoutMetadata": "d798c3029b9f55d66fdf123ee27ecfb0ea3eba388619278b46d029227d98cad7",
          "linkedWithoutMetadata": "d798c3029b9f55d66fdf123ee27ecfb0ea3eba388619278b46d029227d98cad7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256)",
          "setData(uint256)",
          "getData()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DataProvider",
            "src": "contracts\\practice-middle\\DataProvider.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "data",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "DataProvider",
              "src": "contracts\\practice-middle\\DataProvider.sol:11"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-middle/EmployeeData.sol:EmployeeData": {
        "src": "contracts\\practice-middle\\EmployeeData.sol:15",
        "version": {
          "withMetadata": "9ebbd94338ebbd7f896615358aeb504c9a410ce3b9844f77e03bac5e6dc34e8a",
          "withoutMetadata": "335d7950ee5baf2f68176b8a689c9b69d151a959e514eee281a129ee18344fee",
          "linkedWithoutMetadata": "335d7950ee5baf2f68176b8a689c9b69d151a959e514eee281a129ee18344fee"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "addEmploye(uint256,string,uint256)",
          "getEmployee(uint256)",
          "getEmployeeCount()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "employees",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_struct(Employee)16979_storage)dyn_storage",
              "contract": "EmployeeData",
              "src": "contracts\\practice-middle\\EmployeeData.sol:30"
            }
          ],
          "types": {
            "t_array(t_struct(Employee)16979_storage)dyn_storage": {
              "label": "struct EmployeeData.Employee[]",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Employee)16979_storage": {
              "label": "struct EmployeeData.Employee",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "salary",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-middle/Factorial.sol:Facrtorial": {
        "src": "contracts\\practice-middle\\Factorial.sol:14",
        "version": {
          "withMetadata": "1b5ea4da1ff4d01fb36c8236686bb4d3912ee04bece2456cdc55743def342bb7",
          "withoutMetadata": "a45e6eee489a4ea1c4cfaf592096285b2ebf36efbb0676ebe405abd7ca4d82d5",
          "linkedWithoutMetadata": "a45e6eee489a4ea1c4cfaf592096285b2ebf36efbb0676ebe405abd7ca4d82d5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "factorial(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-middle/FallbackExample.sol:FallbackExample": {
        "src": "contracts\\practice-middle\\FallbackExample.sol:7",
        "version": {
          "withMetadata": "6a95330e5baa376ab53b20d92a4d77cf62b8d2ef84334041ad003235ae7398f1",
          "withoutMetadata": "566d0532f81035d7e16b2d4d1adef3ff2d9cbd8cf7774e3c2f4bb329f3a575b1",
          "linkedWithoutMetadata": "566d0532f81035d7e16b2d4d1adef3ff2d9cbd8cf7774e3c2f4bb329f3a575b1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-middle/InheritedContract.sol:InheritedContract": {
        "src": "contracts\\practice-middle\\InheritedContract.sol:10",
        "version": {
          "withMetadata": "b21d1f5d850623b49f1d4faac64c6a7fac94960a04a2721b8b66fbf152bc05a0",
          "withoutMetadata": "9eb3aae6daeb8c25e3ca28af96e14d517a70fd9fe38f25684bfe906a6949977d",
          "linkedWithoutMetadata": "9eb3aae6daeb8c25e3ca28af96e14d517a70fd9fe38f25684bfe906a6949977d"
        },
        "inherit": [
          "contracts/practice-middle/BaseContract.sol:BaseContract"
        ],
        "libraries": [],
        "methods": [
          "(uint256,string)",
          "setText(string)",
          "getText()",
          "setValue(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "InheritedContract",
            "src": "contracts\\practice-middle\\InheritedContract.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BaseContract",
              "src": "contracts\\practice-middle\\BaseContract.sol:10"
            },
            {
              "label": "text",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "InheritedContract",
              "src": "contracts\\practice-middle\\InheritedContract.sol:12"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-middle/Library.sol:Library": {
        "src": "contracts\\practice-middle\\Library.sol:16",
        "version": {
          "withMetadata": "6961e1201fb99962e5168e24355139e266dee0fa2a239b723ce64c1313a2f3f9",
          "withoutMetadata": "225362b2447c60842436a88da68bc88bd95c0d4bb097e22089b8e33a946dfb82",
          "linkedWithoutMetadata": "225362b2447c60842436a88da68bc88bd95c0d4bb097e22089b8e33a946dfb82"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "addBook(string,string,string,uint256)",
          "getBook(string)",
          "setBookAvailability(string,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "books",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Book)17189_storage)",
              "contract": "Library",
              "src": "contracts\\practice-middle\\Library.sol:33"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Book)17189_storage)": {
              "label": "mapping(string => struct Library.Book)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Book)17189_storage": {
              "label": "struct Library.Book",
              "members": [
                {
                  "label": "title",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "author",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "year",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "available",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-middle/NestedMappings.sol:NestedMappings": {
        "src": "contracts\\practice-middle\\NestedMappings.sol:7",
        "version": {
          "withMetadata": "cecb120b77bb2ceb3469ceb94721fcb9cac32d578a1ca390368d5d095f15ae0c",
          "withoutMetadata": "d86df552c5b7a54dc4b5c1f6565b08b268b800c9a5763ad30d7cea8fb4ce0295",
          "linkedWithoutMetadata": "d86df552c5b7a54dc4b5c1f6565b08b268b800c9a5763ad30d7cea8fb4ce0295"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setValue(address,string,uint256)",
          "getValue(address,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "data",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "NestedMappings",
              "src": "contracts\\practice-middle\\NestedMappings.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-middle/Power.sol:Power": {
        "src": "contracts\\practice-middle\\Power.sol:14",
        "version": {
          "withMetadata": "19b2684196f5acded82132d4e45d2c0da586560ef164fcc38bb80fb21e737535",
          "withoutMetadata": "ba23922b6ef5eb76e993cc7ae0a8cae5d622c03d575ac1e0df6a342a3b661a04",
          "linkedWithoutMetadata": "ba23922b6ef5eb76e993cc7ae0a8cae5d622c03d575ac1e0df6a342a3b661a04"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "pow(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-middle/ProductStore.sol:ProductStore": {
        "src": "contracts\\practice-middle\\ProductStore.sol:11",
        "version": {
          "withMetadata": "a23efb51b58774733515cf142206ccfda43227782a51d42bf7d806522cf9441f",
          "withoutMetadata": "fd13406e9df1fed35a57243beaf989da48689b36396bac32dc988a85a85929b4",
          "linkedWithoutMetadata": "fd13406e9df1fed35a57243beaf989da48689b36396bac32dc988a85a85929b4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "addProduct(string,uint256,uint256)",
          "getProductInfo(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "nextProductID",
            "src": "contracts\\practice-middle\\ProductStore.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "products",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(Product)17365_storage)",
              "contract": "ProductStore",
              "src": "contracts\\practice-middle\\ProductStore.sol:21"
            },
            {
              "label": "nextProductID",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ProductStore",
              "src": "contracts\\practice-middle\\ProductStore.sol:25"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_struct(Product)17365_storage)": {
              "label": "mapping(uint256 => struct ProductStore.Product)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Product)17365_storage": {
              "label": "struct ProductStore.Product",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "quantity",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-middle/ReceiveEther.sol:Receive": {
        "src": "contracts\\practice-middle\\ReceiveEther.sol:7",
        "version": {
          "withMetadata": "473f5f4aaf9f4007aec71879b3e0552f2771037912addaa033113fef2e248c5b",
          "withoutMetadata": "94d4aa9d00103b88ec683696c555911fb338b3aa086d9ee2acbab6a2ac98e957",
          "linkedWithoutMetadata": "94d4aa9d00103b88ec683696c555911fb338b3aa086d9ee2acbab6a2ac98e957"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "getBalance()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "contractBalance",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Receive",
              "src": "contracts\\practice-middle\\ReceiveEther.sol:9"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-middle/UserRegistry.sol:UserRegistry": {
        "src": "contracts\\practice-middle\\UserRegistry.sol:13",
        "version": {
          "withMetadata": "954f907285eae85d5e94a2f4af1a959daae72af67d1d5fd66f4ef28dd7cb98eb",
          "withoutMetadata": "15df1c48f5f35d957d99911dc0170dc279e99d05a412f51be51d69a666f3d67a",
          "linkedWithoutMetadata": "15df1c48f5f35d957d99911dc0170dc279e99d05a412f51be51d69a666f3d67a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerUser(string,uint8)",
          "getUser(address)",
          "setFlag(uint8,bool)",
          "getFlag(uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "users",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(User)17481_storage)",
              "contract": "UserRegistry",
              "src": "contracts\\practice-middle\\UserRegistry.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(User)17481_storage)": {
              "label": "mapping(address => struct UserRegistry.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(User)17481_storage": {
              "label": "struct UserRegistry.User",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "age",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "flags",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-middle/VotingWithDelegation.sol:VotingWithDelegation": {
        "src": "contracts\\practice-middle\\VotingWithDelegation.sol:15",
        "version": {
          "withMetadata": "c8489759d4a74034f73193c501a71124c43653f48a51d748df914e3c380acbda",
          "withoutMetadata": "46d243835f80ef151c7fbe5d0af5cabaf4153f3bf65b18f92df548c3c1be3f5f",
          "linkedWithoutMetadata": "46d243835f80ef151c7fbe5d0af5cabaf4153f3bf65b18f92df548c3c1be3f5f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(string[])",
          "registerVoter(address,uint256)",
          "delegate(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VotingWithDelegation",
            "src": "contracts\\practice-middle\\VotingWithDelegation.sol:81"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "proposals",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_struct(Proposal)17585_storage)dyn_storage",
              "contract": "VotingWithDelegation",
              "src": "contracts\\practice-middle\\VotingWithDelegation.sol:44"
            },
            {
              "label": "voters",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(Voter)17594_storage)",
              "contract": "VotingWithDelegation",
              "src": "contracts\\practice-middle\\VotingWithDelegation.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Proposal)17585_storage)dyn_storage": {
              "label": "struct VotingWithDelegation.Proposal[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Voter)17594_storage)": {
              "label": "mapping(address => struct VotingWithDelegation.Voter)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Proposal)17585_storage": {
              "label": "struct VotingWithDelegation.Proposal",
              "members": [
                {
                  "label": "description",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voteCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Voter)17594_storage": {
              "label": "struct VotingWithDelegation.Voter",
              "members": [
                {
                  "label": "weight",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "voted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "delegate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "proposalVoted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/IMathContract.sol:IMathContract": {
        "src": "contracts\\practice-module-1\\IMathContract.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "add(uint256,uint256)",
          "subtract(uint256,uint256)",
          "multiply(uint256,uint256)",
          "divide(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/InheritedMathContract.sol:InheritedMathContract": {
        "src": "contracts\\practice-module-1\\InheritedMathContract.sol:6",
        "version": {
          "withMetadata": "abc6fe8c345bd45dbf6aa32deb298a17530bd55eb8781352649fcab234255439",
          "withoutMetadata": "2ef443686a7e778838c3908fd10a3baf3c04fc900bc5c9d0d84f276e06ca5e0c",
          "linkedWithoutMetadata": "2ef443686a7e778838c3908fd10a3baf3c04fc900bc5c9d0d84f276e06ca5e0c"
        },
        "inherit": [
          "contracts/practice-module-1/MathContract.sol:MathContract"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/InterfaceMathContract.sol:InterfacrMathContract": {
        "src": "contracts\\practice-module-1\\InterfaceMathContract.sol:13",
        "version": {
          "withMetadata": "7cd6bcd695eac9b23ebbb4271e35f313ff15b175470ea00af1bbda5e6908cf31",
          "withoutMetadata": "7cf046cec280cd6cb61b94ac754360cab6a454c64e7dbc10bbe2da212cbe47ae",
          "linkedWithoutMetadata": "7cf046cec280cd6cb61b94ac754360cab6a454c64e7dbc10bbe2da212cbe47ae"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "addNumber(uint256,uint256)",
          "subtractNumber(uint256,uint256)",
          "multiplyNumber(uint256,uint256)",
          "divideNumber(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "InterfacrMathContract",
            "src": "contracts\\practice-module-1\\InterfaceMathContract.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "mathContract",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IMathContract)17767",
              "contract": "InterfacrMathContract",
              "src": "contracts\\practice-module-1\\InterfaceMathContract.sol:17"
            }
          ],
          "types": {
            "t_contract(IMathContract)17767": {
              "label": "contract IMathContract",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/Lesson.sol:Lesson": {
        "src": "contracts\\practice-module-1\\Lesson.sol:5",
        "version": {
          "withMetadata": "e7cf0c862f14eed088d7b544739b4e558b211256e7c0affc2e648eb0e4eeda9f",
          "withoutMetadata": "72335f9dd7b2d32feb43e768f311e97f417f46fa62420255273383fab7a93ecd",
          "linkedWithoutMetadata": "72335f9dd7b2d32feb43e768f311e97f417f46fa62420255273383fab7a93ecd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "myAddr",
            "src": "contracts\\practice-module-1\\Lesson.sol:6"
          },
          {
            "kind": "state-variable-assignment",
            "name": "text",
            "src": "contracts\\practice-module-1\\Lesson.sol:8"
          },
          {
            "kind": "state-variable-assignment",
            "name": "smeil",
            "src": "contracts\\practice-module-1\\Lesson.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "myAddr",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Lesson",
              "src": "contracts\\practice-module-1\\Lesson.sol:6"
            },
            {
              "label": "secAddr",
              "offset": 0,
              "slot": "1",
              "type": "t_address_payable",
              "contract": "Lesson",
              "src": "contracts\\practice-module-1\\Lesson.sol:7"
            },
            {
              "label": "text",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Lesson",
              "src": "contracts\\practice-module-1\\Lesson.sol:8"
            },
            {
              "label": "smeil",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "Lesson",
              "src": "contracts\\practice-module-1\\Lesson.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonArray1.sol:Array": {
        "src": "contracts\\practice-module-1\\LessonArray1.sol:10",
        "version": {
          "withMetadata": "32f61e2b606b65698d5fab36c9b4f21c95fe8b6523838808ffc7a391a86b1a3c",
          "withoutMetadata": "c22703a034ae86525a4774e674972f097b06b0f5a42f41aba0fdd63c2007e336",
          "linkedWithoutMetadata": "c22703a034ae86525a4774e674972f097b06b0f5a42f41aba0fdd63c2007e336"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "get(uint256)",
          "getArr()",
          "push(uint256)",
          "pop()",
          "getLength()",
          "remove(uint256)",
          "examples()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "arr2",
            "src": "contracts\\practice-module-1\\LessonArray1.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "arr",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Array",
              "src": "contracts\\practice-module-1\\LessonArray1.sol:12"
            },
            {
              "label": "arr2",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Array",
              "src": "contracts\\practice-module-1\\LessonArray1.sol:12"
            },
            {
              "label": "myFixedSizeArr",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)10_storage",
              "contract": "Array",
              "src": "contracts\\practice-module-1\\LessonArray1.sol:18"
            }
          ],
          "types": {
            "t_array(t_uint256)10_storage": {
              "label": "uint256[10]",
              "numberOfBytes": "320"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonBool.sol:LessonBool": {
        "src": "contracts\\practice-module-1\\LessonBool.sol:11",
        "version": {
          "withMetadata": "3baa6e121825a062459b8bf3738164c4179525846e76253a7aacba03cdf83662",
          "withoutMetadata": "ce6bbbc7ca6ddb9eaa4e7d0899c0f5ca55cc586ac6cefd679f7da1eca946b9b5",
          "linkedWithoutMetadata": "ce6bbbc7ca6ddb9eaa4e7d0899c0f5ca55cc586ac6cefd679f7da1eca946b9b5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getBoolOne(bool)",
          "getBoolTwo(bool)",
          "getBoolThree(bool)",
          "getBoolFour()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "secondBool",
            "src": "contracts\\practice-module-1\\LessonBool.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ang",
            "src": "contracts\\practice-module-1\\LessonBool.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "analog",
            "src": "contracts\\practice-module-1\\LessonBool.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "decl",
            "src": "contracts\\practice-module-1\\LessonBool.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "firstBool",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "LessonBool",
              "src": "contracts\\practice-module-1\\LessonBool.sol:11"
            },
            {
              "label": "secondBool",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "LessonBool",
              "src": "contracts\\practice-module-1\\LessonBool.sol:12"
            },
            {
              "label": "thirdBool",
              "offset": 2,
              "slot": "0",
              "type": "t_bool",
              "contract": "LessonBool",
              "src": "contracts\\practice-module-1\\LessonBool.sol:15"
            },
            {
              "label": "ang",
              "offset": 3,
              "slot": "0",
              "type": "t_bool",
              "contract": "LessonBool",
              "src": "contracts\\practice-module-1\\LessonBool.sol:17"
            },
            {
              "label": "analog",
              "offset": 4,
              "slot": "0",
              "type": "t_bool",
              "contract": "LessonBool",
              "src": "contracts\\practice-module-1\\LessonBool.sol:20"
            },
            {
              "label": "decl",
              "offset": 5,
              "slot": "0",
              "type": "t_bool",
              "contract": "LessonBool",
              "src": "contracts\\practice-module-1\\LessonBool.sol:22"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonCall.sol:Receiver": {
        "src": "contracts\\practice-module-1\\LessonCall.sol:76",
        "version": {
          "withMetadata": "5a3f83ae8e08b9756b6cf6bc6515c1d33da0ac7d874403ff8189f483cd7156c2",
          "withoutMetadata": "6f91d8bae39c6ff75a50e8bc63c3198125348f9aca56171927047968ddb2fed2",
          "linkedWithoutMetadata": "6f91d8bae39c6ff75a50e8bc63c3198125348f9aca56171927047968ddb2fed2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveEther1()",
          "receiveEther2()",
          "receiveEther3(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonCall.sol:Sender": {
        "src": "contracts\\practice-module-1\\LessonCall.sol:13",
        "version": {
          "withMetadata": "27e553b2bb0086e2ea058cc3be1aabdf67a0a69f614a5b25480824790b630128",
          "withoutMetadata": "059a908ba1b6878c719336fd04a466d5f618893ca523ba65433cc3cb51a94360",
          "linkedWithoutMetadata": "059a908ba1b6878c719336fd04a466d5f618893ca523ba65433cc3cb51a94360"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "sendEther(address payable,uint256)",
          "callOtherContract(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Sender",
            "src": "contracts\\practice-module-1\\LessonCall.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonCycles.sol:Cycles": {
        "src": "contracts\\practice-module-1\\LessonCycles.sol:11",
        "version": {
          "withMetadata": "bf69db4204dd19e936eec1f5f0e86ce9538ec12e8981473209e55d22c12651ec",
          "withoutMetadata": "5a9c7a8f9dbae19dd22a7aa7bb6cb995015dfbee0c1cceff31589b4a07819557",
          "linkedWithoutMetadata": "5a9c7a8f9dbae19dd22a7aa7bb6cb995015dfbee0c1cceff31589b4a07819557"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNumber()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "i",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Cycles",
              "src": "contracts\\practice-module-1\\LessonCycles.sol:16"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonDelegateCall.sol:Delegate": {
        "src": "contracts\\practice-module-1\\LessonDelegateCall.sol:12",
        "version": {
          "withMetadata": "d0f9d7988a7345c5bb33708ddea5a26da5f239ad73eb52b0b81d64e735dfd627",
          "withoutMetadata": "17062b60c6f88eac32477e0fd8fa456d134e0b8790e2386e540ad68d75ca99f0",
          "linkedWithoutMetadata": "17062b60c6f88eac32477e0fd8fa456d134e0b8790e2386e540ad68d75ca99f0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setVars(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "num",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Delegate",
              "src": "contracts\\practice-module-1\\LessonDelegateCall.sol:13"
            },
            {
              "label": "seneder",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Delegate",
              "src": "contracts\\practice-module-1\\LessonDelegateCall.sol:14"
            },
            {
              "label": "delegate",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Delegate",
              "src": "contracts\\practice-module-1\\LessonDelegateCall.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonDelegateCall.sol:Receiver": {
        "src": "contracts\\practice-module-1\\LessonDelegateCall.sol:132",
        "version": {
          "withMetadata": "4733cdc270255c727c23bbfe02122782e3702d8137935164a1f1b7e7cd1d775c",
          "withoutMetadata": "6f91d8bae39c6ff75a50e8bc63c3198125348f9aca56171927047968ddb2fed2",
          "linkedWithoutMetadata": "6f91d8bae39c6ff75a50e8bc63c3198125348f9aca56171927047968ddb2fed2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveEther1()",
          "receiveEther2()",
          "receiveEther3(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonDelegateCall.sol:Sender": {
        "src": "contracts\\practice-module-1\\LessonDelegateCall.sol:39",
        "version": {
          "withMetadata": "3174e352ceba0a42f2d9f6d063cf4134a2885c862e5dc501337afd825d1eb650",
          "withoutMetadata": "051397b9d4ef71db3312f986387a4d3b29c4aaaec9bf89b6aec42059b47d8a49",
          "linkedWithoutMetadata": "051397b9d4ef71db3312f986387a4d3b29c4aaaec9bf89b6aec42059b47d8a49"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "sendEther(address payable,uint256)",
          "callOtherContract(address,uint256)",
          "delegateCallSetVars(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Sender",
            "src": "contracts\\practice-module-1\\LessonDelegateCall.sol:56"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\practice-module-1\\LessonDelegateCall.sol:124"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "num",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Sender",
              "src": "contracts\\practice-module-1\\LessonDelegateCall.sol:39"
            },
            {
              "label": "sender",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Sender",
              "src": "contracts\\practice-module-1\\LessonDelegateCall.sol:42"
            },
            {
              "label": "delegate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Sender",
              "src": "contracts\\practice-module-1\\LessonDelegateCall.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonDlegateCallAdditionally.sol:ContractOne": {
        "src": "contracts\\practice-module-1\\LessonDlegateCallAdditionally.sol:35",
        "version": {
          "withMetadata": "08e56e248c20697ea5f2250fcde9294f1d4cb216886d3303febaab6db13c87b1",
          "withoutMetadata": "7dc69153ca7652a40a5c516ba75d3e7f728694b8bb808e8e1ad1ff9e0b902fe4",
          "linkedWithoutMetadata": "7dc69153ca7652a40a5c516ba75d3e7f728694b8bb808e8e1ad1ff9e0b902fe4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ContractOne",
            "src": "contracts\\practice-module-1\\LessonDlegateCallAdditionally.sol:49"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\practice-module-1\\LessonDlegateCallAdditionally.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "contractThree",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ContractOne",
              "src": "contracts\\practice-module-1\\LessonDlegateCallAdditionally.sol:35"
            },
            {
              "label": "result",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ContractOne",
              "src": "contracts\\practice-module-1\\LessonDlegateCallAdditionally.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonDlegateCallAdditionally.sol:ContractThree": {
        "src": "contracts\\practice-module-1\\LessonDlegateCallAdditionally.sol:10",
        "version": {
          "withMetadata": "fcddf9c5739d3289c95a4835cc124e06d49167c01760bfd7203a2cc1683c9d7a",
          "withoutMetadata": "19848a2171cba3e78937900a83ea3b65f5fff1a475ac47c5fbb4fcb1c98e3248",
          "linkedWithoutMetadata": "19848a2171cba3e78937900a83ea3b65f5fff1a475ac47c5fbb4fcb1c98e3248"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "doCalculation(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "result",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ContractThree",
              "src": "contracts\\practice-module-1\\LessonDlegateCallAdditionally.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonDlegateCallAdditionally.sol:ContractTwo": {
        "src": "contracts\\practice-module-1\\LessonDlegateCallAdditionally.sol:99",
        "version": {
          "withMetadata": "b44202e89cea95a02b3704e02e1a04e178d14ec366c73cb073679ed5f57b4a24",
          "withoutMetadata": "bfcd343bf80b6e650f1c4194b72817e221c77c80314f5afa3458b367d28059bc",
          "linkedWithoutMetadata": "bfcd343bf80b6e650f1c4194b72817e221c77c80314f5afa3458b367d28059bc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "callContractOne(address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonEnum.sol:Enum": {
        "src": "contracts\\practice-module-1\\LessonEnum.sol:10",
        "version": {
          "withMetadata": "0d0d899934596ad806eae48e8c46eefc58df53f8b32b44109555189e506236f9",
          "withoutMetadata": "f0b91328dc4c9b5e801315416f4eb076c7f2305f10a313b18065bc4beb1ee7f3",
          "linkedWithoutMetadata": "f0b91328dc4c9b5e801315416f4eb076c7f2305f10a313b18065bc4beb1ee7f3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "get()",
          "set(uint8)",
          "cancel()",
          "reset()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "order",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(Order)18781",
              "contract": "Enum",
              "src": "contracts\\practice-module-1\\LessonEnum.sol:29"
            },
            {
              "label": "status",
              "offset": 1,
              "slot": "0",
              "type": "t_enum(Status)18777",
              "contract": "Enum",
              "src": "contracts\\practice-module-1\\LessonEnum.sol:36"
            }
          ],
          "types": {
            "t_enum(Order)18781": {
              "label": "enum Enum.Order",
              "members": [
                "Received",
                "Sent",
                "Delivered"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(Status)18777": {
              "label": "enum Enum.Status",
              "members": [
                "Pending",
                "Shipped",
                "Accepted",
                "Rejected",
                "Canceled"
              ],
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonError.sol:Error": {
        "src": "contracts\\practice-module-1\\LessonError.sol:4",
        "version": {
          "withMetadata": "5fc0ebefbb108813badf9b6a32dc89c2b87268b79c55b936e000b30c7981dc06",
          "withoutMetadata": "cdc9153efd6b7e4ed7f4d414aa7ccb011a2f945a6a3a9be925131a391a8387df",
          "linkedWithoutMetadata": "cdc9153efd6b7e4ed7f4d414aa7ccb011a2f945a6a3a9be925131a391a8387df"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "testRequire(uint256)",
          "testRevert(uint256)",
          "testAssert()",
          "testCustomError(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "num",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Error",
              "src": "contracts\\practice-module-1\\LessonError.sol:16"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonErrorsAndCondotions.sol:LessonErrorsAndConditions": {
        "src": "contracts\\practice-module-1\\LessonErrorsAndCondotions.sol:4",
        "version": {
          "withMetadata": "58fdd616d17645789da102ede0fd8ae8a95edb20c311f77884cb742670e5db72",
          "withoutMetadata": "0ac41c60544afc53a4fd0d53461a254cdae6420253c1dca48d657fa2c68034bb",
          "linkedWithoutMetadata": "0ac41c60544afc53a4fd0d53461a254cdae6420253c1dca48d657fa2c68034bb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint256,address)",
          "incrementNumber()",
          "compareAddresses(address)",
          "ternaryOperation(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "myNumber",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "LessonErrorsAndConditions",
              "src": "contracts\\practice-module-1\\LessonErrorsAndCondotions.sol:7"
            },
            {
              "label": "myAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "LessonErrorsAndConditions",
              "src": "contracts\\practice-module-1\\LessonErrorsAndCondotions.sol:8"
            },
            {
              "label": "comparisonResult",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "LessonErrorsAndConditions",
              "src": "contracts\\practice-module-1\\LessonErrorsAndCondotions.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonEvent.sol:Event": {
        "src": "contracts\\practice-module-1\\LessonEvent.sol:4",
        "version": {
          "withMetadata": "c608909229197d89200f7e0b15eef46f1b782de86bb413239057826d90963d35",
          "withoutMetadata": "1e2b27e1aef51cad2161010c6ad82675eb749bfad4658b7b1c08c5a0e9570db9",
          "linkedWithoutMetadata": "1e2b27e1aef51cad2161010c6ad82675eb749bfad4658b7b1c08c5a0e9570db9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonExternalLibrary.sol:LessonExternalLibrary": {
        "src": "contracts\\practice-module-1\\LessonExternalLibrary.sol:4",
        "version": {
          "withMetadata": "e5e4311addb681affc382334d65cda0c3f047131ec192d931174d4996c8b96d6",
          "withoutMetadata": "81912c67e516e7ad0e1379268e63dedb60e92fe7da3927196e9c214d02c31139",
          "linkedWithoutMetadata": "81912c67e516e7ad0e1379268e63dedb60e92fe7da3927196e9c214d02c31139"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "substract(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonGlobalVariablesAndConstructor.sol:LessonGlobalVariablesAndConstructor": {
        "src": "contracts\\practice-module-1\\LessonGlobalVariablesAndConstructor.sol:11",
        "version": {
          "withMetadata": "b0d664ba190286a71d03e21c0e48aa85a3fce9cfc6313200dd6f81945d3f616a",
          "withoutMetadata": "3f03c0445ac54c2f1d90d9c4eb418f2272cc975f4bdd68375dec74e1a9db995d",
          "linkedWithoutMetadata": "3f03c0445ac54c2f1d90d9c4eb418f2272cc975f4bdd68375dec74e1a9db995d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "checkAndUpdateTimestamp()",
          "changeOwner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "LessonGlobalVariablesAndConstructor",
            "src": "contracts\\practice-module-1\\LessonGlobalVariablesAndConstructor.sol:41"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "LessonGlobalVariablesAndConstructor",
              "src": "contracts\\practice-module-1\\LessonGlobalVariablesAndConstructor.sol:16"
            },
            {
              "label": "timestamp",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "LessonGlobalVariablesAndConstructor",
              "src": "contracts\\practice-module-1\\LessonGlobalVariablesAndConstructor.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonInternalLibrary.sol:LessonInternalLibrary": {
        "src": "contracts\\practice-module-1\\LessonInternalLibrary.sol:4",
        "version": {
          "withMetadata": "85eed3d7c9cef1081a70132421f6bcf237682c8ec14f056afa78ef8f2bdc8886",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonLibrary.sol:UseLibraries": {
        "src": "contracts\\practice-module-1\\LessonLibrary.sol:10",
        "version": {
          "withMetadata": "e230526be1b643d2ebf1f41313153bdbf1a29b11631323b50fae9216d387ef14",
          "withoutMetadata": "b6f262089afc2408bb9e9f581dcb7a55f64e352e467fc30ba42b6ce3bb2b1c19",
          "linkedWithoutMetadata": "b6f262089afc2408bb9e9f581dcb7a55f64e352e467fc30ba42b6ce3bb2b1c19"
        },
        "inherit": [],
        "libraries": [
          "contracts/practice-module-1/LessonExternalLibrary.sol:LessonExternalLibrary",
          "contracts/practice-module-1/LessonInternalLibrary.sol:LessonInternalLibrary"
        ],
        "methods": [
          "subtractNumbers(uint256,uint256)",
          "multiplyNumbers(uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "contracts/practice-module-1/LessonExternalLibrary.sol",
            "name": "LessonExternalLibrary",
            "length": 20,
            "start": 196,
            "placeholder": "__$7236c65b3292bb174a0519d0c94b577fd0$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "LessonExternalLibrary",
            "src": "contracts/practice-module-1/LessonExternalLibrary.sol"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonMapping.sol:Mapping": {
        "src": "contracts\\practice-module-1\\LessonMapping.sol:10",
        "version": {
          "withMetadata": "326244743fbaaf468748b70ec6b0b9e87a89b6a787e699821d1a48f189fcf45f",
          "withoutMetadata": "ed3989241991096d57033c3360a605adb8417aec26e833e22de86779a8db808c",
          "linkedWithoutMetadata": "ed3989241991096d57033c3360a605adb8417aec26e833e22de86779a8db808c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "get(address)",
          "set(address,uint256)",
          "remove(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "myMap",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Mapping",
              "src": "contracts\\practice-module-1\\LessonMapping.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonMapping.sol:NestedMapping": {
        "src": "contracts\\practice-module-1\\LessonMapping.sol:55",
        "version": {
          "withMetadata": "c3c2335e8f7f40a8f2208cb0e4172c7cf821fba3bc952318bc2eeafd3d1ffaeb",
          "withoutMetadata": "5312014346ec8754c1df59cde3d687df36e0c989d7662f244321712a84c4b6f8",
          "linkedWithoutMetadata": "5312014346ec8754c1df59cde3d687df36e0c989d7662f244321712a84c4b6f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "get(address,uint256)",
          "set(address,uint256,bool)",
          "remove(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nested",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "NestedMapping",
              "src": "contracts\\practice-module-1\\LessonMapping.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonModifier.sol:FunctionModifier": {
        "src": "contracts\\practice-module-1\\LessonModifier.sol:4",
        "version": {
          "withMetadata": "0cd6545ebeb2e038eeda1c568593c871f8e362bda4b724018ceca293b821753b",
          "withoutMetadata": "c80308d59d056a7d236873942dfea2da0ab34037a4d04592893581932ecfc70f",
          "linkedWithoutMetadata": "c80308d59d056a7d236873942dfea2da0ab34037a4d04592893581932ecfc70f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "changeOwner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionModifier",
            "src": "contracts\\practice-module-1\\LessonModifier.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "x",
            "src": "contracts\\practice-module-1\\LessonModifier.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FunctionModifier",
              "src": "contracts\\practice-module-1\\LessonModifier.sol:6"
            },
            {
              "label": "x",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FunctionModifier",
              "src": "contracts\\practice-module-1\\LessonModifier.sol:7"
            },
            {
              "label": "locked",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "FunctionModifier",
              "src": "contracts\\practice-module-1\\LessonModifier.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonOpenZeppelin.sol:UserOwnable": {
        "src": "contracts\\practice-module-1\\LessonOpenZeppelin.sol:10",
        "version": {
          "withMetadata": "81168d9a3548454c85eb2ff1b837204b4133eeb6981536fa3bee8dc8afd96201",
          "withoutMetadata": "da6bf26b52aa2e1b3680d57701f4084e9f78bef1f6911ebf461cd44c76f715dd",
          "linkedWithoutMetadata": "da6bf26b52aa2e1b3680d57701f4084e9f78bef1f6911ebf461cd44c76f715dd"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setUser(string,uint256)",
          "getUser(address)",
          "deleteUser(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UserOwnable",
            "src": "contracts\\practice-module-1\\LessonOpenZeppelin.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(User)19344_storage)",
              "contract": "UserOwnable",
              "src": "contracts\\practice-module-1\\LessonOpenZeppelin.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(User)19344_storage)": {
              "label": "mapping(address => struct UserOwnable.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(User)19344_storage": {
              "label": "struct UserOwnable.User",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "age",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonStruct.sol:Todos": {
        "src": "contracts\\practice-module-1\\LessonStruct.sol:4",
        "version": {
          "withMetadata": "96fe1750ebaa3b583142102549c8d2440a3aca7d255573bec93a1cb88022b6c0",
          "withoutMetadata": "98297f3fa267b56a2488976849210778e3fe28ffc8292f022609dddfb49c5c83",
          "linkedWithoutMetadata": "98297f3fa267b56a2488976849210778e3fe28ffc8292f022609dddfb49c5c83"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(string)",
          "updateText(uint256,string)",
          "toggleCompleted(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "todos",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_struct(Todo)19419_storage)dyn_storage",
              "contract": "Todos",
              "src": "contracts\\practice-module-1\\LessonStruct.sol:16"
            }
          ],
          "types": {
            "t_array(t_struct(Todo)19419_storage)dyn_storage": {
              "label": "struct Todos.Todo[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Todo)19419_storage": {
              "label": "struct Todos.Todo",
              "members": [
                {
                  "label": "text",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonUint.sol:LessonUint": {
        "src": "contracts\\practice-module-1\\LessonUint.sol:4",
        "version": {
          "withMetadata": "26d62e28ee1205ae4ac06dbdf1c852cf43a1b85e9ae3f51809862a36798b5ba5",
          "withoutMetadata": "4c1b489e0b5429a7f93786ec111d25ba845486c5549ab829241fa9aa24540ba3",
          "linkedWithoutMetadata": "4c1b489e0b5429a7f93786ec111d25ba845486c5549ab829241fa9aa24540ba3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "inc()",
          "dec()",
          "overFlow()",
          "notOverFlow()",
          "cast()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "maxVal",
            "src": "contracts\\practice-module-1\\LessonUint.sol:8"
          },
          {
            "kind": "state-variable-assignment",
            "name": "myEther",
            "src": "contracts\\practice-module-1\\LessonUint.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "firstBool",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "LessonUint",
              "src": "contracts\\practice-module-1\\LessonUint.sol:6"
            },
            {
              "label": "maxVal",
              "offset": 1,
              "slot": "0",
              "type": "t_uint8",
              "contract": "LessonUint",
              "src": "contracts\\practice-module-1\\LessonUint.sol:8"
            },
            {
              "label": "myNum",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "LessonUint",
              "src": "contracts\\practice-module-1\\LessonUint.sol:9"
            },
            {
              "label": "myEther",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "LessonUint",
              "src": "contracts\\practice-module-1\\LessonUint.sol:10"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/LessonUintPractice.sol:LessonUintPractice": {
        "src": "contracts\\practice-module-1\\LessonUintPractice.sol:4",
        "version": {
          "withMetadata": "08173b62f209091c02f48f71a7d48ac4faded8d053cf382fbb1d1f53a820f47a",
          "withoutMetadata": "7d3fc6992c27f6cee2b944299588a3f40535501698792ff8b56ea5547c525d00",
          "linkedWithoutMetadata": "7d3fc6992c27f6cee2b944299588a3f40535501698792ff8b56ea5547c525d00"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "inc()",
          "showMax()",
          "incVar()",
          "getTrue()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "varBool2",
            "src": "contracts\\practice-module-1\\LessonUintPractice.sol:8"
          },
          {
            "kind": "state-variable-assignment",
            "name": "myVar",
            "src": "contracts\\practice-module-1\\LessonUintPractice.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "secVar",
            "src": "contracts\\practice-module-1\\LessonUintPractice.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "varBool1",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "LessonUintPractice",
              "src": "contracts\\practice-module-1\\LessonUintPractice.sol:8"
            },
            {
              "label": "varBool2",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "LessonUintPractice",
              "src": "contracts\\practice-module-1\\LessonUintPractice.sol:8"
            },
            {
              "label": "myVar",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "LessonUintPractice",
              "src": "contracts\\practice-module-1\\LessonUintPractice.sol:18"
            },
            {
              "label": "secVar",
              "offset": 0,
              "slot": "2",
              "type": "t_uint8",
              "contract": "LessonUintPractice",
              "src": "contracts\\practice-module-1\\LessonUintPractice.sol:19"
            },
            {
              "label": "threeVar",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "LessonUintPractice",
              "src": "contracts\\practice-module-1\\LessonUintPractice.sol:19"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/MathContract.sol:MathContract": {
        "src": "contracts\\practice-module-1\\MathContract.sol:4",
        "version": {
          "withMetadata": "81449279030b1092e19035dddf1641113371aed9e1e4f5bfbe2b72ecd830c34a",
          "withoutMetadata": "2ef443686a7e778838c3908fd10a3baf3c04fc900bc5c9d0d84f276e06ca5e0c",
          "linkedWithoutMetadata": "2ef443686a7e778838c3908fd10a3baf3c04fc900bc5c9d0d84f276e06ca5e0c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "add(uint256,uint256)",
          "subtract(uint256,uint256)",
          "multiply(uint256,uint256)",
          "divide(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/Module1Lesson2-2.sol:Module1Lesson2": {
        "src": "contracts\\practice-module-1\\Module1Lesson2-2.sol:5",
        "version": {
          "withMetadata": "dccb30339901c0b3b0e2562a3fd2aedb6c7d0fddf8ded412bb2ce5342005dd59",
          "withoutMetadata": "b1d2d59e150d36c3d770c865fdee09536f1f4c76d68c87fc60d5a5a3a1029573",
          "linkedWithoutMetadata": "b1d2d59e150d36c3d770c865fdee09536f1f4c76d68c87fc60d5a5a3a1029573"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "myAddr",
            "src": "contracts\\practice-module-1\\Module1Lesson2-2.sol:6"
          },
          {
            "kind": "state-variable-assignment",
            "name": "text",
            "src": "contracts\\practice-module-1\\Module1Lesson2-2.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "myAddr",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Module1Lesson2",
              "src": "contracts\\practice-module-1\\Module1Lesson2-2.sol:6"
            },
            {
              "label": "_to",
              "offset": 0,
              "slot": "1",
              "type": "t_address_payable",
              "contract": "Module1Lesson2",
              "src": "contracts\\practice-module-1\\Module1Lesson2-2.sol:7"
            },
            {
              "label": "text",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "Module1Lesson2",
              "src": "contracts\\practice-module-1\\Module1Lesson2-2.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/Module1Lesson2.sol:Module1Lesson2": {
        "src": "contracts\\practice-module-1\\Module1Lesson2.sol:5",
        "version": {
          "withMetadata": "413e0f614679198495bc23b4d4d70881c7638eb59808c12b83b2a1a210fa5a98",
          "withoutMetadata": "ea53e450090d25422890f9c87888729a52ff917793780caa011c96379f63b8b7",
          "linkedWithoutMetadata": "ea53e450090d25422890f9c87888729a52ff917793780caa011c96379f63b8b7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "reciveFunds()",
          "transferTo(address,uint256)",
          "getBalance(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "myAddr",
            "src": "contracts\\practice-module-1\\Module1Lesson2.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "payments",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Module1Lesson2",
              "src": "contracts\\practice-module-1\\Module1Lesson2.sol:6"
            },
            {
              "label": "myAddr",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Module1Lesson2",
              "src": "contracts\\practice-module-1\\Module1Lesson2.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/Module1Practicum1.sol:Practicum": {
        "src": "contracts\\practice-module-1\\Module1Practicum1.sol:4",
        "version": {
          "withMetadata": "2b9fcdeb6f784b27eaffacf3adcbff57fc87433a5c3b743c96a653ab2d491572",
          "withoutMetadata": "dc1486ba78ffdd94fba0edb9d37ff55013670ca9c28e46702b25045eb319bb52",
          "linkedWithoutMetadata": "dc1486ba78ffdd94fba0edb9d37ff55013670ca9c28e46702b25045eb319bb52"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "incrementUint()",
          "decrementByConstant()",
          "assWithArguvents(uint256)",
          "setMappingValue(address,uint256)",
          "addToFixedArray(uint256,uint256,uint256)",
          "deleteFromFixedArray(uint256)",
          "deleteFrovDynamicArray(uint256)",
          "getDynamicArrayLength()",
          "changeOwner(address)",
          "populateArray()",
          "resetMappingAndSetStatus(address)",
          "addToFixedArrayAndEmit(uint256)",
          "safeAddition(uint256,uint256)",
          "ternarnyCheck(uint256)",
          "revertOnMappingChange(address,uint256)",
          "getArrayValue(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Practicum",
            "src": "contracts\\practice-module-1\\Module1Practicum1.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "uintVariable",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Practicum",
              "src": "contracts\\practice-module-1\\Module1Practicum1.sol:6"
            },
            {
              "label": "uintVariable2",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Practicum",
              "src": "contracts\\practice-module-1\\Module1Practicum1.sol:7"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Practicum",
              "src": "contracts\\practice-module-1\\Module1Practicum1.sol:8"
            },
            {
              "label": "myAddr",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Practicum",
              "src": "contracts\\practice-module-1\\Module1Practicum1.sol:9"
            },
            {
              "label": "boolVariable",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "Practicum",
              "src": "contracts\\practice-module-1\\Module1Practicum1.sol:10"
            },
            {
              "label": "myBool",
              "offset": 21,
              "slot": "3",
              "type": "t_bool",
              "contract": "Practicum",
              "src": "contracts\\practice-module-1\\Module1Practicum1.sol:11"
            },
            {
              "label": "stringVariablr",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Practicum",
              "src": "contracts\\practice-module-1\\Module1Practicum1.sol:12"
            },
            {
              "label": "myString",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "Practicum",
              "src": "contracts\\practice-module-1\\Module1Practicum1.sol:13"
            },
            {
              "label": "addressToUintMapping",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Practicum",
              "src": "contracts\\practice-module-1\\Module1Practicum1.sol:19"
            },
            {
              "label": "fixedArray",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)3_storage",
              "contract": "Practicum",
              "src": "contracts\\practice-module-1\\Module1Practicum1.sol:22"
            },
            {
              "label": "dynamicArray",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Practicum",
              "src": "contracts\\practice-module-1\\Module1Practicum1.sol:23"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "11",
              "type": "t_enum(Status)19828",
              "contract": "Practicum",
              "src": "contracts\\practice-module-1\\Module1Practicum1.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)3_storage": {
              "label": "uint256[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(Status)19828": {
              "label": "enum Practicum.Status",
              "members": [
                "Optiopn1",
                "Option2",
                "Option3"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-1/Module1Practicum2.sol:Practicum": {
        "src": "contracts\\practice-module-1\\Module1Practicum2.sol:4",
        "version": {
          "withMetadata": "f8a8e9de1dfcc8321f5f7e8cd8a32499e9156b48a334e33522e23cd0b0b3d926",
          "withoutMetadata": "61d1331818baf8e385708829c10dda6bec75c4c2d6eec20c1bdff7d34aa638ba",
          "linkedWithoutMetadata": "61d1331818baf8e385708829c10dda6bec75c4c2d6eec20c1bdff7d34aa638ba"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "addToPersonArrayMapping(address,string,uint256)",
          "removeFromPersonArrayMapping(address,uint256)",
          "addToNestedMapping(address,uint256,uint256)",
          "removeFromNestedMapping(address,uint256)",
          "addToPersonMapping(address,string,uint256)",
          "addToGroup(uint256,address,string,uint256)",
          "computeSumFromNestedMapping(address,uint256,uint256)",
          "getNestedMappingValue(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nestedMapping",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Practicum",
              "src": "contracts\\practice-module-1\\Module1Practicum2.sol:7"
            },
            {
              "label": "personMapping",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(Person)20215_storage)",
              "contract": "Practicum",
              "src": "contracts\\practice-module-1\\Module1Practicum2.sol:15"
            },
            {
              "label": "groups",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Group)20240_storage)",
              "contract": "Practicum",
              "src": "contracts\\practice-module-1\\Module1Practicum2.sol:34"
            },
            {
              "label": "personsArray",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Person)20215_storage)dyn_storage",
              "contract": "Practicum",
              "src": "contracts\\practice-module-1\\Module1Practicum2.sol:37"
            },
            {
              "label": "personArrayMapping",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(Person)20215_storage)dyn_storage)",
              "contract": "Practicum",
              "src": "contracts\\practice-module-1\\Module1Practicum2.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Person)20215_storage)dyn_storage": {
              "label": "struct Practicum.Person[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Person)20215_storage)dyn_storage)": {
              "label": "mapping(address => struct Practicum.Person[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Person)20215_storage)": {
              "label": "mapping(address => struct Practicum.Person)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Group)20240_storage)": {
              "label": "mapping(uint256 => struct Practicum.Group)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Group)20240_storage": {
              "label": "struct Practicum.Group",
              "members": [
                {
                  "label": "groupName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_struct(Person)20215_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Person)20215_storage": {
              "label": "struct Practicum.Person",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "age",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-2/BaseContract.sol:BaseContract": {
        "src": "contracts\\practice-module-2\\BaseContract.sol:5",
        "version": {
          "withMetadata": "3056518161cffb46e6613698076d37e99d0d847661448b67ef858cf5d045c90f",
          "withoutMetadata": "7a271a72e7d2e6b0220bba571e3dadf9948a6e0f4b1e3c65e6c7c2ec09fbcc70",
          "linkedWithoutMetadata": "7a271a72e7d2e6b0220bba571e3dadf9948a6e0f4b1e3c65e6c7c2ec09fbcc70"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "increment()",
          "updateOwner(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "count",
              "offset": 0,
              "slot": "0",
              "type": "t_int256",
              "contract": "BaseContract",
              "src": "contracts\\practice-module-2\\BaseContract.sol:6"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-2/DataTypes-2.sol:Todos": {
        "src": "contracts\\practice-module-2\\DataTypes-2.sol:4",
        "version": {
          "withMetadata": "8a18b90a506ec5702072b35b2dc490d03a58b0414b0bed9a0355d49dbaa10eda",
          "withoutMetadata": "3d7b4e0cb25b2db38a4c27fe3213faf635b4eb525227847ab56871ab402e578e",
          "linkedWithoutMetadata": "3d7b4e0cb25b2db38a4c27fe3213faf635b4eb525227847ab56871ab402e578e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(string)",
          "updateText(uint256,string)",
          "toggleCompleted(uint256)",
          "get()",
          "set(uint8)",
          "cancel()",
          "reset()",
          "getArrIndex(uint256)",
          "getArr()",
          "push(uint256)",
          "pop()",
          "getLength()",
          "remove(uint256)",
          "examples()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "arr2",
            "src": "contracts\\practice-module-2\\DataTypes-2.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "status",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(Status)20501",
              "contract": "Todos",
              "src": "contracts\\practice-module-2\\DataTypes-2.sol:23"
            },
            {
              "label": "todos",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_struct(Todo)20509_storage)dyn_storage",
              "contract": "Todos",
              "src": "contracts\\practice-module-2\\DataTypes-2.sol:33"
            },
            {
              "label": "arr",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Todos",
              "src": "contracts\\practice-module-2\\DataTypes-2.sol:34"
            },
            {
              "label": "arr2",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Todos",
              "src": "contracts\\practice-module-2\\DataTypes-2.sol:37"
            },
            {
              "label": "myFixedSizeArr",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_uint256)10_storage",
              "contract": "Todos",
              "src": "contracts\\practice-module-2\\DataTypes-2.sol:40"
            }
          ],
          "types": {
            "t_array(t_struct(Todo)20509_storage)dyn_storage": {
              "label": "struct Todos.Todo[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)10_storage": {
              "label": "uint256[10]",
              "numberOfBytes": "320"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(Status)20501": {
              "label": "enum Todos.Status",
              "members": [
                "Pending",
                "Shipped",
                "Accepted",
                "Rejected",
                "Canceled"
              ],
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Todo)20509_storage": {
              "label": "struct Todos.Todo",
              "members": [
                {
                  "label": "text",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-2/DataTypes.sol:DataTypes": {
        "src": "contracts\\practice-module-2\\DataTypes.sol:5",
        "version": {
          "withMetadata": "5fb49e6bbd4c44598d6fc206768cf1ff1fc722182a3bc858475f3f5aeb707ba2",
          "withoutMetadata": "cf3116f78418d9ba4a0ed0fbc74c9c8dc59a36f77f277cea3b3b7054a6fc2b5c",
          "linkedWithoutMetadata": "cf3116f78418d9ba4a0ed0fbc74c9c8dc59a36f77f277cea3b3b7054a6fc2b5c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getBoolOne(bool)",
          "getBoolTwo(bool)",
          "getBoolThree(bool)",
          "getBoolFour(bool)",
          "inc()",
          "dec()",
          "overFlow()",
          "cast()",
          "get(address)",
          "set(address,uint256)",
          "remove(address)",
          "getNested(address,uint256)",
          "setNested(address,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "secondBool",
            "src": "contracts\\practice-module-2\\DataTypes.sol:8"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxVal",
            "src": "contracts\\practice-module-2\\DataTypes.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "myEther",
            "src": "contracts\\practice-module-2\\DataTypes.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "firstBool",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "DataTypes",
              "src": "contracts\\practice-module-2\\DataTypes.sol:7"
            },
            {
              "label": "secondBool",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "DataTypes",
              "src": "contracts\\practice-module-2\\DataTypes.sol:8"
            },
            {
              "label": "thirdBool",
              "offset": 2,
              "slot": "0",
              "type": "t_bool",
              "contract": "DataTypes",
              "src": "contracts\\practice-module-2\\DataTypes.sol:9"
            },
            {
              "label": "maxVal",
              "offset": 3,
              "slot": "0",
              "type": "t_uint8",
              "contract": "DataTypes",
              "src": "contracts\\practice-module-2\\DataTypes.sol:12"
            },
            {
              "label": "myNum",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DataTypes",
              "src": "contracts\\practice-module-2\\DataTypes.sol:13"
            },
            {
              "label": "myEther",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DataTypes",
              "src": "contracts\\practice-module-2\\DataTypes.sol:14"
            },
            {
              "label": "myMap",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DataTypes",
              "src": "contracts\\practice-module-2\\DataTypes.sol:17"
            },
            {
              "label": "nested",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "DataTypes",
              "src": "contracts\\practice-module-2\\DataTypes.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-2/DerivedContract.sol:DerivedContract": {
        "src": "contracts\\practice-module-2\\DerivedContract.sol:7",
        "version": {
          "withMetadata": "c04080dc9f84ac431834b818ba9366094f0228010eb579dc6feb3d3f213a0132",
          "withoutMetadata": "00b765a3fa98f5beed103ac72bfebd3db6c5efa7c1fef0cac984df8934b69aa3",
          "linkedWithoutMetadata": "00b765a3fa98f5beed103ac72bfebd3db6c5efa7c1fef0cac984df8934b69aa3"
        },
        "inherit": [
          "contracts/practice-module-2/BaseContract.sol:BaseContract"
        ],
        "libraries": [],
        "methods": [
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "count",
              "offset": 0,
              "slot": "0",
              "type": "t_int256",
              "contract": "BaseContract",
              "src": "contracts\\practice-module-2\\BaseContract.sol:6"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-2/Module2PracticumIntensive1.sol:Practicum1Module2Intensiv": {
        "src": "contracts\\practice-module-2\\Module2PracticumIntensive1.sol:4",
        "version": {
          "withMetadata": "9fb4b035ef1a33cebff16157f3f8ab614de09188c2436cce4cc6903155c83487",
          "withoutMetadata": "dc1486ba78ffdd94fba0edb9d37ff55013670ca9c28e46702b25045eb319bb52",
          "linkedWithoutMetadata": "dc1486ba78ffdd94fba0edb9d37ff55013670ca9c28e46702b25045eb319bb52"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "incrementUint()",
          "decrementByConstant()",
          "assWithArguvents(uint256)",
          "setMappingValue(address,uint256)",
          "addToFixedArray(uint256,uint256,uint256)",
          "deleteFromFixedArray(uint256)",
          "deleteFrovDynamicArray(uint256)",
          "getDynamicArrayLength()",
          "changeOwner(address)",
          "populateArray()",
          "resetMappingAndSetStatus(address)",
          "addToFixedArrayAndEmit(uint256)",
          "safeAddition(uint256,uint256)",
          "ternarnyCheck(uint256)",
          "revertOnMappingChange(address,uint256)",
          "getArrayValue(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Practicum1Module2Intensiv",
            "src": "contracts\\practice-module-2\\Module2PracticumIntensive1.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "uintVariable",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Practicum1Module2Intensiv",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive1.sol:6"
            },
            {
              "label": "uintVariable2",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Practicum1Module2Intensiv",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive1.sol:7"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Practicum1Module2Intensiv",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive1.sol:8"
            },
            {
              "label": "myAddr",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Practicum1Module2Intensiv",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive1.sol:9"
            },
            {
              "label": "boolVariable",
              "offset": 20,
              "slot": "3",
              "type": "t_bool",
              "contract": "Practicum1Module2Intensiv",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive1.sol:10"
            },
            {
              "label": "myBool",
              "offset": 21,
              "slot": "3",
              "type": "t_bool",
              "contract": "Practicum1Module2Intensiv",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive1.sol:11"
            },
            {
              "label": "stringVariablr",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Practicum1Module2Intensiv",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive1.sol:12"
            },
            {
              "label": "myString",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "Practicum1Module2Intensiv",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive1.sol:13"
            },
            {
              "label": "addressToUintMapping",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Practicum1Module2Intensiv",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive1.sol:19"
            },
            {
              "label": "fixedArray",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_uint256)3_storage",
              "contract": "Practicum1Module2Intensiv",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive1.sol:22"
            },
            {
              "label": "dynamicArray",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Practicum1Module2Intensiv",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive1.sol:23"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "11",
              "type": "t_enum(Status)20981",
              "contract": "Practicum1Module2Intensiv",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive1.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)3_storage": {
              "label": "uint256[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(Status)20981": {
              "label": "enum Practicum1Module2Intensiv.Status",
              "members": [
                "Optiopn1",
                "Option2",
                "Option3"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-2/Module2PracticumIntensive2.sol:Practicum": {
        "src": "contracts\\practice-module-2\\Module2PracticumIntensive2.sol:4",
        "version": {
          "withMetadata": "5dc04fdcbc1007ad769a1e3afac8471c47a0bc497302a33578f6504a71bdc5f8",
          "withoutMetadata": "61d1331818baf8e385708829c10dda6bec75c4c2d6eec20c1bdff7d34aa638ba",
          "linkedWithoutMetadata": "61d1331818baf8e385708829c10dda6bec75c4c2d6eec20c1bdff7d34aa638ba"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "addToPersonArrayMapping(address,string,uint256)",
          "removeFromPersonArrayMapping(address,uint256)",
          "addToNestedMapping(address,uint256,uint256)",
          "removeFromNestedMapping(address,uint256)",
          "addToPersonMapping(address,string,uint256)",
          "addToGroup(uint256,address,string,uint256)",
          "computeSumFromNestedMapping(address,uint256,uint256)",
          "getNestedMappingValue(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "nestedMapping",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "Practicum",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive2.sol:7"
            },
            {
              "label": "personMapping",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(Person)21368_storage)",
              "contract": "Practicum",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive2.sol:15"
            },
            {
              "label": "groups",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Group)21393_storage)",
              "contract": "Practicum",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive2.sol:34"
            },
            {
              "label": "personsArray",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Person)21368_storage)dyn_storage",
              "contract": "Practicum",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive2.sol:37"
            },
            {
              "label": "personArrayMapping",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(Person)21368_storage)dyn_storage)",
              "contract": "Practicum",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive2.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Person)21368_storage)dyn_storage": {
              "label": "struct Practicum.Person[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Person)21368_storage)dyn_storage)": {
              "label": "mapping(address => struct Practicum.Person[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Person)21368_storage)": {
              "label": "mapping(address => struct Practicum.Person)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Group)21393_storage)": {
              "label": "mapping(uint256 => struct Practicum.Group)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Group)21393_storage": {
              "label": "struct Practicum.Group",
              "members": [
                {
                  "label": "groupName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_struct(Person)21368_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Person)21368_storage": {
              "label": "struct Practicum.Person",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "age",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-2/Module2PracticumIntensive6.sol:Module2PracticumIntensive6": {
        "src": "contracts\\practice-module-2\\Module2PracticumIntensive6.sol:4",
        "version": {
          "withMetadata": "83cc11e4194bc21300d69a4e65a4b895f0c49f3c99d5fd7b40cb69467133165d",
          "withoutMetadata": "1400bbed62bccb5372ac29c2cfb781878ee1da53429cf7f993f57de70b3017fc",
          "linkedWithoutMetadata": "1400bbed62bccb5372ac29c2cfb781878ee1da53429cf7f993f57de70b3017fc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256)",
          "changeOwner(address)",
          "addToArray(uint256)",
          "removeFromArray(uint256)",
          "addToNestedMapping(address,uint256,bool)",
          "removeFromNestedMapping(address,uint256)",
          "addToUserInfo(address,uint256,uint256,string)",
          "addUserToArray(uint256,uint256,string)",
          "logEtherReceived(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Module2PracticumIntensive6",
            "src": "contracts\\practice-module-2\\Module2PracticumIntensive6.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "MY_IMMUTABLE",
            "src": "contracts\\practice-module-2\\Module2PracticumIntensive6.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "myUint",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Module2PracticumIntensive6",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive6.sol:6"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Module2PracticumIntensive6",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive6.sol:7"
            },
            {
              "label": "myBool",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "Module2PracticumIntensive6",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive6.sol:8"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Module2PracticumIntensive6",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive6.sol:15"
            },
            {
              "label": "dynamicArray",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Module2PracticumIntensive6",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive6.sol:18"
            },
            {
              "label": "nestedMapping",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "Module2PracticumIntensive6",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive6.sol:21"
            },
            {
              "label": "userInfos",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(UserInfo)21647_storage)",
              "contract": "Module2PracticumIntensive6",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive6.sol:24"
            },
            {
              "label": "usersArray",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_struct(UserInfo)21647_storage)dyn_storage",
              "contract": "Module2PracticumIntensive6",
              "src": "contracts\\practice-module-2\\Module2PracticumIntensive6.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(UserInfo)21647_storage)dyn_storage": {
              "label": "struct Module2PracticumIntensive6.UserInfo[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserInfo)21647_storage)": {
              "label": "mapping(address => struct Module2PracticumIntensive6.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(NestedStruct)21641_storage": {
              "label": "struct Module2PracticumIntensive6.NestedStruct",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "data",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserInfo)21647_storage": {
              "label": "struct Module2PracticumIntensive6.UserInfo",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nestedData",
                  "type": "t_struct(NestedStruct)21641_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-2/MyERC20.sol:MyERC20": {
        "src": "contracts\\practice-module-2\\MyERC20.sol:17",
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyERC20",
            "src": "contracts\\practice-module-2\\MyERC20.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:20"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:20"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:22"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:24"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:26"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:28"
            },
            {
              "label": "isBlacklisted",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-2/MyOZToken.sol:MyOZToken": {
        "src": "contracts\\practice-module-2\\MyOZToken.sol:18",
        "version": {
          "withMetadata": "5330444c66b5e54a29c4f1aea42c2e53bf22d55b832d63e5cec5bfe0260d3d57",
          "withoutMetadata": "975702487a2999d71300a6ced20ccbbfdfa97f6c7f6dcbe482e779cc6764b39a",
          "linkedWithoutMetadata": "975702487a2999d71300a6ced20ccbbfdfa97f6c7f6dcbe482e779cc6764b39a"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "burnTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyOZToken",
            "src": "contracts\\practice-module-2\\MyOZToken.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-2/MyToken.sol:MyToken": {
        "src": "contracts\\practice-module-2\\MyToken.sol:17",
        "version": {
          "withMetadata": "b9ba1077d4ed0a4b6a1bfe5537fc13821d98fa9d3ae38c8dd73e746055e063c7",
          "withoutMetadata": "ecb257449c9a7c34044b1482729e288bb348a7c2cb57279960a446275bec51a6",
          "linkedWithoutMetadata": "ecb257449c9a7c34044b1482729e288bb348a7c2cb57279960a446275bec51a6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyToken",
            "src": "contracts\\practice-module-2\\MyToken.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-2/MyTokenA.sol:MyTokenA": {
        "src": "contracts\\practice-module-2\\MyTokenA.sol:10",
        "version": {
          "withMetadata": "8f686cf9b06ddf3eaac5cef276eda18bf6bf4964f6de3487c8fefbc35b43c335",
          "withoutMetadata": "6da3565ce7e537ea1dc41d35d80fbaa32097b70929484c9f3dae6e3e5f9c661f",
          "linkedWithoutMetadata": "6da3565ce7e537ea1dc41d35d80fbaa32097b70929484c9f3dae6e3e5f9c661f"
        },
        "inherit": [
          "contracts/practice-module-2/MyERC20.sol:MyERC20",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyTokenA",
            "src": "contracts\\practice-module-2\\MyTokenA.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:20"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:20"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:22"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:24"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:26"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:28"
            },
            {
              "label": "isBlacklisted",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-2/MyTokenB.sol:MyTokenB": {
        "src": "contracts\\practice-module-2\\MyTokenB.sol:10",
        "version": {
          "withMetadata": "b81fb334364ca90aaeb986926b0807db82d2bbf227347eaaeafbf68915240d5a",
          "withoutMetadata": "fae1f16db6dd16a8535570b82154d78beb53fa48255d055ba1badf0441f2955f",
          "linkedWithoutMetadata": "fae1f16db6dd16a8535570b82154d78beb53fa48255d055ba1badf0441f2955f"
        },
        "inherit": [
          "contracts/practice-module-2/MyERC20.sol:MyERC20",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyTokenB",
            "src": "contracts\\practice-module-2\\MyTokenB.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:20"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:20"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:22"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:24"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:26"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:28"
            },
            {
              "label": "isBlacklisted",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MyERC20",
              "src": "contracts\\practice-module-2\\MyERC20.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-2/OwnerContract.sol:OwnerContract": {
        "src": "contracts\\practice-module-2\\OwnerContract.sol:6",
        "version": {
          "withMetadata": "21813de85b7751f84642fc78a7cd59c49c4542ad28d0ad2b1a4378d1d137d67f",
          "withoutMetadata": "f64b393d0fc09a5f993a662a608cce5c698cc1f87cd67d0421dfe1fb789a085e",
          "linkedWithoutMetadata": "f64b393d0fc09a5f993a662a608cce5c698cc1f87cd67d0421dfe1fb789a085e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setOwner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "OwnerContract",
              "src": "contracts\\practice-module-2\\OwnerContract.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/practice-module-2/TokenExchange.sol:TokenExchange": {
        "src": "contracts\\practice-module-2\\TokenExchange.sol:12",
        "version": {
          "withMetadata": "f048f75963ea8137e7456a18afff07b828cf135dadbf287b29ac239c2b74750d",
          "withoutMetadata": "b0af05f24d50603b308fd8b9b7c4c06cbc955babebd71f69f200f2b1dba0fd37",
          "linkedWithoutMetadata": "b0af05f24d50603b308fd8b9b7c4c06cbc955babebd71f69f200f2b1dba0fd37"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address)",
          "swapAToB(uint256)",
          "swapBToA(uint256)",
          "buyTokenA()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenExchange",
            "src": "contracts\\practice-module-2\\TokenExchange.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "tokenA",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)1346",
              "contract": "TokenExchange",
              "src": "contracts\\practice-module-2\\TokenExchange.sol:15"
            },
            {
              "label": "tokenB",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)1346",
              "contract": "TokenExchange",
              "src": "contracts\\practice-module-2\\TokenExchange.sol:16"
            },
            {
              "label": "exchangeRate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TokenExchange",
              "src": "contracts\\practice-module-2\\TokenExchange.sol:16"
            }
          ],
          "types": {
            "t_contract(IERC20)1346": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts\\practice-GuideDAO\\СontractsSeveral.sol:First": {
        "src": "contracts\\practice-GuideDAO\\СontractsSeveral.sol:5",
        "version": {
          "withMetadata": "aa18d0aee94e81cb94d0c8e48e64e9e65e564b6bf07aa23552407d25d3872eef",
          "withoutMetadata": "97ff31ea949be3c420d90de81ace63e4fb21a7d86ea8f3a7f4d018479663e336",
          "linkedWithoutMetadata": "97ff31ea949be3c420d90de81ace63e4fb21a7d86ea8f3a7f4d018479663e336"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "sendMoney(address payable)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts\\practice-GuideDAO\\СontractsSeveral.sol:Second": {
        "src": "contracts\\practice-GuideDAO\\СontractsSeveral.sol:10",
        "version": {
          "withMetadata": "3b81f922467ed5f79215bb4090c844dceb665a8eac3e1a2f6b5959b78d6b026c",
          "withoutMetadata": "e1c7a50f88a87127af6fd5948113fe035e2e0cd2bee3bb4588544155fce48478",
          "linkedWithoutMetadata": "e1c7a50f88a87127af6fd5948113fe035e2e0cd2bee3bb4588544155fce48478"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "getBalance()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts\\practice-GuideDAO\\СontractsSeveral.sol:Third": {
        "src": "contracts\\practice-GuideDAO\\СontractsSeveral.sol:20",
        "version": {
          "withMetadata": "a1084620cadf515c9cdeaebdb415d6cbd2c3216a1c26d370c18b3148cf05f6de",
          "withoutMetadata": "6c4286b6f039205e151f7ee764fca9f4fb231284097cde1adc49b5e81c13a688",
          "linkedWithoutMetadata": "6c4286b6f039205e151f7ee764fca9f4fb231284097cde1adc49b5e81c13a688"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "0f6bc28175f2f5015e9435473966edd69c627281a06f2701e1af9496d3f06a58",
          "withoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312",
          "linkedWithoutMetadata": "aef8899eac78fba7080b09fc141bbd85fea7f379041e693bd8f5e5e8ddf44312"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      }
    }
  ]
}
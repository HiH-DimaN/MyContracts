// SPDX-License-Identifier: MIT
// taken from openzeppelin

pragma solidity ^0.8.20;

/**
 * @title Строковые утилиты
 * @dev Эта библиотека содержит функции для работы со строками.
 * В частности, здесь реализована функция для преобразования числа в строку.
 */
library Strings {

    /**
     * @dev Преобразует число типа uint256 в строковое представление.
     * @param value Число типа uint256, которое нужно преобразовать в строку.
     * @return string Строковое представление числа.
     */
    function toString(uint256 value) internal pure returns (string memory) {
        
        // Если значение равно 0, то сразу возвращаем строку "0".
        if (value == 0) {
            return "0";
        }

        uint256 temp = value; // Копия исходного значения для обработки
        uint256 digits; // Переменная для подсчета количества цифр

        // Цикл для подсчета количества цифр в числе
        while (temp != 0) {
            digits++; // Увеличиваем счетчик цифр
            temp /= 10; // Уменьшаем число, удаляя последнюю цифру
        }

        // Создаем массив байтов для хранения цифр в строковом формате
        bytes memory buffer = new bytes(digits);

        // Восстанавливаем число в строковом формате, начиная с младших цифр
        while (value != 0) {
            digits -= 1; // Уменьшаем счетчик оставшихся цифр
            buffer[digits] = bytes1(uint8(48 + uint256(value % 10))); // Преобразуем цифру в символ и записываем в массив
            value /= 10; // Уменьшаем число, удаляя последнюю цифру
        }

        // Возвращаем строку, собрав все символы в буфере
        return string(buffer);
    }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Enum,
  EnumInterface,
} from "../../../../contracts/PracticeModule1/LessonEnum.sol/Enum";

const _abi = [
  {
    inputs: [],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "get",
    outputs: [
      {
        internalType: "enum Enum.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "order",
    outputs: [
      {
        internalType: "enum Enum.Order",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Enum.Status",
        name: "_status",
        type: "uint8",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum Enum.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b506101d48061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061006f575f3560e01c8063bf15071d1161004d578063bf15071d146100be578063d826f88f146100d7578063ea8a1af0146100e6575f80fd5b8063200d2ed21461007357806324b8ba5f1461009a5780636d4ce63c146100af575b5f80fd5b5f5461008490610100900460ff1681565b604051610091919061014b565b60405180910390f35b6100ad6100a8366004610165565b6100f6565b005b5f54610100900460ff16610084565b5f546100ca9060ff1681565b604051610091919061018a565b6100ad5f805461ff0019169055565b5f805461ff001916610400179055005b5f805482919061ff0019166101008360048111156101165761011661011e565b021790555050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b602081016005831061015f5761015f61011e565b91905290565b5f60208284031215610175575f80fd5b813560058110610183575f80fd5b9392505050565b602081016003831061015f5761015f61011e56fea26469706673582212207349ac32eb5877ed5a7791935c8867a57cef2281de5390b07b4fee636043af1364736f6c634300081a0033";

type EnumConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnumConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Enum__factory extends ContractFactory {
  constructor(...args: EnumConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Enum & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Enum__factory {
    return super.connect(runner) as Enum__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnumInterface {
    return new Interface(_abi) as EnumInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Enum {
    return new Contract(address, _abi, runner) as unknown as Enum;
  }
}

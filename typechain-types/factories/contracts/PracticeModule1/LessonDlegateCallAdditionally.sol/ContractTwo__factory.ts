/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ContractTwo,
  ContractTwoInterface,
} from "../../../../contracts/PracticeModule1/LessonDlegateCallAdditionally.sol/ContractTwo";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "contractOneAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "callContractOne",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102ac806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063696aa34214610030575b600080fd5b61004361003e3660046101b5565b610059565b6040516100509190610227565b60405180910390f35b604051602481018390526044810182905260609060009060640160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9abadad50000000000000000000000000000000000000000000000000000000017905251909150600090819073ffffffffffffffffffffffffffffffffffffffff88169082906100f990869061025a565b60006040518083038185875af1925050503d8060008114610136576040519150601f19603f3d011682016040523d82523d6000602084013e61013b565b606091505b5091509150816101ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f43616c6c20746f20436f6e74726163744f6e65206661696c6564000000000000604482015260640160405180910390fd5b9695505050505050565b6000806000606084860312156101ca57600080fd5b833573ffffffffffffffffffffffffffffffffffffffff811681146101ee57600080fd5b95602085013595506040909401359392505050565b60005b8381101561021e578181015183820152602001610206565b50506000910152565b6020815260008251806020840152610246816040850160208701610203565b601f01601f19169190910160400192915050565b6000825161026c818460208701610203565b919091019291505056fea26469706673582212206ff3469aa3f230c6e439cebc004d42420ccf3a6730ecb47cf955f9f76da0eb2d64736f6c63430008140033";

type ContractTwoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractTwoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractTwo__factory extends ContractFactory {
  constructor(...args: ContractTwoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ContractTwo & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ContractTwo__factory {
    return super.connect(runner) as ContractTwo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractTwoInterface {
    return new Interface(_abi) as ContractTwoInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ContractTwo {
    return new Contract(address, _abi, runner) as unknown as ContractTwo;
  }
}

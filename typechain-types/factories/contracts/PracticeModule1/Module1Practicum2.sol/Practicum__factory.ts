/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Practicum,
  PracticumInterface,
} from "../../../../contracts/PracticeModule1/Module1Practicum2.sol/Practicum";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_groupId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_memberAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_age",
        type: "uint256",
      },
    ],
    name: "addToGroup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_key1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_key2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "addToNestedMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_key",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_age",
        type: "uint256",
      },
    ],
    name: "addToPersonArrayMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_key",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_age",
        type: "uint256",
      },
    ],
    name: "addToPersonMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_key1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_key2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "computeSumFromNestedMapping",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_key1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_key2",
        type: "uint256",
      },
    ],
    name: "getNestedMappingValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "groups",
    outputs: [
      {
        internalType: "string",
        name: "groupName",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nestedMapping",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "personArrayMapping",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "age",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "personMapping",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "age",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "personsArray",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "age",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_key1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_key2",
        type: "uint256",
      },
    ],
    name: "removeFromNestedMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_key",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "removeFromPersonArrayMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610cdf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806396324bd41161008c578063c14101c011610066578063c14101c0146101e4578063c4a1f323146101f7578063d80290461461020a578063e69a7b8b1461023257600080fd5b806396324bd41461019e5780639e1a5be0146101be578063bae82c9b146101d157600080fd5b806326a1a0c8116100bd57806326a1a0c814610157578063451aa2471461016a57806362d57b8d1461017d57600080fd5b80630f130e24146100e45780630f5d19fb1461011a578063147b288514610144575b600080fd5b6101186100f2366004610797565b6001600160a01b0390911660009081526020818152604080832093835292905290812055565b005b61012d6101283660046107c1565b610264565b60405161013b929190610820565b60405180910390f35b61012d610152366004610797565b610320565b61012d610165366004610842565b610360565b610118610178366004610907565b61037b565b61019061018b366004610797565b6103d4565b60405190815260200161013b565b6101b16101ac3660046107c1565b6103fd565b60405161013b9190610966565b6101906101cc366004610979565b61049b565b6101186101df366004610797565b6104bd565b6101186101f23660046109ac565b610676565b6101186102053660046109ac565b6106c3565b610190610218366004610797565b600060208181529281526040808220909352908152205481565b610118610240366004610979565b6001600160a01b039092166000908152602081815260408083209383529290522055565b6003818154811061027457600080fd5b906000526020600020906002020160009150905080600001805461029790610a03565b80601f01602080910402602001604051908101604052809291908181526020018280546102c390610a03565b80156103105780601f106102e557610100808354040283529160200191610310565b820191906000526020600020905b8154815290600101906020018083116102f357829003601f168201915b5050505050908060010154905082565b6004602052816000526040600020818154811061033c57600080fd5b90600052602060002090600202016000915091505080600001805461029790610a03565b60016020526000908152604090208054819061029790610a03565b6000848152600260209081526040808320815180830183528681528084018690526001600160a01b0388168552600182019093529220815181906103bf9082610a8c565b50602082015181600101559050505050505050565b6001600160a01b0382166000908152602081815260408083208484529091529020545b92915050565b60026020526000908152604090208054819061041890610a03565b80601f016020809104026020016040519081016040528092919081815260200182805461044490610a03565b80156104915780601f1061046657610100808354040283529160200191610491565b820191906000526020600020905b81548152906001019060200180831161047457829003601f168201915b5050505050905081565b6000806104a885856103d4565b90506104b48382610b62565b95945050505050565b6001600160a01b0382166000908152600460205260409020548110610542576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f496e646578206f7574206f6620626f756e647300000000000000000000000000604482015260640160405180910390fd5b805b6001600160a01b03831660009081526004602052604090205461056990600190610b75565b81101561061e576001600160a01b0383166000908152600460205260409020610593826001610b62565b815481106105a3576105a3610b88565b906000526020600020906002020160046000856001600160a01b03166001600160a01b0316815260200190815260200160002082815481106105e7576105e7610b88565b60009182526020909120600290910201806106028382610b9e565b506001918201549101558061061681610c79565b915050610544565b506001600160a01b038216600090815260046020526040902080548061064657610646610c93565b600082815260208120600019909201916002830201906106668282610725565b6001820160009055505090555050565b60408051808201825283815260208082018490526001600160a01b0386166000908152600190915291909120815181906106b09082610a8c565b5060208201518160010155905050505050565b6001600160a01b0383166000908152600460209081526040808320815180830190925285825281830185905280546001810182559084529190922082516002909202019081906107139082610a8c565b50602082015181600101555050505050565b50805461073190610a03565b6000825580601f10610741575050565b601f01602090049060005260206000209081019061075f9190610762565b50565b5b808211156107775760008155600101610763565b5090565b80356001600160a01b038116811461079257600080fd5b919050565b600080604083850312156107aa57600080fd5b6107b38361077b565b946020939093013593505050565b6000602082840312156107d357600080fd5b5035919050565b6000815180845260005b81811015610800576020818501810151868301820152016107e4565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061083360408301856107da565b90508260208301529392505050565b60006020828403121561085457600080fd5b61085d8261077b565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261088b57600080fd5b813567ffffffffffffffff808211156108a6576108a6610864565b604051601f8301601f19908116603f011681019082821181831017156108ce576108ce610864565b816040528381528660208588010111156108e757600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561091d57600080fd5b8435935061092d6020860161077b565b9250604085013567ffffffffffffffff81111561094957600080fd5b6109558782880161087a565b949793965093946060013593505050565b60208152600061085d60208301846107da565b60008060006060848603121561098e57600080fd5b6109978461077b565b95602085013595506040909401359392505050565b6000806000606084860312156109c157600080fd5b6109ca8461077b565b9250602084013567ffffffffffffffff8111156109e657600080fd5b6109f28682870161087a565b925050604084013590509250925092565b600181811c90821680610a1757607f821691505b602082108103610a3757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610a8757600081815260208120601f850160051c81016020861015610a645750805b601f850160051c820191505b81811015610a8357828155600101610a70565b5050505b505050565b815167ffffffffffffffff811115610aa657610aa6610864565b610aba81610ab48454610a03565b84610a3d565b602080601f831160018114610aef5760008415610ad75750858301515b600019600386901b1c1916600185901b178555610a83565b600085815260208120601f198616915b82811015610b1e57888601518255948401946001909101908401610aff565b5085821015610b3c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b808201808211156103f7576103f7610b4c565b818103818111156103f7576103f7610b4c565b634e487b7160e01b600052603260045260246000fd5b818103610ba9575050565b610bb38254610a03565b67ffffffffffffffff811115610bcb57610bcb610864565b610bd981610ab48454610a03565b6000601f821160018114610c0d5760008315610bf55750848201545b600019600385901b1c1916600184901b178455610c72565b600085815260209020601f19841690600086815260209020845b83811015610c475782860154825560019586019590910190602001610c27565b5085831015610c655781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b60006000198203610c8c57610c8c610b4c565b5060010190565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220807c87303cc6164ec4cdd60ffd4a38f3c0d01db72e3e9dca405c19fcce31399264736f6c63430008140033";

type PracticumConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PracticumConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Practicum__factory extends ContractFactory {
  constructor(...args: PracticumConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Practicum & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Practicum__factory {
    return super.connect(runner) as Practicum__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PracticumInterface {
    return new Interface(_abi) as PracticumInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Practicum {
    return new Contract(address, _abi, runner) as unknown as Practicum;
  }
}

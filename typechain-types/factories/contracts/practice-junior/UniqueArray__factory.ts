/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  UniqueArray,
  UniqueArrayInterface,
} from "../../../contracts/practice-junior/UniqueArray";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "AddedValue",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "addUniqueValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getValues",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uniqueValues",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b506103d58061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80630ff4c9161461004e57806319eb4a901461007457806325b002e01461008957806396d2f0511461009c575b5f80fd5b61006161005c3660046102bd565b6100b1565b6040519081526020015b60405180910390f35b61007c610143565b60405161006b91906102d4565b6100616100973660046102bd565b610198565b6100af6100aa3660046102bd565b6101b6565b005b5f80548210610121576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f496e646578206f7574206f6620626f756e64730000000000000000000000000060448201526064015b60405180910390fd5b5f828154811061013357610133610316565b905f5260205f2001549050919050565b60605f80548060200260200160405190810160405280929190818152602001828054801561018e57602002820191905f5260205f20905b81548152602001906001019080831161017a575b5050505050905090565b5f81815481106101a6575f80fd5b5f91825260209091200154905081565b5f5b5f54811161025557815f82815481106101d3576101d3610316565b905f5260205f20015403610243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f56616c756520616c7265616479206578697374730000000000000000000000006044820152606401610118565b8061024d81610343565b9150506101b8565b505f80546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018190556040518181527f799ee159879d92435d70d0554642fdd27697ea7610aabc791a88ae28a4d853f29060200160405180910390a150565b5f602082840312156102cd575f80fd5b5035919050565b602080825282518282018190525f918401906040840190835b8181101561030b5783518352602093840193909201916001016102ed565b509095945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610398577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b506001019056fea26469706673582212206b2dae7e1db3d641b250034d7be7fbf9e451a5ae437eff6b9268acb80fa909f864736f6c634300081a0033";

type UniqueArrayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniqueArrayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniqueArray__factory extends ContractFactory {
  constructor(...args: UniqueArrayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UniqueArray & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UniqueArray__factory {
    return super.connect(runner) as UniqueArray__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniqueArrayInterface {
    return new Interface(_abi) as UniqueArrayInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): UniqueArray {
    return new Contract(address, _abi, runner) as unknown as UniqueArray;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  UniqueCount,
  UniqueCountInterface,
} from "../../../contracts/practice-junior/UniqueCount";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "addUniqueValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getUniqueCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uniqueValues",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b506101c18061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c806325b002e01461004357806327b4f7d71461006857806384fdb04e1461006f575b5f80fd5b610056610051366004610147565b610084565b60405190815260200160405180910390f35b5f54610056565b61008261007d366004610147565b6100a2565b005b5f8181548110610092575f80fd5b5f91825260209091200154905081565b5f5b5f5481101561011557815f82815481106100c0576100c061015e565b905f5260205f2001540361010d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201525f602482015260440160405180910390fd5b6001016100a4565b505f80546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630155565b5f60208284031215610157575f80fd5b5035919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffdfea2646970667358221220c37cd71531876211f96be97e8b045e8b34f41af891ad9bd0edaa58080232c2d364736f6c634300081a0033";

type UniqueCountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniqueCountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniqueCount__factory extends ContractFactory {
  constructor(...args: UniqueCountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UniqueCount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UniqueCount__factory {
    return super.connect(runner) as UniqueCount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniqueCountInterface {
    return new Interface(_abi) as UniqueCountInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): UniqueCount {
    return new Contract(address, _abi, runner) as unknown as UniqueCount;
  }
}

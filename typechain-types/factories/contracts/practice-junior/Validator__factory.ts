/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Validator,
  ValidatorInterface,
} from "../../../contracts/practice-junior/Validator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_number",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_text",
        type: "string",
      },
    ],
    name: "ParametersValidated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_number",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_text",
        type: "string",
      },
    ],
    name: "validateParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b5061034a8061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063db46dfbe1461002d575b5f80fd5b61004061003b3660046101f1565b610042565b005b73ffffffffffffffffffffffffffffffffffffffff83166100aa5760405162461bcd60e51b815260206004820152601660248201527f416464726573732063616e6e6f74206265207a65726f0000000000000000000060448201526064015b60405180910390fd5b5f82116100f95760405162461bcd60e51b815260206004820181905260248201527f4e756d626572206d7573742062652067726561746572207468616e207a65726f60448201526064016100a1565b5f81511161016f5760405162461bcd60e51b815260206004820152602860248201527f546578742063616e6e6f7420626520656d707479546578742063616e6e6f742060448201527f626520656d70747900000000000000000000000000000000000000000000000060648201526084016100a1565b8273ffffffffffffffffffffffffffffffffffffffff167f9d3ccd3800f696e9a79ed0cbfa3752984f71263aa4083bf972ec220148a16a7483836040516101b79291906102d8565b60405180910390a2505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f805f60608486031215610203575f80fd5b833573ffffffffffffffffffffffffffffffffffffffff81168114610226575f80fd5b925060208401359150604084013567ffffffffffffffff811115610248575f80fd5b8401601f81018613610258575f80fd5b803567ffffffffffffffff811115610272576102726101c4565b604051601f19603f601f19601f8501160116810181811067ffffffffffffffff821117156102a2576102a26101c4565b6040528181528282016020018810156102b9575f80fd5b816020840160208301375f602083830101528093505050509250925092565b828152604060208201525f82518060408401528060208501606085015e5f606082850101526060601f19601f830116840101915050939250505056fea264697066735822122055275c76f6ad9ab7c147da37d34cab4777bd4821f86fcd1a0b1608be8d4fc02b64736f6c634300081a0033";

type ValidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Validator__factory extends ContractFactory {
  constructor(...args: ValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Validator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Validator__factory {
    return super.connect(runner) as Validator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ValidatorInterface {
    return new Interface(_abi) as ValidatorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Validator {
    return new Contract(address, _abi, runner) as unknown as Validator;
  }
}

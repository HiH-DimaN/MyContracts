/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TimedLock,
  TimedLockInterface,
} from "../../../contracts/PracticeJunior/TimedLock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "executed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastExecuted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101cb3803806101cb83398101604081905261002f91610037565b600155610050565b60006020828403121561004957600080fd5b5051919050565b61016c8061005f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630d668087146100465780631c15ff771461006157806331a38c891461006a575b600080fd5b61004f60015481565b60405190815260200160405180910390f35b61004f60005481565b610072610074565b005b60015460005461008491906100f6565b42116100f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f46756e6374696f6e206973206c6f636b65640000000000000000000000000000604482015260640160405180910390fd5b42600055565b80820180821115610130577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9291505056fea2646970667358221220b29ea4c62c206661111a193fcf90e24343c0d5b04fb8362133c01822d4d17da164736f6c63430008140033";

type TimedLockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TimedLockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TimedLock__factory extends ContractFactory {
  constructor(...args: TimedLockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _lockTime: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_lockTime, overrides || {});
  }
  override deploy(
    _lockTime: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_lockTime, overrides || {}) as Promise<
      TimedLock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TimedLock__factory {
    return super.connect(runner) as TimedLock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimedLockInterface {
    return new Interface(_abi) as TimedLockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TimedLock {
    return new Contract(address, _abi, runner) as unknown as TimedLock;
  }
}

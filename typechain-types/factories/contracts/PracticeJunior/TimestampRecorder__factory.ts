/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TimestampRecorder,
  TimestampRecorderInterface,
} from "../../../contracts/PracticeJunior/TimestampRecorder";

const _abi = [
  {
    inputs: [],
    name: "getLustUpdated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lustUpdated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b50609980601a5f395ff3fe6080604052348015600e575f80fd5b5060043610603a575f3560e01c80631c5be3d714603e5780632f5e7d8514604757806342a2ef2614605c575b5f80fd5b6045425f55565b005b5f545b60405190815260200160405180910390f35b604a5f548156fea2646970667358221220859124f50fb74eccd98144ead9db8bd902b6a90c44235c5c468c95968a51386964736f6c634300081a0033";

type TimestampRecorderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TimestampRecorderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TimestampRecorder__factory extends ContractFactory {
  constructor(...args: TimestampRecorderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TimestampRecorder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TimestampRecorder__factory {
    return super.connect(runner) as TimestampRecorder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimestampRecorderInterface {
    return new Interface(_abi) as TimestampRecorderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TimestampRecorder {
    return new Contract(address, _abi, runner) as unknown as TimestampRecorder;
  }
}

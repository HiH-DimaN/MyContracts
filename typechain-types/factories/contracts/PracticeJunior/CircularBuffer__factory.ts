/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CircularBuffer,
  CircularBufferInterface,
} from "../../../contracts/PracticeJunior/CircularBuffer";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103a43803806103a483398101604081905261002f9161013a565b600081116100765760405162461bcd60e51b815260206004820152601060248201526f053697a65206d757374206265203e20360841b604482015260640160405180910390fd5b806001600160401b0381111561008e5761008e610153565b6040519080825280602002602001820160405280156100b7578160200160208202803683370190505b5080516100cc916000916020909101906100da565b506001556000600255610169565b828054828255906000526020600020908101928215610115579160200282015b828111156101155782518255916020019190600101906100fa565b50610121929150610125565b5090565b5b808211156101215760008155600101610126565b60006020828403121561014c57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b61022c806101786000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631003e2d2146100465780639507d39a1461005b578063de8fa43114610080575b600080fd5b61005961005436600461017e565b610088565b005b61006e61006936600461017e565b6100ce565b60405190815260200160405180910390f35b60015461006e565b8060006002548154811061009e5761009e610197565b906000526020600020018190555060015460025460016100be91906101ad565b6100c891906101d4565b60025550565b6000600154821061013f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f496e646578206f7574206f6620626f756e647300000000000000000000000000604482015260640160405180910390fd5b60006001548360025461015291906101ad565b61015c91906101d4565b8154811061016c5761016c610197565b90600052602060002001549050919050565b60006020828403121561019057600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b808201808211156101ce57634e487b7160e01b600052601160045260246000fd5b92915050565b6000826101f157634e487b7160e01b600052601260045260246000fd5b50069056fea264697066735822122009351554ab41c802ffe6510f8bf0b7d5d04adcfc1c9e48a8d2f278a60dd3702b64736f6c63430008140033";

type CircularBufferConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CircularBufferConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CircularBuffer__factory extends ContractFactory {
  constructor(...args: CircularBufferConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _size: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_size, overrides || {});
  }
  override deploy(
    _size: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_size, overrides || {}) as Promise<
      CircularBuffer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CircularBuffer__factory {
    return super.connect(runner) as CircularBuffer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CircularBufferInterface {
    return new Interface(_abi) as CircularBufferInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CircularBuffer {
    return new Contract(address, _abi, runner) as unknown as CircularBuffer;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  CallLimiter,
  CallLimiterInterface,
} from "../../../contracts/PracticeJunior/CallLimiter";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxCalls",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "callNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "FunctionCalled",
    type: "event",
  },
  {
    inputs: [],
    name: "callCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "limitedFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCalls",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resetCounter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxCalls",
        type: "uint256",
      },
    ],
    name: "updateMaxCalls",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardAmount",
        type: "uint256",
      },
    ],
    name: "updateRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526040516107a93803806107a9833981016040819052610022916100a2565b61002c81836100c6565b34101561007f5760405162461bcd60e51b815260206004820152601560248201527f4e6f7420656e6f7567682065746865722073656e740000000000000000000000604482015260640160405180910390fd5b600080546001600160a01b031916331781556001929092556003556002556100f1565b600080604083850312156100b557600080fd5b505080516020909101519092909150565b80820281158282048414176100eb57634e487b7160e01b600052601160045260246000fd5b92915050565b6106a9806101006000396000f3fe6080604052600436106100b15760003560e01c8063ce80958711610069578063dbdf7fce1161004e578063dbdf7fce14610198578063df8d05d7146101ad578063f7b2a7be146101c357600080fd5b8063ce80958714610170578063d0e30db01461019057600080fd5b80634b28f9a21161009a5780634b28f9a2146100e0578063838c0eb6146101095780638da5cb5b1461011e57600080fd5b806315c2ba14146100b65780633ccfd60b146100d8575b600080fd5b3480156100c257600080fd5b506100d66100d13660046105d6565b6101d9565b005b6100d66102a6565b3480156100ec57600080fd5b506100f660025481565b6040519081526020015b60405180910390f35b34801561011557600080fd5b506100d6610357565b34801561012a57600080fd5b5060005461014b9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610100565b34801561017c57600080fd5b506100d661018b3660046105d6565b610437565b6100d66104ff565b3480156101a457600080fd5b506100d6610568565b3480156101b957600080fd5b506100f660015481565b3480156101cf57600080fd5b506100f660035481565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102455760405162461bcd60e51b815260206004820152601660248201527f4e6f742074686520636f6e7472616374206f776e65720000000000000000000060448201526064015b60405180910390fd5b600154610252908261061e565b4710156102a15760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f75676820657468657220696e20636f6e747261637400000000604482015260640161023c565b600355565b60005473ffffffffffffffffffffffffffffffffffffffff16331461030d5760405162461bcd60e51b815260206004820152601660248201527f4e6f742074686520636f6e7472616374206f776e657200000000000000000000604482015260640161023c565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116914780156108fc02929091818181858888f19350505050158015610354573d6000803e3d6000fd5b50565b600154600254106103aa5760405162461bcd60e51b815260206004820152601360248201527f43616c6c206c696d697420657863656564656400000000000000000000000000604482015260640161023c565b600280549060006103ba8361063b565b9091555050600354604051339180156108fc02916000818181858888f193505050501580156103ed573d6000803e3d6000fd5b5060025460035460405133927f4f5f2eb1d2a2542d1a60e6cae01db7a7687e4ff1933126391eab1f6cdd3037c79261042d92918252602082015260400190565b60405180910390a2565b60005473ffffffffffffffffffffffffffffffffffffffff16331461049e5760405162461bcd60e51b815260206004820152601660248201527f4e6f742074686520636f6e7472616374206f776e657200000000000000000000604482015260640161023c565b6003546104ab908261061e565b4710156104fa5760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f75676820657468657220696e20636f6e747261637400000000604482015260640161023c565b600155565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105665760405162461bcd60e51b815260206004820152601660248201527f4e6f742074686520636f6e7472616374206f776e657200000000000000000000604482015260640161023c565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105cf5760405162461bcd60e51b815260206004820152601660248201527f4e6f742074686520636f6e7472616374206f776e657200000000000000000000604482015260640161023c565b6000600255565b6000602082840312156105e857600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082028115828204841417610635576106356105ef565b92915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361066c5761066c6105ef565b506001019056fea26469706673582212201a52e736448a8bf9002d34b5a4beeacc0909812b0662df5508680c6b75aabfb164736f6c63430008140033";

type CallLimiterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CallLimiterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CallLimiter__factory extends ContractFactory {
  constructor(...args: CallLimiterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _maxCalls: BigNumberish,
    _rewardAmount: BigNumberish,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _maxCalls,
      _rewardAmount,
      overrides || {}
    );
  }
  override deploy(
    _maxCalls: BigNumberish,
    _rewardAmount: BigNumberish,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(_maxCalls, _rewardAmount, overrides || {}) as Promise<
      CallLimiter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CallLimiter__factory {
    return super.connect(runner) as CallLimiter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CallLimiterInterface {
    return new Interface(_abi) as CallLimiterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CallLimiter {
    return new Contract(address, _abi, runner) as unknown as CallLimiter;
  }
}

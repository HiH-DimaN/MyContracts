/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FeedbackContract,
  FeedbackContractInterface,
} from "../../../contracts/PracticeJunior/FeedbackContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "FeedbackGenerated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_input",
        type: "string",
      },
    ],
    name: "perfomAction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610210806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cfbd4e5614610030575b600080fd5b61004361003e36600461010b565b610057565b604051901515815260200160405180910390f35b8051600090819015610067575060015b604080513381526060602082018190526019908201527f416374696f6e20686173206265656e20706572666f726d65640000000000000060808201528215158183015290517fba5ed9b44d417522673288f1542f96d8ecb9477cd4c2d046a05c05f39447301f9181900360a00190a192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561011d57600080fd5b813567ffffffffffffffff8082111561013557600080fd5b818401915084601f83011261014957600080fd5b81358181111561015b5761015b6100dc565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156101a1576101a16100dc565b816040528281528760208487010111156101ba57600080fd5b82602086016020830137600092810160200192909252509594505050505056fea2646970667358221220ce9a82ce4de237c9fdfcc84c2ab1357d2a264af7563cb245fe426f1d0e3e974364736f6c63430008140033";

type FeedbackContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeedbackContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeedbackContract__factory extends ContractFactory {
  constructor(...args: FeedbackContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FeedbackContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FeedbackContract__factory {
    return super.connect(runner) as FeedbackContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeedbackContractInterface {
    return new Interface(_abi) as FeedbackContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FeedbackContract {
    return new Contract(address, _abi, runner) as unknown as FeedbackContract;
  }
}

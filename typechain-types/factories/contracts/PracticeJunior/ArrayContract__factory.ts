/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ArrayContract,
  ArrayContractInterface,
} from "../../../contracts/PracticeJunior/ArrayContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "element",
        type: "uint256",
      },
    ],
    name: "AddingElement",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newElement",
        type: "uint256",
      },
    ],
    name: "addArray",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "array",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getArray",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b506101fc8061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c806338d9419314610043578063aa0a917114610069578063d504ea1d1461007e575b5f80fd5b61005661005136600461016d565b610093565b6040519081526020015b60405180910390f35b61007c61007736600461016d565b6100b1565b005b610086610118565b6040516100609190610184565b5f81815481106100a1575f80fd5b5f91825260209091200154905081565b5f80546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018190556040518181527ffdf1af1a5f8b1f3a1e1ce2cbe58ff2695d077e0f88c2e65cc297522ced506c609060200160405180910390a150565b60605f80548060200260200160405190810160405280929190818152602001828054801561016357602002820191905f5260205f20905b81548152602001906001019080831161014f575b5050505050905090565b5f6020828403121561017d575f80fd5b5035919050565b602080825282518282018190525f918401906040840190835b818110156101bb57835183526020938401939092019160010161019d565b50909594505050505056fea2646970667358221220300ebb0c0a87b8a6d036875914ad40e8117509730375beefa5028da621a5ddc864736f6c634300081a0033";

type ArrayContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArrayContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArrayContract__factory extends ContractFactory {
  constructor(...args: ArrayContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ArrayContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ArrayContract__factory {
    return super.connect(runner) as ArrayContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArrayContractInterface {
    return new Interface(_abi) as ArrayContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ArrayContract {
    return new Contract(address, _abi, runner) as unknown as ArrayContract;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ArrayContract,
  ArrayContractInterface,
} from "../../../contracts/PracticeJunior/ArrayContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "element",
        type: "uint256",
      },
    ],
    name: "AddingElement",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newElement",
        type: "uint256",
      },
    ],
    name: "addArray",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "array",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getArray",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061020a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806338d9419314610046578063aa0a91711461006c578063d504ea1d14610081575b600080fd5b610059610054366004610177565b610096565b6040519081526020015b60405180910390f35b61007f61007a366004610177565b6100b7565b005b61008961011f565b6040516100639190610190565b600081815481106100a657600080fd5b600091825260209091200154905081565b600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018190556040518181527ffdf1af1a5f8b1f3a1e1ce2cbe58ff2695d077e0f88c2e65cc297522ced506c609060200160405180910390a150565b6060600080548060200260200160405190810160405280929190818152602001828054801561016d57602002820191906000526020600020905b815481526020019060010190808311610159575b5050505050905090565b60006020828403121561018957600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156101c8578351835292840192918401916001016101ac565b5090969550505050505056fea264697066735822122081820135a835d61932a7c52b270f26f0d2e3ee50a6550f68c40d7ac451ac077364736f6c63430008140033";

type ArrayContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArrayContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArrayContract__factory extends ContractFactory {
  constructor(...args: ArrayContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ArrayContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ArrayContract__factory {
    return super.connect(runner) as ArrayContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArrayContractInterface {
    return new Interface(_abi) as ArrayContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ArrayContract {
    return new Contract(address, _abi, runner) as unknown as ArrayContract;
  }
}

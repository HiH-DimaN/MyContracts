/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  InputValidation,
  InputValidationInterface,
} from "../../../contracts/PracticeJunior/InputValidation";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "validation",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101bd806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b72bedd014610030575b600080fd5b61004361003e366004610102565b610059565b604051610050919061011b565b60405180910390f35b6060816000036100c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f56616c7565206d757374206265206e6f6e2d7a65726f00000000000000000000604482015260640160405180910390fd5b505060408051808201909152600b81527f56616c696420696e707574000000000000000000000000000000000000000000602082015290565b60006020828403121561011457600080fd5b5035919050565b600060208083528351808285015260005b818110156101485785810183015185820160400152820161012c565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116850101925050509291505056fea2646970667358221220650c0ff52ab285e5894b5136b18271d71e5390b0605a729a3ec756f34cedc86b64736f6c63430008140033";

type InputValidationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InputValidationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InputValidation__factory extends ContractFactory {
  constructor(...args: InputValidationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      InputValidation & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): InputValidation__factory {
    return super.connect(runner) as InputValidation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InputValidationInterface {
    return new Interface(_abi) as InputValidationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InputValidation {
    return new Contract(address, _abi, runner) as unknown as InputValidation;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  RecordsStorage,
  RecordsStorageInterface,
} from "../../../../contracts/practice-GuideDAO/RecordFactoryENS.sol/RecordsStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    name: "addFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Record",
        name: "_record",
        type: "address",
      },
    ],
    name: "addRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "factories",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "records",
    outputs: [
      {
        internalType: "contract Record",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b5060405161058b38038061058b83398101604081905261002e916100bb565b806001600160a01b03811661005c57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100658161006c565b50506100e8565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100cb575f80fd5b81516001600160a01b03811681146100e1575f80fd5b9392505050565b610496806100f55f395ff3fe608060405234801561000f575f80fd5b506004361061007a575f3560e01c80638da5cb5b116100585780638da5cb5b146100d857806399b53463146100f5578063f2fde38b14610108578063fab526891461011b575f80fd5b806329ce1ec51461007e5780633446106714610093578063715018a6146100d0575b5f80fd5b61009161008c366004610427565b61014d565b005b6100a66100a1366004610449565b6101a3565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100916101d8565b5f5473ffffffffffffffffffffffffffffffffffffffff166100a6565b610091610103366004610427565b6101eb565b610091610116366004610427565b6102dd565b61013d610129366004610427565b60026020525f908152604090205460ff1681565b60405190151581526020016100c7565b610155610340565b73ffffffffffffffffffffffffffffffffffffffff165f90815260026020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b600181815481106101b2575f80fd5b5f9182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6101e0610340565b6101e95f610392565b565b335f9081526002602052604090205460ff16610268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4e6f7420616e20617574686f72697a656420666163746f72790000000000000060448201526064015b60405180910390fd5b6001805480820182555f919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6102e5610340565b73ffffffffffffffffffffffffffffffffffffffff8116610334576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f600482015260240161025f565b61033d81610392565b50565b5f5473ffffffffffffffffffffffffffffffffffffffff1633146101e9576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161025f565b5f805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b73ffffffffffffffffffffffffffffffffffffffff8116811461033d575f80fd5b5f60208284031215610437575f80fd5b813561044281610406565b9392505050565b5f60208284031215610459575f80fd5b503591905056fea2646970667358221220f9347d177baeca712f00f9c2d2776ecbf752c2e30c67bad8b5c6934db1d0337764736f6c634300081a0033";

type RecordsStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RecordsStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RecordsStorage__factory extends ContractFactory {
  constructor(...args: RecordsStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      RecordsStorage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RecordsStorage__factory {
    return super.connect(runner) as RecordsStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RecordsStorageInterface {
    return new Interface(_abi) as RecordsStorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RecordsStorage {
    return new Contract(address, _abi, runner) as unknown as RecordsStorage;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  AddresDemo,
  AddresDemoInterface,
} from "../../../../contracts/practice-GuideDAO/AddressDemo.sol/AddresDemo";

const _abi = [
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b506101208061001c5f395ff3fe6080604052348015600e575f80fd5b50600436106030575f3560e01c806312065fe0146034578063e30081a014605f575b5f80fd5b5f5473ffffffffffffffffffffffffffffffffffffffff163160405190815260200160405180910390f35b60b0606a36600460b2565b5f80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b005b5f6020828403121560c1575f80fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811460e3575f80fd5b939250505056fea2646970667358221220875cbacfb7db2d62fcb7be82257406cd762f96e94710ae663f5b28d64a8ba66c64736f6c634300081a0033";

type AddresDemoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddresDemoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddresDemo__factory extends ContractFactory {
  constructor(...args: AddresDemoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AddresDemo & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AddresDemo__factory {
    return super.connect(runner) as AddresDemo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddresDemoInterface {
    return new Interface(_abi) as AddresDemoInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AddresDemo {
    return new Contract(address, _abi, runner) as unknown as AddresDemo;
  }
}

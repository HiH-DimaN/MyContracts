/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  LibStringsDemo,
  LibStringsDemoInterface,
} from "../../../../contracts/practice-GuideDAO/LibStringDemo.sol/LibStringsDemo";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
    ],
    name: "testConvert",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b506102d18061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063cc4157eb1461002d575b5f80fd5b61004061003b366004610204565b610056565b60405161004d919061021b565b60405180910390f35b606061006182610067565b92915050565b60605f61007383610123565b60010190505f8167ffffffffffffffff8111156100925761009261026e565b6040519080825280601f01601f1916602001820160405280156100bc576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846100c657509392505050565b5f807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061016b577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310610197576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106101b557662386f26fc10000830492506010015b6305f5e10083106101cd576305f5e100830492506008015b61271083106101e157612710830492506004015b606483106101f3576064830492506002015b600a83106100615760010192915050565b5f60208284031215610214575f80fd5b5035919050565b602081525f82518060208401528060208501604085015e5f6040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffdfea26469706673582212203ae838252460b0ba77b13a06ca7d6fcfbcecca04010e50b4686980e0bacdba0364736f6c634300081a0033";

type LibStringsDemoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibStringsDemoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibStringsDemo__factory extends ContractFactory {
  constructor(...args: LibStringsDemoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LibStringsDemo & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LibStringsDemo__factory {
    return super.connect(runner) as LibStringsDemo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibStringsDemoInterface {
    return new Interface(_abi) as LibStringsDemoInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LibStringsDemo {
    return new Contract(address, _abi, runner) as unknown as LibStringsDemo;
  }
}

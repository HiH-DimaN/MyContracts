/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  MCSToken,
  MCSTokenInterface,
} from "../../../../../contracts/practice-GuideDAO/ERC20/ERC20.sol/MCSToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "shop",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approve",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "shop",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b50604051610c07380380610c0783398101604081905261002e9161018b565b6040518060400160405280600881526020016726a1a9aa37b5b2b760c11b815250604051806040016040528060038152602001621350d560ea1b815250601483836004908161007d919061024f565b50600561008a848261024f565b50600180546001600160a01b031916331790556100a782826100b1565b505050505061032e565b6001546001600160a01b031633146100ff5760405162461bcd60e51b815260206004820152600d60248201526c6e6f7420616e206f776e65722160981b604482015260640160405180910390fd5b6001600160a01b0381165f9081526002602052604081208054849290610126908490610309565b92505081905550815f8082825461013d9190610309565b90915550506040518281526001600160a01b038216905f907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b5f6020828403121561019b575f80fd5b81516001600160a01b03811681146101b1575f80fd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806101e057607f821691505b6020821081036101fe57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561018657805f5260205f20601f840160051c810160208510156102295750805b601f840160051c820191505b81811015610248575f8155600101610235565b5050505050565b81516001600160401b03811115610268576102686101b8565b61027c8161027684546101cc565b84610204565b6020601f8211600181146102ae575f83156102975750848201515b5f19600385901b1c1916600184901b178455610248565b5f84815260208120601f198516915b828110156102dd57878501518255602094850194600190920191016102bd565b50848210156102fa57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561032857634e487b7160e01b5f52601160045260245ffd5b92915050565b6108cc8061033b5f395ff3fe608060405234801561000f575f80fd5b50600436106100c4575f3560e01c806370a082311161007d5780639dc29fac116100585780639dc29fac14610169578063a9059cbb1461017c578063dd62ed3e1461018f575f80fd5b806370a082311461012657806394bf804d1461014e57806395d89b4114610161575f80fd5b806318160ddd116100ad57806318160ddd146100fb57806323b872dd1461010c578063313ce5671461011f575f80fd5b806306fdde03146100c8578063095ea7b3146100e6575b5f80fd5b6100d06101a2565b6040516100dd91906106b0565b60405180910390f35b6100f96100f436600461071e565b610232565b005b5f545b6040519081526020016100dd565b6100f961011a366004610746565b610241565b60126100fe565b6100fe610134366004610780565b6001600160a01b03165f9081526002602052604090205490565b6100f961015c3660046107a0565b61039e565b6100d061047f565b6100f961017736600461071e565b61048e565b6100f961018a36600461071e565b61052f565b6100fe61019d3660046107ca565b610624565b6060600480546101b1906107f2565b80601f01602080910402602001604051908101604052809291908181526020018280546101dd906107f2565b80156102285780601f106101ff57610100808354040283529160200191610228565b820191905f5260205f20905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b61023d338383610650565b5050565b828180610262836001600160a01b03165f9081526002602052604090205490565b10156102b55760405162461bcd60e51b815260206004820152601260248201527f6e6f7420656e6f75676820746f6b656e7321000000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b038086165f908152600360209081526040808320938816835292905290812080548592906102eb908490610870565b90915550506001600160a01b0385165f9081526002602052604081208054859290610317908490610870565b90915550506001600160a01b0384165f9081526002602052604081208054859290610343908490610883565b92505081905550836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161038f91815260200190565b60405180910390a35050505050565b6001546001600160a01b031633146103f85760405162461bcd60e51b815260206004820152600d60248201527f6e6f7420616e206f776e6572210000000000000000000000000000000000000060448201526064016102ac565b6001600160a01b0381165f908152600260205260408120805484929061041f908490610883565b92505081905550815f808282546104369190610883565b90915550506040518281526001600160a01b038216905f907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6060600580546101b1906107f2565b6001546001600160a01b031633146104e85760405162461bcd60e51b815260206004820152600d60248201527f6e6f7420616e206f776e6572210000000000000000000000000000000000000060448201526064016102ac565b6001600160a01b0382165f908152600260205260408120805483929061050f908490610870565b92505081905550805f808282546105269190610870565b90915550505050565b335f81815260026020526040902054829081111561058f5760405162461bcd60e51b815260206004820152601260248201527f6e6f7420656e6f75676820746f6b656e7321000000000000000000000000000060448201526064016102ac565b335f90815260026020526040812080548592906105ad908490610870565b90915550506001600160a01b0384165f90815260026020526040812080548592906105d9908490610883565b90915550506040518381526001600160a01b0385169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350505050565b6001600160a01b038083165f908152600360209081526040808320938516835292905220545b92915050565b6001600160a01b038381165f8181526003602090815260408083209487168084529482529182902085905590518481527f6e11fb1b7f119e3f2fa29896ef5fdf8b8a2d0d4df6fe90ba8668e7d8b2ffa25e910160405180910390a3505050565b602081525f82518060208401528060208501604085015e5f6040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b80356001600160a01b0381168114610719575f80fd5b919050565b5f806040838503121561072f575f80fd5b61073883610703565b946020939093013593505050565b5f805f60608486031215610758575f80fd5b61076184610703565b925061076f60208501610703565b929592945050506040919091013590565b5f60208284031215610790575f80fd5b61079982610703565b9392505050565b5f80604083850312156107b1575f80fd5b823591506107c160208401610703565b90509250929050565b5f80604083850312156107db575f80fd5b6107e483610703565b91506107c160208401610703565b600181811c9082168061080657607f821691505b60208210810361083d577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b8181038181111561064a5761064a610843565b8082018082111561064a5761064a61084356fea26469706673582212202685a94ec0a88a1d7ea16f988646450815acfd834acccc7d78256864251963b164736f6c634300081a0033";

type MCSTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MCSTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MCSToken__factory extends ContractFactory {
  constructor(...args: MCSTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    shop: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(shop, overrides || {});
  }
  override deploy(
    shop: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(shop, overrides || {}) as Promise<
      MCSToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MCSToken__factory {
    return super.connect(runner) as MCSToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MCSTokenInterface {
    return new Interface(_abi) as MCSTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MCSToken {
    return new Contract(address, _abi, runner) as unknown as MCSToken;
  }
}

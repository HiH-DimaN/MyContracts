/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Demo,
  DemoInterface,
} from "../../../contracts/practice-GuideDAO/Demo";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "a",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_a",
        type: "uint256",
      },
    ],
    name: "run",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b50604051610221380380610221833981016040819052602b91604f565b600180546001600160a01b0319166001600160a01b0392909216919091179055607a565b5f60208284031215605e575f80fd5b81516001600160a01b03811681146073575f80fd5b9392505050565b61019a806100875f395ff3fe608060405260043610610033575f3560e01c80630dbe671f146100375780638da5cb5b1461005e578063a444f5e9146100af575b5f80fd5b348015610042575f80fd5b5061004b5f5481565b6040519081526020015b60405180910390f35b348015610069575f80fd5b5060015461008a9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610055565b6100c26100bd36600461014d565b6100c4565b005b60015473ffffffffffffffffffffffffffffffffffffffff163314610149576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f6e6f74206174206f776e65722100000000000000000000000000000000000000604482015260640160405180910390fd5b5f55565b5f6020828403121561015d575f80fd5b503591905056fea264697066735822122031194732115605c569b309c7dea84cb381ef153be583de6425c574999c231f0f64736f6c634300081a0033";

type DemoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DemoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Demo__factory extends ContractFactory {
  constructor(...args: DemoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, overrides || {}) as Promise<
      Demo & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Demo__factory {
    return super.connect(runner) as Demo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DemoInterface {
    return new Interface(_abi) as DemoInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Demo {
    return new Contract(address, _abi, runner) as unknown as Demo;
  }
}

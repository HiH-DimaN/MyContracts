/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FundsDemo,
  FundsDemoInterface,
} from "../../../contracts/practice-GuideDAO/FundsDemo";

const _abi = [
  {
    inputs: [],
    name: "balanceReceied",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveMoney",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawMoney",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b506101ea8061001c5f395ff3fe60806040526004361061003e575f3560e01c806312065fe01461004257806316372646146100625780636d26ec1814610076578063ac44600214610080575b5f80fd5b34801561004d575f80fd5b50475b60405190815260200160405180910390f35b34801561006d575f80fd5b506100505f5481565b61007e610094565b005b34801561008b575f80fd5b5061007e6100ab565b345f808282546100a4919061015f565b9091555050565b5f3390508073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610112573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610136919061019d565b6040518115909202915f818181858888f1935050505015801561015b573d5f803e3d5ffd5b5050565b80820180821115610197577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b92915050565b5f602082840312156101ad575f80fd5b505191905056fea26469706673582212209f81b1db0d333046ebb3695f80016b05402807ac45a7de20f2c1ae2d3e6a32ad64736f6c634300081a0033";

type FundsDemoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundsDemoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundsDemo__factory extends ContractFactory {
  constructor(...args: FundsDemoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FundsDemo & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FundsDemo__factory {
    return super.connect(runner) as FundsDemo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundsDemoInterface {
    return new Interface(_abi) as FundsDemoInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FundsDemo {
    return new Contract(address, _abi, runner) as unknown as FundsDemo;
  }
}

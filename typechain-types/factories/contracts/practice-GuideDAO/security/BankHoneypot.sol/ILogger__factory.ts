/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ILogger,
  ILoggerInterface,
} from "../../../../../contracts/practice-GuideDAO/security/BankHoneypot.sol/ILogger";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "eventCode",
        type: "uint256",
      },
    ],
    name: "Log",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "eventCode",
        type: "uint256",
      },
    ],
    name: "log",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ILogger__factory {
  static readonly abi = _abi;
  static createInterface(): ILoggerInterface {
    return new Interface(_abi) as ILoggerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ILogger {
    return new Contract(address, _abi, runner) as unknown as ILogger;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MappingDemo,
  MappingDemoInterface,
} from "../../../contracts/PracticeGuideDAO/MappingDemo";

const _abi = [
  {
    inputs: [],
    name: "addAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addrMap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061011a806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80630ee969531460375780631f095aad146075575b600080fd5b607333600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b005b6095608036600460a9565b60006020819052908152604090205460ff1681565b604051901515815260200160405180910390f35b60006020828403121560ba57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811460dd57600080fd5b939250505056fea26469706673582212207568754ec99727b11a33a7049993e110024a862bbc3f592790eb2351fefe041b64736f6c63430008140033";

type MappingDemoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MappingDemoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MappingDemo__factory extends ContractFactory {
  constructor(...args: MappingDemoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MappingDemo & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MappingDemo__factory {
    return super.connect(runner) as MappingDemo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MappingDemoInterface {
    return new Interface(_abi) as MappingDemoInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MappingDemo {
    return new Contract(address, _abi, runner) as unknown as MappingDemo;
  }
}

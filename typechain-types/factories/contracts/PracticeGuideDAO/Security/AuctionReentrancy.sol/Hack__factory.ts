/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../../../common";
import type {
  Hack,
  HackInterface,
} from "../../../../../contracts/PracticeGuideDAO/Security/AuctionReentrancy.sol/Hack";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_toHack",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "hack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526040516101eb3803806101eb833981016040819052602091609e565b670de0b6b3a764000034146032575f80fd5b5f80546001600160a01b0319166001600160a01b038316908117825560408051631998aeef60e01b815290519192631998aeef923492600480820193929182900301818588803b1580156083575f80fd5b505af11580156094573d5f803e3d5ffd5b50505050505060c9565b5f6020828403121560ad575f80fd5b81516001600160a01b038116811460c2575f80fd5b9392505050565b610115806100d65f395ff3fe608060405260043610601e575f3560e01c80634de260a2146056575f80fd5b366052575f54670de0b6b3a764000073ffffffffffffffffffffffffffffffffffffffff909116311060505760506064565b005b5f80fd5b3480156060575f80fd5b5060505b5f8054604080517f590e1ae3000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9092169263590e1ae39260048084019382900301818387803b15801560c8575f80fd5b505af115801560d9573d5f803e3d5ffd5b5050505056fea2646970667358221220200e76c8a96f5132066ec3e340b658267e27fe8d1517d13570385457429f451f64736f6c634300081a0033";

type HackConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HackConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Hack__factory extends ContractFactory {
  constructor(...args: HackConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _toHack: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_toHack, overrides || {});
  }
  override deploy(
    _toHack: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(_toHack, overrides || {}) as Promise<
      Hack & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Hack__factory {
    return super.connect(runner) as Hack__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HackInterface {
    return new Interface(_abi) as HackInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Hack {
    return new Contract(address, _abi, runner) as unknown as Hack;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Overflow,
  OverflowInterface,
} from "../../../contracts/PracticeGuideDAO/Overflow";

const _abi = [
  {
    inputs: [],
    name: "decrement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "myUint8",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_newVal",
        type: "uint8",
      },
    ],
    name: "setMyUint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061014d806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632baeceb714610051578063866515fc1461008b578063d09de08a146100af578063e2a4b2af146100ca575b600080fd5b6000805460ff19811660ff9182167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01909116179055005b005b6100896100993660046100ed565b6000805460ff191660ff92909216919091179055565b6100896000805460ff8082166001011660ff19909116179055565b6000546100d79060ff1681565b60405160ff909116815260200160405180910390f35b6000602082840312156100ff57600080fd5b813560ff8116811461011057600080fd5b939250505056fea2646970667358221220de76670a6a0a42be97e8b5332e0508a0bbf159e07fa66df79a4c6c648e6c115b64736f6c63430008140033";

type OverflowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OverflowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Overflow__factory extends ContractFactory {
  constructor(...args: OverflowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Overflow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Overflow__factory {
    return super.connect(runner) as Overflow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OverflowInterface {
    return new Interface(_abi) as OverflowInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Overflow {
    return new Contract(address, _abi, runner) as unknown as Overflow;
  }
}

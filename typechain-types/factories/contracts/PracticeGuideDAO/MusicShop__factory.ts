/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MusicShop,
  MusicShopInterface,
} from "../../../contracts/PracticeGuideDAO/MusicShop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AlbumBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "albumUid",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "customer",
        type: "address",
      },
    ],
    name: "OrderDelivered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "addAlbum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "albums",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allAlbums",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quantity",
            type: "uint256",
          },
        ],
        internalType: "struct MusicShop.Album[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentOrderId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "delivered",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orders",
    outputs: [
      {
        internalType: "uint256",
        name: "orderID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "albumUid",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "orderedAt",
        type: "uint256",
      },
      {
        internalType: "enum MusicShop.OrderStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b50604051610ed2380380610ed2833981016040819052602b91604f565b600480546001600160a01b0319166001600160a01b0392909216919091179055607a565b5f60208284031215605e575f80fd5b81516001600160a01b03811681146073575f80fd5b9392505050565b610e4b806100875f395ff3fe608060405260043610610096575f3560e01c8063925931fc11610066578063d96a094a1161004c578063d96a094a14610210578063ea5df05914610223578063ec34297a14610253575f80fd5b8063925931fc146101cb578063a85c38ef146101e0575f80fd5b806326987b60146101125780634b5e41081461013a5780636526deb11461015b5780638da5cb5b1461017a575f80fd5b3661010e5760405162461bcd60e51b815260206004820152602f60248201527f506c656173652075736520746865206275792066756e6374696f6e20746f207060448201527f7572636861736520616c62756d7321000000000000000000000000000000000060648201526084015b60405180910390fd5b5f80fd5b34801561011d575f80fd5b5061012760025481565b6040519081526020015b60405180910390f35b348015610145575f80fd5b50610159610154366004610a47565b610274565b005b348015610166575f80fd5b50610159610175366004610a5e565b6103c8565b348015610185575f80fd5b506004546101a69073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610131565b3480156101d6575f80fd5b5061012760035481565b3480156101eb575f80fd5b506101ff6101fa366004610a47565b6104fc565b604051610131959493929190610afa565b61015961021e366004610a47565b610555565b34801561022e575f80fd5b5061024261023d366004610a47565b6107e7565b604051610131959493929190610b85565b34801561025e575f80fd5b506102676108ad565b6040516101319190610bb7565b60045473ffffffffffffffffffffffffffffffffffffffff1633146102db5760405162461bcd60e51b815260206004820152600d60248201527f6e6f7420616e206f776e657221000000000000000000000000000000000000006044820152606401610105565b5f600182815481106102ef576102ef610c6d565b5f918252602090912060059091020190506001600482015460ff16600181111561031b5761031b610ae6565b036103685760405162461bcd60e51b815260206004820152600e60248201527f696e76616c6964207374617475730000000000000000000000000000000000006044820152606401610105565b60048101805460ff1916600190811790915560028201549082015460405173ffffffffffffffffffffffffffffffffffffffff909216917f5bb66d85e0b78294f5d62dcc373c22e3d67e643b319cba2fba58c8180008220b905f90a35050565b60045473ffffffffffffffffffffffffffffffffffffffff16331461042f5760405162461bcd60e51b815260206004820152600d60248201527f6e6f7420616e206f776e657221000000000000000000000000000000000000006044820152606401610105565b5f6040518060a00160405280600254815260200187815260200186868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920182905250938552505050602080830187905260409283018690528454600181810187559583529181902084516005909302019182558301519381019390935581015190919060028201906104ca9082610d19565b506060820151600382015560809091015160049091015560028054905f6104f083610de8565b91905055505050505050565b6001818154811061050b575f80fd5b5f91825260209091206005909102018054600182015460028301546003840154600490940154929450909273ffffffffffffffffffffffffffffffffffffffff9091169160ff1685565b5f80828154811061056857610568610c6d565b905f5260205f2090600502019050806003015434146105c95760405162461bcd60e51b815260206004820152600d60248201527f696e76616c6964207072696365000000000000000000000000000000000000006044820152606401610105565b5f81600401541161061c5760405162461bcd60e51b815260206004820152600c60248201527f6f7574206f662073746f636b00000000000000000000000000000000000000006044820152606401610105565b600481018054905f61062d83610e00565b90915550506040805160a0810182526003548152600183810154602083019081523393830193845242606084019081525f608085018181528454808601865591859052855160059092027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6810192835593517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf785015595517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf88401805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff000000000000000000000000000000000000000090921691909117905590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf983015593517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa90910180549394939192909160ff191690838181111561079757610797610ae6565b0217905550506003805491505f6107ad83610de8565b90915550506001810154604051429133917f428114751c1b5d2334d5f2464a79219ffc3a15d4a23042756994f6337fdccc17905f90a45050565b5f81815481106107f5575f80fd5b905f5260205f2090600502015f91509050805f01549080600101549080600201805461082090610c95565b80601f016020809104026020016040519081016040528092919081815260200182805461084c90610c95565b80156108975780601f1061086e57610100808354040283529160200191610897565b820191905f5260205f20905b81548152906001019060200180831161087a57829003601f168201915b5050505050908060030154908060040154905085565b5f80546060918167ffffffffffffffff8111156108cc576108cc610c81565b60405190808252806020026020018201604052801561092e57816020015b61091b6040518060a001604052805f81526020015f8019168152602001606081526020015f81526020015f81525090565b8152602001906001900390816108ea5790505b5090505f5b82811015610a40575f818154811061094d5761094d610c6d565b905f5260205f2090600502016040518060a00160405290815f82015481526020016001820154815260200160028201805461098790610c95565b80601f01602080910402602001604051908101604052809291908181526020018280546109b390610c95565b80156109fe5780601f106109d5576101008083540402835291602001916109fe565b820191905f5260205f20905b8154815290600101906020018083116109e157829003601f168201915b5050505050815260200160038201548152602001600482015481525050828281518110610a2d57610a2d610c6d565b6020908102919091010152600101610933565b5092915050565b5f60208284031215610a57575f80fd5b5035919050565b5f805f805f60808688031215610a72575f80fd5b85359450602086013567ffffffffffffffff811115610a8f575f80fd5b8601601f81018813610a9f575f80fd5b803567ffffffffffffffff811115610ab5575f80fd5b886020828401011115610ac6575f80fd5b959860209190910197509495604081013595606090910135945092505050565b634e487b7160e01b5f52602160045260245ffd5b8581526020810185905273ffffffffffffffffffffffffffffffffffffffff841660408201526060810183905260a0810160028310610b4757634e487b7160e01b5f52602160045260245ffd5b8260808301529695505050505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b85815284602082015260a060408201525f610ba360a0830186610b57565b606083019490945250608001529392505050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015610c61577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc087860301845281518051865260208101516020870152604081015160a06040880152610c3560a0880182610b57565b606083810151908901526080928301519290970191909152506020938401939190910190600101610bdd565b50929695505050505050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b600181811c90821680610ca957607f821691505b602082108103610cc757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610d1457805f5260205f20601f840160051c81016020851015610cf25750805b601f840160051c820191505b81811015610d11575f8155600101610cfe565b50505b505050565b815167ffffffffffffffff811115610d3357610d33610c81565b610d4781610d418454610c95565b84610ccd565b6020601f821160018114610d79575f8315610d625750848201515b5f19600385901b1c1916600184901b178455610d11565b5f84815260208120601f198516915b82811015610da85787850151825560209485019460019092019101610d88565b5084821015610dc557868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b5f5f198203610df957610df9610dd4565b5060010190565b5f81610e0e57610e0e610dd4565b505f19019056fea264697066735822122019231b69773e081baaed1e00ff2416ef5a403e7fe88c2720d9fc0e3389ebbfaf64736f6c634300081a0033";

type MusicShopConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MusicShopConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MusicShop__factory extends ContractFactory {
  constructor(...args: MusicShopConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, overrides || {}) as Promise<
      MusicShop & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MusicShop__factory {
    return super.connect(runner) as MusicShop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MusicShopInterface {
    return new Interface(_abi) as MusicShopInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MusicShop {
    return new Contract(address, _abi, runner) as unknown as MusicShop;
  }
}

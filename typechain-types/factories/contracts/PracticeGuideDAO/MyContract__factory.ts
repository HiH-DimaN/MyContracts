/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MyContract,
  MyContractInterface,
} from "../../../contracts/PracticeGuideDAO/MyContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "guestList",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bool",
        name: "invited",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listOfFriends",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bool",
        name: "invited",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_invited",
        type: "bool",
      },
    ],
    name: "newFriends",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061050b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638803303d146100465780639b45fc321461005b578063f5fccd8f14610085575b600080fd5b610059610054366004610241565b610098565b005b61006e610069366004610303565b61012e565b60405161007c92919061031c565b60405180910390f35b61006e610093366004610303565b6101ed565b60408051808201909152828152811515602082015260008054600181018255908052815160029091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563019081906100f09082610415565b5060209190910151600190910180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790555050565b6000818154811061013e57600080fd5b906000526020600020906002020160009150905080600001805461016190610373565b80601f016020809104026020016040519081016040528092919081815260200182805461018d90610373565b80156101da5780601f106101af576101008083540402835291602001916101da565b820191906000526020600020905b8154815290600101906020018083116101bd57829003601f168201915b5050506001909301549192505060ff1682565b6001818154811061013e57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8035801515811461023c57600080fd5b919050565b6000806040838503121561025457600080fd5b823567ffffffffffffffff8082111561026c57600080fd5b818501915085601f83011261028057600080fd5b813581811115610292576102926101fd565b604051601f8201601f19908116603f011681019083821181831017156102ba576102ba6101fd565b816040528281528860208487010111156102d357600080fd5b8260208601602083013760006020848301015280965050505050506102fa6020840161022c565b90509250929050565b60006020828403121561031557600080fd5b5035919050565b604081526000835180604084015260005b8181101561034a576020818701810151606086840101520161032d565b506000606082850101526060601f19601f83011684010191505082151560208301529392505050565b600181811c9082168061038757607f821691505b6020821081036103c0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561041057600081815260208120601f850160051c810160208610156103ed5750805b601f850160051c820191505b8181101561040c578281556001016103f9565b5050505b505050565b815167ffffffffffffffff81111561042f5761042f6101fd565b6104438161043d8454610373565b846103c6565b602080601f83116001811461047857600084156104605750858301515b600019600386901b1c1916600185901b17855561040c565b600085815260208120601f198616915b828110156104a757888601518255948401946001909101908401610488565b50858210156104c55787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220b4e93180eb8b5e50e2f51ecacc74107913c551cdd8fd3f72f033792530fefbae64736f6c63430008140033";

type MyContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyContract__factory extends ContractFactory {
  constructor(...args: MyContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyContract__factory {
    return super.connect(runner) as MyContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyContractInterface {
    return new Interface(_abi) as MyContractInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyContract {
    return new Contract(address, _abi, runner) as unknown as MyContract;
  }
}

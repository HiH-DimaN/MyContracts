/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  StringRecord,
  StringRecordInterface,
} from "../../../../contracts/PracticeGuideDAO/RecordFactory.sol/StringRecord";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timeOfCreation",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_record",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getRecordType",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "record",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newRecord",
        type: "string",
      },
    ],
    name: "setRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timeOfCreation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b5060405161066c38038061066c83398101604081905261002e9161005a565b5f829055600161003e8282610199565b505050610253565b634e487b7160e01b5f52604160045260245ffd5b5f806040838503121561006b575f80fd5b825160208401519092506001600160401b03811115610088575f80fd5b8301601f81018513610098575f80fd5b80516001600160401b038111156100b1576100b1610046565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100df576100df610046565b6040528181528282016020018710156100f6575f80fd5b8160208401602083015e5f602083830101528093505050509250929050565b600181811c9082168061012957607f821691505b60208210810361014757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561019457805f5260205f20601f840160051c810160208510156101725750805b601f840160051c820191505b81811015610191575f815560010161017e565b50505b505050565b81516001600160401b038111156101b2576101b2610046565b6101c6816101c08454610115565b8461014d565b6020601f8211600181146101f8575f83156101e15750848201515b5f19600385901b1c1916600184901b178455610191565b5f84815260208120601f198516915b828110156102275787850151825560209485019460019092019101610207565b508482101561024457868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b61040c806102605f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80630781f5c91461004e5780631dcd69ec14610099578063266cf109146100af5780633e0a0099146100b7575b5f80fd5b60408051808201909152600681527f737472696e67000000000000000000000000000000000000000000000000000060208201525b6040516100909190610168565b60405180910390f35b6100a15f5481565b604051908152602001610090565b6100836100cc565b6100ca6100c53660046101ca565b610158565b005b600180546100d99061027e565b80601f01602080910402602001604051908101604052809291908181526020018280546101059061027e565b80156101505780601f1061012757610100808354040283529160200191610150565b820191905f5260205f20905b81548152906001019060200180831161013357829003601f168201915b505050505081565b6001610164828261031b565b5050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f602082840312156101da575f80fd5b813567ffffffffffffffff8111156101f0575f80fd5b8201601f81018413610200575f80fd5b803567ffffffffffffffff81111561021a5761021a61019d565b604051601f19603f601f19601f8501160116810181811067ffffffffffffffff8211171561024a5761024a61019d565b604052818152828201602001861015610261575f80fd5b816020840160208301375f91810160200191909152949350505050565b600181811c9082168061029257607f821691505b6020821081036102c9577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b50919050565b601f82111561031657805f5260205f20601f840160051c810160208510156102f45750805b601f840160051c820191505b81811015610313575f8155600101610300565b50505b505050565b815167ffffffffffffffff8111156103355761033561019d565b61034981610343845461027e565b846102cf565b6020601f82116001811461037b575f83156103645750848201515b5f19600385901b1c1916600184901b178455610313565b5f84815260208120601f198516915b828110156103aa578785015182556020948501946001909201910161038a565b50848210156103c757868401515f19600387901b60f8161c191681555b50505050600190811b0190555056fea2646970667358221220c48c4c0c3e3ce7ff6b9ea41cdeabade0c6b9372cd10fb24b49bd3885fb1a309a64736f6c634300081a0033";

type StringRecordConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StringRecordConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StringRecord__factory extends ContractFactory {
  constructor(...args: StringRecordConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _timeOfCreation: BigNumberish,
    _record: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _timeOfCreation,
      _record,
      overrides || {}
    );
  }
  override deploy(
    _timeOfCreation: BigNumberish,
    _record: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_timeOfCreation, _record, overrides || {}) as Promise<
      StringRecord & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StringRecord__factory {
    return super.connect(runner) as StringRecord__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StringRecordInterface {
    return new Interface(_abi) as StringRecordInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StringRecord {
    return new Contract(address, _abi, runner) as unknown as StringRecord;
  }
}

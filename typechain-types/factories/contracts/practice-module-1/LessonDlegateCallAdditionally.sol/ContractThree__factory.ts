/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ContractThree,
  ContractThreeInterface,
} from "../../../../contracts/practice-module-1/LessonDlegateCallAdditionally.sol/ContractThree";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "doCalculation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "result",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b5060fa8061001b5f395ff3fe6080604052348015600e575f80fd5b50600436106030575f3560e01c8063653721471460345780639abadad514604d575b5f80fd5b603b5f5481565b60405190815260200160405180910390f35b603b6058366004606e565b5f60618284608d565b5f81905590505b92915050565b5f8060408385031215607e575f80fd5b50508035926020909101359150565b808201808211156068577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffdfea2646970667358221220f8831e3c5169943d269ce09f3e927ed460c78097c71c0984bfd0ae70e701e50c64736f6c634300081a0033";

type ContractThreeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractThreeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractThree__factory extends ContractFactory {
  constructor(...args: ContractThreeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ContractThree & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ContractThree__factory {
    return super.connect(runner) as ContractThree__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractThreeInterface {
    return new Interface(_abi) as ContractThreeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ContractThree {
    return new Contract(address, _abi, runner) as unknown as ContractThree;
  }
}

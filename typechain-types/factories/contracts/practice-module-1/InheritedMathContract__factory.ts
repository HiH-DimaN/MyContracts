/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  InheritedMathContract,
  InheritedMathContractInterface,
} from "../../../contracts/practice-module-1/InheritedMathContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "divide",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "multiply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "subtract",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b506102b08061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063165c4a161461004e5780633ef5e44514610073578063771602f714610086578063f88e9fbf14610099575b5f80fd5b61006161005c3660046101b8565b6100ac565b60405190815260200160405180910390f35b6100616100813660046101b8565b6100c0565b6100616100943660046101b8565b610139565b6100616100a73660046101b8565b610144565b5f6100b78284610205565b90505b92915050565b5f81831161012f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f556e646572666c6f77206572726f72000000000000000000000000000000000060448201526064015b60405180910390fd5b6100b7828461021c565b5f6100b7828461022f565b5f8082116101ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f43616e6e6f7420646976696465206279207a65726f00000000000000000000006044820152606401610126565b6100b78284610242565b5f80604083850312156101c9575f80fd5b50508035926020909101359150565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b80820281158282048414176100ba576100ba6101d8565b818103818111156100ba576100ba6101d8565b808201808211156100ba576100ba6101d8565b5f82610275577f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b50049056fea2646970667358221220ec6419681355a4c4c497b6c74d47c08f0e89adf7113ee52913a8378f741bac6064736f6c634300081a0033";

type InheritedMathContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InheritedMathContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InheritedMathContract__factory extends ContractFactory {
  constructor(...args: InheritedMathContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      InheritedMathContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): InheritedMathContract__factory {
    return super.connect(runner) as InheritedMathContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InheritedMathContractInterface {
    return new Interface(_abi) as InheritedMathContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InheritedMathContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as InheritedMathContract;
  }
}

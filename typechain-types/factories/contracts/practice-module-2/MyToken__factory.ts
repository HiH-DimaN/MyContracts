/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MyToken,
  MyTokenInterface,
} from "../../../contracts/practice-module-2/MyToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b50336040518060400160405280600881526020016726bc902a37b5b2b760c11b8152506040518060400160405280600381526020016213565560ea1b815250816003908161005d9190610305565b50600461006a8282610305565b5050506001600160a01b03811661009b57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100a4816100be565b506100b93369d3c21bcecceda100000061010f565b6103e4565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166101385760405163ec442f0560e01b81525f6004820152602401610092565b6101435f8383610147565b5050565b6001600160a01b038316610171578060025f82825461016691906103bf565b909155506101e19050565b6001600160a01b0383165f90815260208190526040902054818110156101c35760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610092565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166101fd5760028054829003905561021b565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161026091815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061029557607f821691505b6020821081036102b357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561030057805f5260205f20601f840160051c810160208510156102de5750805b601f840160051c820191505b818110156102fd575f81556001016102ea565b50505b505050565b81516001600160401b0381111561031e5761031e61026d565b6103328161032c8454610281565b846102b9565b6020601f821160018114610364575f831561034d5750848201515b5f19600385901b1c1916600184901b1784556102fd565b5f84815260208120601f198516915b828110156103935787850151825560209485019460019092019101610373565b50848210156103b057868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156103de57634e487b7160e01b5f52601160045260245ffd5b92915050565b610977806103f15f395ff3fe608060405234801561000f575f80fd5b50600436106100cf575f3560e01c8063715018a61161007d578063a9059cbb11610058578063a9059cbb1461019d578063dd62ed3e146101b0578063f2fde38b146101e8575f80fd5b8063715018a6146101705780638da5cb5b1461017a57806395d89b4114610195575f80fd5b806323b872dd116100ad57806323b872dd14610126578063313ce5671461013957806370a0823114610148575f80fd5b806306fdde03146100d3578063095ea7b3146100f157806318160ddd14610114575b5f80fd5b6100db6101fb565b6040516100e89190610797565b60405180910390f35b6101046100ff366004610805565b61028b565b60405190151581526020016100e8565b6002545b6040519081526020016100e8565b61010461013436600461082d565b6102a4565b604051601281526020016100e8565b610118610156366004610867565b6001600160a01b03165f9081526020819052604090205490565b6101786102c7565b005b6005546040516001600160a01b0390911681526020016100e8565b6100db6102da565b6101046101ab366004610805565b6102e9565b6101186101be366004610887565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101786101f6366004610867565b6102f6565b60606003805461020a906108b8565b80601f0160208091040260200160405190810160405280929190818152602001828054610236906108b8565b80156102815780601f1061025857610100808354040283529160200191610281565b820191905f5260205f20905b81548152906001019060200180831161026457829003601f168201915b5050505050905090565b5f33610298818585610351565b60019150505b92915050565b5f336102b1858285610363565b6102bc858585610416565b506001949350505050565b6102cf6104a5565b6102d85f6104eb565b565b60606004805461020a906108b8565b5f33610298818585610416565b6102fe6104a5565b6001600160a01b038116610345576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f60048201526024015b60405180910390fd5b61034e816104eb565b50565b61035e8383836001610554565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146104105781811015610402576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b0384166004820152602481018290526044810183905260640161033c565b61041084848484035f610554565b50505050565b6001600160a01b038316610458576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f600482015260240161033c565b6001600160a01b03821661049a576040517fec442f050000000000000000000000000000000000000000000000000000000081525f600482015260240161033c565b61035e838383610658565b6005546001600160a01b031633146102d8576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161033c565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038416610596576040517fe602df050000000000000000000000000000000000000000000000000000000081525f600482015260240161033c565b6001600160a01b0383166105d8576040517f94280d620000000000000000000000000000000000000000000000000000000081525f600482015260240161033c565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561041057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161064a91815260200190565b60405180910390a350505050565b6001600160a01b038316610682578060025f8282546106779190610909565b9091555061070b9050565b6001600160a01b0383165f90815260208190526040902054818110156106ed576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602481018290526044810183905260640161033c565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661072757600280548290039055610745565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161078a91815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f6040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b80356001600160a01b0381168114610800575f80fd5b919050565b5f8060408385031215610816575f80fd5b61081f836107ea565b946020939093013593505050565b5f805f6060848603121561083f575f80fd5b610848846107ea565b9250610856602085016107ea565b929592945050506040919091013590565b5f60208284031215610877575f80fd5b610880826107ea565b9392505050565b5f8060408385031215610898575f80fd5b6108a1836107ea565b91506108af602084016107ea565b90509250929050565b600181811c908216806108cc57607f821691505b602082108103610903577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b50919050565b8082018082111561029e577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffdfea2646970667358221220f7bafc34b393a5a21a64f2cac7330e3df637d45fe6b0ed090eca0ab97828bc2364736f6c634300081a0033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyToken__factory {
    return super.connect(runner) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new Interface(_abi) as MyTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyToken {
    return new Contract(address, _abi, runner) as unknown as MyToken;
  }
}

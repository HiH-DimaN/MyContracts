/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Library,
  LibraryInterface,
} from "../../../contracts/PracticeMiddle/Library";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_isbn",
        type: "string",
      },
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_author",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_year",
        type: "uint256",
      },
    ],
    name: "addBook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "books",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "author",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "year",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "available",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_isbn",
        type: "string",
      },
    ],
    name: "getBook",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "author",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "year",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "available",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_isbn",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_avialable",
        type: "bool",
      },
    ],
    name: "setBookAvailability",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061087c806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806302d74d7e146100515780632b9dfe801461006657806345e6df3d14610092578063c37a8361146100a5575b600080fd5b61006461005f366004610516565b6100b8565b005b61007961007436600461056d565b6100f0565b60405161008994939291906105fa565b60405180910390f35b6100646100a0366004610638565b610237565b6100796100b336600461056d565b6102c8565b806000836040516100c991906106c8565b908152604051908190036020019020600301805491151560ff199092169190911790555050565b8051602081830181018051600082529282019190930120915280548190610116906106e4565b80601f0160208091040260200160405190810160405280929190818152602001828054610142906106e4565b801561018f5780601f106101645761010080835404028352916020019161018f565b820191906000526020600020905b81548152906001019060200180831161017257829003601f168201915b5050505050908060010180546101a4906106e4565b80601f01602080910402602001604051908101604052809291908181526020018280546101d0906106e4565b801561021d5780601f106101f25761010080835404028352916020019161021d565b820191906000526020600020905b81548152906001019060200180831161020057829003601f168201915b50505050600283015460039093015491929160ff16905084565b60405180608001604052808481526020018381526020018281526020016001151581525060008560405161026b91906106c8565b908152604051908190036020019020815181906102889082610786565b506020820151600182019061029d9082610786565b50604082015160028201556060909101516003909101805460ff191691151591909117905550505050565b606080600080600080866040516102df91906106c8565b9081526020016040518091039020604051806080016040529081600082018054610308906106e4565b80601f0160208091040260200160405190810160405280929190818152602001828054610334906106e4565b80156103815780601f1061035657610100808354040283529160200191610381565b820191906000526020600020905b81548152906001019060200180831161036457829003601f168201915b5050505050815260200160018201805461039a906106e4565b80601f01602080910402602001604051908101604052809291908181526020018280546103c6906106e4565b80156104135780601f106103e857610100808354040283529160200191610413565b820191906000526020600020905b8154815290600101906020018083116103f657829003601f168201915b5050509183525050600282015460208083019190915260039092015460ff161515604091820152825191830151908301516060909301519199909850919650945092505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261049a57600080fd5b813567ffffffffffffffff808211156104b5576104b561045a565b604051601f8301601f19908116603f011681019082821181831017156104dd576104dd61045a565b816040528381528660208588010111156104f657600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561052957600080fd5b823567ffffffffffffffff81111561054057600080fd5b61054c85828601610489565b9250506020830135801515811461056257600080fd5b809150509250929050565b60006020828403121561057f57600080fd5b813567ffffffffffffffff81111561059657600080fd5b6105a284828501610489565b949350505050565b60005b838110156105c55781810151838201526020016105ad565b50506000910152565b600081518084526105e68160208601602086016105aa565b601f01601f19169290920160200192915050565b60808152600061060d60808301876105ce565b828103602084015261061f81876105ce565b6040840195909552505090151560609091015292915050565b6000806000806080858703121561064e57600080fd5b843567ffffffffffffffff8082111561066657600080fd5b61067288838901610489565b9550602087013591508082111561068857600080fd5b61069488838901610489565b945060408701359150808211156106aa57600080fd5b506106b787828801610489565b949793965093946060013593505050565b600082516106da8184602087016105aa565b9190910192915050565b600181811c908216806106f857607f821691505b602082108103610731577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561078157600081815260208120601f850160051c8101602086101561075e5750805b601f850160051c820191505b8181101561077d5782815560010161076a565b5050505b505050565b815167ffffffffffffffff8111156107a0576107a061045a565b6107b4816107ae84546106e4565b84610737565b602080601f8311600181146107e957600084156107d15750858301515b600019600386901b1c1916600185901b17855561077d565b600085815260208120601f198616915b82811015610818578886015182559484019460019091019084016107f9565b50858210156108365787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220d2c7599480b4e953010e5420a409b32634a52763fee12b4618e2611c51a7776164736f6c63430008140033";

type LibraryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibraryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Library__factory extends ContractFactory {
  constructor(...args: LibraryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Library & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Library__factory {
    return super.connect(runner) as Library__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibraryInterface {
    return new Interface(_abi) as LibraryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Library {
    return new Contract(address, _abi, runner) as unknown as Library;
  }
}

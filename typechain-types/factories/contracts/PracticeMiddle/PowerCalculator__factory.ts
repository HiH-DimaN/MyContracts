/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PowerCalculator,
  PowerCalculatorInterface,
} from "../../../contracts/PracticeMiddle/PowerCalculator";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "base",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exponent",
        type: "uint256",
      },
    ],
    name: "calculatePower",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b506101658061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063f979f2691461002d575b5f80fd5b61004061003b366004610094565b610052565b60405190815260200160405180910390f35b5f815f036100625750600161008e565b5060015f5b82811161008c5761007884836100e1565b915080610084816100f8565b915050610067565b505b92915050565b5f80604083850312156100a5575f80fd5b50508035926020909101359150565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b808202811582820484141761008e5761008e6100b4565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610128576101286100b4565b506001019056fea2646970667358221220c27d554f113d4aa5cacd626faf3f76e212add67300828e3daccd98efe14c3abf64736f6c634300081a0033";

type PowerCalculatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PowerCalculatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PowerCalculator__factory extends ContractFactory {
  constructor(...args: PowerCalculatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PowerCalculator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PowerCalculator__factory {
    return super.connect(runner) as PowerCalculator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PowerCalculatorInterface {
    return new Interface(_abi) as PowerCalculatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PowerCalculator {
    return new Contract(address, _abi, runner) as unknown as PowerCalculator;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Errors__factory>;
    getContractFactory(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Errors__factory>;
    getContractFactory(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Errors__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Math",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Math__factory>;
    getContractFactory(
      name: "Strings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strings__factory>;
    getContractFactory(
      name: "AddresDemo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddresDemo__factory>;
    getContractFactory(
      name: "Album",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Album__factory>;
    getContractFactory(
      name: "AlbumTracker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AlbumTracker__factory>;
    getContractFactory(
      name: "Demo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Demo__factory>;
    getContractFactory(
      name: "DemoNew",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DemoNew__factory>;
    getContractFactory(
      name: "Destroy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Destroy__factory>;
    getContractFactory(
      name: "ENSRegistrar",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ENSRegistrar__factory>;
    getContractFactory(
      name: "Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Factory__factory>;
    getContractFactory(
      name: "FundsDemo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FundsDemo__factory>;
    getContractFactory(
      name: "LibStringsDemo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibStringsDemo__factory>;
    getContractFactory(
      name: "MappingDemo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MappingDemo__factory>;
    getContractFactory(
      name: "MyContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MyContract__factory>;
    getContractFactory(
      name: "MyShop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MyShop__factory>;
    getContractFactory(
      name: "MyToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MyToken__factory>;
    getContractFactory(
      name: "Overflow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Overflow__factory>;
    getContractFactory(
      name: "AddressRecord",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressRecord__factory>;
    getContractFactory(
      name: "Record",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Record__factory>;
    getContractFactory(
      name: "RecordFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RecordFactory__factory>;
    getContractFactory(
      name: "StringRecord",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StringRecord__factory>;
    getContractFactory(
      name: "AddressRecord",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressRecord__factory>;
    getContractFactory(
      name: "AddressRecordFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressRecordFactory__factory>;
    getContractFactory(
      name: "BaseRecordFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseRecordFactory__factory>;
    getContractFactory(
      name: "EnsRecord",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnsRecord__factory>;
    getContractFactory(
      name: "EnsRecordFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnsRecordFactory__factory>;
    getContractFactory(
      name: "IRecordStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRecordStorage__factory>;
    getContractFactory(
      name: "Record",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Record__factory>;
    getContractFactory(
      name: "RecordFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RecordFactory__factory>;
    getContractFactory(
      name: "RecordsStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RecordsStorage__factory>;
    getContractFactory(
      name: "StringRecord",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StringRecord__factory>;
    getContractFactory(
      name: "StringRecordFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StringRecordFactory__factory>;
    getContractFactory(
      name: "SharedWallet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SharedWallet__factory>;
    getContractFactory(
      name: "Voting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Voting__factory>;
    getContractFactory(
      name: "Wallet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Wallet__factory>;
    getContractFactory(
      name: "First",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.First__factory>;
    getContractFactory(
      name: "Second",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Second__factory>;
    getContractFactory(
      name: "Adder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Adder__factory>;
    getContractFactory(
      name: "AddressMap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressMap__factory>;
    getContractFactory(
      name: "ArrayContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArrayContract__factory>;
    getContractFactory(
      name: "ArrayCount",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArrayCount__factory>;
    getContractFactory(
      name: "ArrayDeletion",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArrayDeletion__factory>;
    getContractFactory(
      name: "ArrayStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArrayStorage__factory>;
    getContractFactory(
      name: "ArraySum",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArraySum__factory>;
    getContractFactory(
      name: "BooleanStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BooleanStorage__factory>;
    getContractFactory(
      name: "CallLimiter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CallLimiter__factory>;
    getContractFactory(
      name: "CircularBuffer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CircularBuffer__factory>;
    getContractFactory(
      name: "ConditionChecker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConditionChecker__factory>;
    getContractFactory(
      name: "DataStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DataStorage__factory>;
    getContractFactory(
      name: "Divider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Divider__factory>;
    getContractFactory(
      name: "FeedbackContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeedbackContract__factory>;
    getContractFactory(
      name: "IncrementWithThreshold",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IncrementWithThreshold__factory>;
    getContractFactory(
      name: "InputValidation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InputValidation__factory>;
    getContractFactory(
      name: "KeyExistence",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KeyExistence__factory>;
    getContractFactory(
      name: "Multiplier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multiplier__factory>;
    getContractFactory(
      name: "MultiReturnExample",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MultiReturnExample__factory>;
    getContractFactory(
      name: "OwnerContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnerContract__factory>;
    getContractFactory(
      name: "RestrictedAccess",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RestrictedAccess__factory>;
    getContractFactory(
      name: "RoleBasedAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoleBasedAccessControl__factory>;
    getContractFactory(
      name: "SimpleStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleStorage__factory>;
    getContractFactory(
      name: "StringStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StringStorage__factory>;
    getContractFactory(
      name: "Subtracter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Subtracter__factory>;
    getContractFactory(
      name: "TimedLock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimedLock__factory>;
    getContractFactory(
      name: "TimestampRecorder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimestampRecorder__factory>;
    getContractFactory(
      name: "UniqueArray",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniqueArray__factory>;
    getContractFactory(
      name: "UniqueCount",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniqueCount__factory>;
    getContractFactory(
      name: "Validator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Validator__factory>;
    getContractFactory(
      name: "BaseContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseContract__factory>;
    getContractFactory(
      name: "DataConsumer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DataConsumer__factory>;
    getContractFactory(
      name: "DataProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DataProvider__factory>;
    getContractFactory(
      name: "EmployeeData",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EmployeeData__factory>;
    getContractFactory(
      name: "FallbackExample",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FallbackExample__factory>;
    getContractFactory(
      name: "InheritedContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InheritedContract__factory>;
    getContractFactory(
      name: "Library",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Library__factory>;
    getContractFactory(
      name: "NestedMappings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NestedMappings__factory>;
    getContractFactory(
      name: "PowerCalculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PowerCalculator__factory>;
    getContractFactory(
      name: "ProductStore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProductStore__factory>;
    getContractFactory(
      name: "Receive",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Receive__factory>;
    getContractFactory(
      name: "IMathContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMathContract__factory>;
    getContractFactory(
      name: "InheritedMathContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InheritedMathContract__factory>;
    getContractFactory(
      name: "InterfacrMathContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InterfacrMathContract__factory>;
    getContractFactory(
      name: "Lesson",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Lesson__factory>;
    getContractFactory(
      name: "Array",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Array__factory>;
    getContractFactory(
      name: "LessonBool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LessonBool__factory>;
    getContractFactory(
      name: "Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Receiver__factory>;
    getContractFactory(
      name: "Sender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Sender__factory>;
    getContractFactory(
      name: "Cycles",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Cycles__factory>;
    getContractFactory(
      name: "Delegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Delegate__factory>;
    getContractFactory(
      name: "Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Receiver__factory>;
    getContractFactory(
      name: "Sender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Sender__factory>;
    getContractFactory(
      name: "ContractOne",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractOne__factory>;
    getContractFactory(
      name: "ContractThree",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractThree__factory>;
    getContractFactory(
      name: "ContractTwo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContractTwo__factory>;
    getContractFactory(
      name: "Enum",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Enum__factory>;
    getContractFactory(
      name: "Error",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Error__factory>;
    getContractFactory(
      name: "LessonErrorsAndConditions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LessonErrorsAndConditions__factory>;
    getContractFactory(
      name: "Event",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Event__factory>;
    getContractFactory(
      name: "LessonExternalLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LessonExternalLibrary__factory>;
    getContractFactory(
      name: "LessonGlobalVariablesAndConstructor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LessonGlobalVariablesAndConstructor__factory>;
    getContractFactory(
      name: "UseLibraries",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UseLibraries__factory>;
    getContractFactory(
      name: "Mapping",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Mapping__factory>;
    getContractFactory(
      name: "NestedMapping",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NestedMapping__factory>;
    getContractFactory(
      name: "FunctionModifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FunctionModifier__factory>;
    getContractFactory(
      name: "UserOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UserOwnable__factory>;
    getContractFactory(
      name: "Todos",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Todos__factory>;
    getContractFactory(
      name: "LessonUint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LessonUint__factory>;
    getContractFactory(
      name: "LessonUintPractice",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LessonUintPractice__factory>;
    getContractFactory(
      name: "MathContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MathContract__factory>;
    getContractFactory(
      name: "Module1Lesson2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Module1Lesson2__factory>;
    getContractFactory(
      name: "Module1Lesson2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Module1Lesson2__factory>;
    getContractFactory(
      name: "Practicum",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Practicum__factory>;
    getContractFactory(
      name: "Practicum",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Practicum__factory>;
    getContractFactory(
      name: "BaseContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseContract__factory>;
    getContractFactory(
      name: "Todos",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Todos__factory>;
    getContractFactory(
      name: "DataTypes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DataTypes__factory>;
    getContractFactory(
      name: "DerivedContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DerivedContract__factory>;
    getContractFactory(
      name: "Practicum1Module2Intensiv",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Practicum1Module2Intensiv__factory>;
    getContractFactory(
      name: "Practicum",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Practicum__factory>;
    getContractFactory(
      name: "Module2PracticumIntensive6",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Module2PracticumIntensive6__factory>;
    getContractFactory(
      name: "MyERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MyERC20__factory>;
    getContractFactory(
      name: "MyOZToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MyOZToken__factory>;
    getContractFactory(
      name: "MyToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MyToken__factory>;
    getContractFactory(
      name: "OwnerContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnerContract__factory>;

    getContractAt(
      name: "AccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "IAccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1155Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Errors>;
    getContractAt(
      name: "IERC20Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Errors>;
    getContractAt(
      name: "IERC721Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Errors>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Math",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Math>;
    getContractAt(
      name: "Strings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Strings>;
    getContractAt(
      name: "AddresDemo",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AddresDemo>;
    getContractAt(
      name: "Album",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Album>;
    getContractAt(
      name: "AlbumTracker",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AlbumTracker>;
    getContractAt(
      name: "Demo",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Demo>;
    getContractAt(
      name: "DemoNew",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DemoNew>;
    getContractAt(
      name: "Destroy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Destroy>;
    getContractAt(
      name: "ENSRegistrar",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ENSRegistrar>;
    getContractAt(
      name: "Factory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Factory>;
    getContractAt(
      name: "FundsDemo",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FundsDemo>;
    getContractAt(
      name: "LibStringsDemo",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LibStringsDemo>;
    getContractAt(
      name: "MappingDemo",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MappingDemo>;
    getContractAt(
      name: "MyContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MyContract>;
    getContractAt(
      name: "MyShop",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MyShop>;
    getContractAt(
      name: "MyToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MyToken>;
    getContractAt(
      name: "Overflow",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Overflow>;
    getContractAt(
      name: "AddressRecord",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressRecord>;
    getContractAt(
      name: "Record",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Record>;
    getContractAt(
      name: "RecordFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RecordFactory>;
    getContractAt(
      name: "StringRecord",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.StringRecord>;
    getContractAt(
      name: "AddressRecord",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressRecord>;
    getContractAt(
      name: "AddressRecordFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressRecordFactory>;
    getContractAt(
      name: "BaseRecordFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseRecordFactory>;
    getContractAt(
      name: "EnsRecord",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EnsRecord>;
    getContractAt(
      name: "EnsRecordFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EnsRecordFactory>;
    getContractAt(
      name: "IRecordStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRecordStorage>;
    getContractAt(
      name: "Record",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Record>;
    getContractAt(
      name: "RecordFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RecordFactory>;
    getContractAt(
      name: "RecordsStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RecordsStorage>;
    getContractAt(
      name: "StringRecord",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.StringRecord>;
    getContractAt(
      name: "StringRecordFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.StringRecordFactory>;
    getContractAt(
      name: "SharedWallet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SharedWallet>;
    getContractAt(
      name: "Voting",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Voting>;
    getContractAt(
      name: "Wallet",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Wallet>;
    getContractAt(
      name: "First",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.First>;
    getContractAt(
      name: "Second",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Second>;
    getContractAt(
      name: "Adder",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Adder>;
    getContractAt(
      name: "AddressMap",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressMap>;
    getContractAt(
      name: "ArrayContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ArrayContract>;
    getContractAt(
      name: "ArrayCount",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ArrayCount>;
    getContractAt(
      name: "ArrayDeletion",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ArrayDeletion>;
    getContractAt(
      name: "ArrayStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ArrayStorage>;
    getContractAt(
      name: "ArraySum",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ArraySum>;
    getContractAt(
      name: "BooleanStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BooleanStorage>;
    getContractAt(
      name: "CallLimiter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CallLimiter>;
    getContractAt(
      name: "CircularBuffer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CircularBuffer>;
    getContractAt(
      name: "ConditionChecker",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ConditionChecker>;
    getContractAt(
      name: "DataStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DataStorage>;
    getContractAt(
      name: "Divider",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Divider>;
    getContractAt(
      name: "FeedbackContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FeedbackContract>;
    getContractAt(
      name: "IncrementWithThreshold",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IncrementWithThreshold>;
    getContractAt(
      name: "InputValidation",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.InputValidation>;
    getContractAt(
      name: "KeyExistence",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.KeyExistence>;
    getContractAt(
      name: "Multiplier",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Multiplier>;
    getContractAt(
      name: "MultiReturnExample",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MultiReturnExample>;
    getContractAt(
      name: "OwnerContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnerContract>;
    getContractAt(
      name: "RestrictedAccess",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RestrictedAccess>;
    getContractAt(
      name: "RoleBasedAccessControl",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RoleBasedAccessControl>;
    getContractAt(
      name: "SimpleStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleStorage>;
    getContractAt(
      name: "StringStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.StringStorage>;
    getContractAt(
      name: "Subtracter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Subtracter>;
    getContractAt(
      name: "TimedLock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TimedLock>;
    getContractAt(
      name: "TimestampRecorder",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TimestampRecorder>;
    getContractAt(
      name: "UniqueArray",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UniqueArray>;
    getContractAt(
      name: "UniqueCount",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UniqueCount>;
    getContractAt(
      name: "Validator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Validator>;
    getContractAt(
      name: "BaseContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseContract>;
    getContractAt(
      name: "DataConsumer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DataConsumer>;
    getContractAt(
      name: "DataProvider",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DataProvider>;
    getContractAt(
      name: "EmployeeData",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EmployeeData>;
    getContractAt(
      name: "FallbackExample",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FallbackExample>;
    getContractAt(
      name: "InheritedContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.InheritedContract>;
    getContractAt(
      name: "Library",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Library>;
    getContractAt(
      name: "NestedMappings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.NestedMappings>;
    getContractAt(
      name: "PowerCalculator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PowerCalculator>;
    getContractAt(
      name: "ProductStore",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ProductStore>;
    getContractAt(
      name: "Receive",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Receive>;
    getContractAt(
      name: "IMathContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMathContract>;
    getContractAt(
      name: "InheritedMathContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.InheritedMathContract>;
    getContractAt(
      name: "InterfacrMathContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.InterfacrMathContract>;
    getContractAt(
      name: "Lesson",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Lesson>;
    getContractAt(
      name: "Array",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Array>;
    getContractAt(
      name: "LessonBool",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LessonBool>;
    getContractAt(
      name: "Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Receiver>;
    getContractAt(
      name: "Sender",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Sender>;
    getContractAt(
      name: "Cycles",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Cycles>;
    getContractAt(
      name: "Delegate",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Delegate>;
    getContractAt(
      name: "Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Receiver>;
    getContractAt(
      name: "Sender",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Sender>;
    getContractAt(
      name: "ContractOne",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractOne>;
    getContractAt(
      name: "ContractThree",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractThree>;
    getContractAt(
      name: "ContractTwo",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContractTwo>;
    getContractAt(
      name: "Enum",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Enum>;
    getContractAt(
      name: "Error",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Error>;
    getContractAt(
      name: "LessonErrorsAndConditions",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LessonErrorsAndConditions>;
    getContractAt(
      name: "Event",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Event>;
    getContractAt(
      name: "LessonExternalLibrary",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LessonExternalLibrary>;
    getContractAt(
      name: "LessonGlobalVariablesAndConstructor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LessonGlobalVariablesAndConstructor>;
    getContractAt(
      name: "UseLibraries",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UseLibraries>;
    getContractAt(
      name: "Mapping",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Mapping>;
    getContractAt(
      name: "NestedMapping",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.NestedMapping>;
    getContractAt(
      name: "FunctionModifier",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FunctionModifier>;
    getContractAt(
      name: "UserOwnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UserOwnable>;
    getContractAt(
      name: "Todos",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Todos>;
    getContractAt(
      name: "LessonUint",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LessonUint>;
    getContractAt(
      name: "LessonUintPractice",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LessonUintPractice>;
    getContractAt(
      name: "MathContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MathContract>;
    getContractAt(
      name: "Module1Lesson2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Module1Lesson2>;
    getContractAt(
      name: "Module1Lesson2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Module1Lesson2>;
    getContractAt(
      name: "Practicum",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Practicum>;
    getContractAt(
      name: "Practicum",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Practicum>;
    getContractAt(
      name: "BaseContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseContract>;
    getContractAt(
      name: "Todos",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Todos>;
    getContractAt(
      name: "DataTypes",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DataTypes>;
    getContractAt(
      name: "DerivedContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DerivedContract>;
    getContractAt(
      name: "Practicum1Module2Intensiv",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Practicum1Module2Intensiv>;
    getContractAt(
      name: "Practicum",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Practicum>;
    getContractAt(
      name: "Module2PracticumIntensive6",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Module2PracticumIntensive6>;
    getContractAt(
      name: "MyERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MyERC20>;
    getContractAt(
      name: "MyOZToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MyOZToken>;
    getContractAt(
      name: "MyToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MyToken>;
    getContractAt(
      name: "OwnerContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnerContract>;

    deployContract(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "Math",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Math>;
    deployContract(
      name: "Strings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "AddresDemo",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddresDemo>;
    deployContract(
      name: "Album",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Album>;
    deployContract(
      name: "AlbumTracker",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AlbumTracker>;
    deployContract(
      name: "Demo",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Demo>;
    deployContract(
      name: "DemoNew",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DemoNew>;
    deployContract(
      name: "Destroy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Destroy>;
    deployContract(
      name: "ENSRegistrar",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ENSRegistrar>;
    deployContract(
      name: "Factory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Factory>;
    deployContract(
      name: "FundsDemo",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FundsDemo>;
    deployContract(
      name: "LibStringsDemo",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibStringsDemo>;
    deployContract(
      name: "MappingDemo",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MappingDemo>;
    deployContract(
      name: "MyContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyContract>;
    deployContract(
      name: "MyShop",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyShop>;
    deployContract(
      name: "MyToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyToken>;
    deployContract(
      name: "Overflow",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Overflow>;
    deployContract(
      name: "AddressRecord",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressRecord>;
    deployContract(
      name: "Record",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Record>;
    deployContract(
      name: "RecordFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RecordFactory>;
    deployContract(
      name: "StringRecord",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StringRecord>;
    deployContract(
      name: "AddressRecord",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressRecord>;
    deployContract(
      name: "AddressRecordFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressRecordFactory>;
    deployContract(
      name: "BaseRecordFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BaseRecordFactory>;
    deployContract(
      name: "EnsRecord",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnsRecord>;
    deployContract(
      name: "EnsRecordFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnsRecordFactory>;
    deployContract(
      name: "IRecordStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRecordStorage>;
    deployContract(
      name: "Record",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Record>;
    deployContract(
      name: "RecordFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RecordFactory>;
    deployContract(
      name: "RecordsStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RecordsStorage>;
    deployContract(
      name: "StringRecord",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StringRecord>;
    deployContract(
      name: "StringRecordFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StringRecordFactory>;
    deployContract(
      name: "SharedWallet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SharedWallet>;
    deployContract(
      name: "Voting",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Voting>;
    deployContract(
      name: "Wallet",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Wallet>;
    deployContract(
      name: "First",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.First>;
    deployContract(
      name: "Second",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Second>;
    deployContract(
      name: "Adder",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Adder>;
    deployContract(
      name: "AddressMap",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressMap>;
    deployContract(
      name: "ArrayContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ArrayContract>;
    deployContract(
      name: "ArrayCount",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ArrayCount>;
    deployContract(
      name: "ArrayDeletion",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ArrayDeletion>;
    deployContract(
      name: "ArrayStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ArrayStorage>;
    deployContract(
      name: "ArraySum",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ArraySum>;
    deployContract(
      name: "BooleanStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BooleanStorage>;
    deployContract(
      name: "CallLimiter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CallLimiter>;
    deployContract(
      name: "CircularBuffer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CircularBuffer>;
    deployContract(
      name: "ConditionChecker",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ConditionChecker>;
    deployContract(
      name: "DataStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DataStorage>;
    deployContract(
      name: "Divider",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Divider>;
    deployContract(
      name: "FeedbackContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FeedbackContract>;
    deployContract(
      name: "IncrementWithThreshold",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IncrementWithThreshold>;
    deployContract(
      name: "InputValidation",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InputValidation>;
    deployContract(
      name: "KeyExistence",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.KeyExistence>;
    deployContract(
      name: "Multiplier",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Multiplier>;
    deployContract(
      name: "MultiReturnExample",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MultiReturnExample>;
    deployContract(
      name: "OwnerContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnerContract>;
    deployContract(
      name: "RestrictedAccess",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RestrictedAccess>;
    deployContract(
      name: "RoleBasedAccessControl",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoleBasedAccessControl>;
    deployContract(
      name: "SimpleStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SimpleStorage>;
    deployContract(
      name: "StringStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StringStorage>;
    deployContract(
      name: "Subtracter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Subtracter>;
    deployContract(
      name: "TimedLock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TimedLock>;
    deployContract(
      name: "TimestampRecorder",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TimestampRecorder>;
    deployContract(
      name: "UniqueArray",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UniqueArray>;
    deployContract(
      name: "UniqueCount",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UniqueCount>;
    deployContract(
      name: "Validator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Validator>;
    deployContract(
      name: "BaseContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BaseContract>;
    deployContract(
      name: "DataConsumer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DataConsumer>;
    deployContract(
      name: "DataProvider",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DataProvider>;
    deployContract(
      name: "EmployeeData",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmployeeData>;
    deployContract(
      name: "FallbackExample",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FallbackExample>;
    deployContract(
      name: "InheritedContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InheritedContract>;
    deployContract(
      name: "Library",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Library>;
    deployContract(
      name: "NestedMappings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NestedMappings>;
    deployContract(
      name: "PowerCalculator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PowerCalculator>;
    deployContract(
      name: "ProductStore",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ProductStore>;
    deployContract(
      name: "Receive",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Receive>;
    deployContract(
      name: "IMathContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMathContract>;
    deployContract(
      name: "InheritedMathContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InheritedMathContract>;
    deployContract(
      name: "InterfacrMathContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InterfacrMathContract>;
    deployContract(
      name: "Lesson",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Lesson>;
    deployContract(
      name: "Array",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Array>;
    deployContract(
      name: "LessonBool",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LessonBool>;
    deployContract(
      name: "Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Receiver>;
    deployContract(
      name: "Sender",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Sender>;
    deployContract(
      name: "Cycles",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Cycles>;
    deployContract(
      name: "Delegate",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Delegate>;
    deployContract(
      name: "Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Receiver>;
    deployContract(
      name: "Sender",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Sender>;
    deployContract(
      name: "ContractOne",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractOne>;
    deployContract(
      name: "ContractThree",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractThree>;
    deployContract(
      name: "ContractTwo",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractTwo>;
    deployContract(
      name: "Enum",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Enum>;
    deployContract(
      name: "Error",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Error>;
    deployContract(
      name: "LessonErrorsAndConditions",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LessonErrorsAndConditions>;
    deployContract(
      name: "Event",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Event>;
    deployContract(
      name: "LessonExternalLibrary",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LessonExternalLibrary>;
    deployContract(
      name: "LessonGlobalVariablesAndConstructor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LessonGlobalVariablesAndConstructor>;
    deployContract(
      name: "UseLibraries",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UseLibraries>;
    deployContract(
      name: "Mapping",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Mapping>;
    deployContract(
      name: "NestedMapping",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NestedMapping>;
    deployContract(
      name: "FunctionModifier",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FunctionModifier>;
    deployContract(
      name: "UserOwnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UserOwnable>;
    deployContract(
      name: "Todos",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Todos>;
    deployContract(
      name: "LessonUint",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LessonUint>;
    deployContract(
      name: "LessonUintPractice",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LessonUintPractice>;
    deployContract(
      name: "MathContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MathContract>;
    deployContract(
      name: "Module1Lesson2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Module1Lesson2>;
    deployContract(
      name: "Module1Lesson2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Module1Lesson2>;
    deployContract(
      name: "Practicum",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Practicum>;
    deployContract(
      name: "Practicum",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Practicum>;
    deployContract(
      name: "BaseContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BaseContract>;
    deployContract(
      name: "Todos",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Todos>;
    deployContract(
      name: "DataTypes",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DataTypes>;
    deployContract(
      name: "DerivedContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DerivedContract>;
    deployContract(
      name: "Practicum1Module2Intensiv",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Practicum1Module2Intensiv>;
    deployContract(
      name: "Practicum",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Practicum>;
    deployContract(
      name: "Module2PracticumIntensive6",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Module2PracticumIntensive6>;
    deployContract(
      name: "MyERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyERC20>;
    deployContract(
      name: "MyOZToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyOZToken>;
    deployContract(
      name: "MyToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyToken>;
    deployContract(
      name: "OwnerContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnerContract>;

    deployContract(
      name: "AccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AccessControl>;
    deployContract(
      name: "IAccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAccessControl>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1155Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "Math",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Math>;
    deployContract(
      name: "Strings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "AddresDemo",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddresDemo>;
    deployContract(
      name: "Album",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Album>;
    deployContract(
      name: "AlbumTracker",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AlbumTracker>;
    deployContract(
      name: "Demo",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Demo>;
    deployContract(
      name: "DemoNew",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DemoNew>;
    deployContract(
      name: "Destroy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Destroy>;
    deployContract(
      name: "ENSRegistrar",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ENSRegistrar>;
    deployContract(
      name: "Factory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Factory>;
    deployContract(
      name: "FundsDemo",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FundsDemo>;
    deployContract(
      name: "LibStringsDemo",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LibStringsDemo>;
    deployContract(
      name: "MappingDemo",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MappingDemo>;
    deployContract(
      name: "MyContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyContract>;
    deployContract(
      name: "MyShop",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyShop>;
    deployContract(
      name: "MyToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyToken>;
    deployContract(
      name: "Overflow",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Overflow>;
    deployContract(
      name: "AddressRecord",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressRecord>;
    deployContract(
      name: "Record",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Record>;
    deployContract(
      name: "RecordFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RecordFactory>;
    deployContract(
      name: "StringRecord",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StringRecord>;
    deployContract(
      name: "AddressRecord",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressRecord>;
    deployContract(
      name: "AddressRecordFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressRecordFactory>;
    deployContract(
      name: "BaseRecordFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BaseRecordFactory>;
    deployContract(
      name: "EnsRecord",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnsRecord>;
    deployContract(
      name: "EnsRecordFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EnsRecordFactory>;
    deployContract(
      name: "IRecordStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRecordStorage>;
    deployContract(
      name: "Record",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Record>;
    deployContract(
      name: "RecordFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RecordFactory>;
    deployContract(
      name: "RecordsStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RecordsStorage>;
    deployContract(
      name: "StringRecord",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StringRecord>;
    deployContract(
      name: "StringRecordFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StringRecordFactory>;
    deployContract(
      name: "SharedWallet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SharedWallet>;
    deployContract(
      name: "Voting",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Voting>;
    deployContract(
      name: "Wallet",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Wallet>;
    deployContract(
      name: "First",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.First>;
    deployContract(
      name: "Second",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Second>;
    deployContract(
      name: "Adder",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Adder>;
    deployContract(
      name: "AddressMap",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressMap>;
    deployContract(
      name: "ArrayContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ArrayContract>;
    deployContract(
      name: "ArrayCount",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ArrayCount>;
    deployContract(
      name: "ArrayDeletion",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ArrayDeletion>;
    deployContract(
      name: "ArrayStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ArrayStorage>;
    deployContract(
      name: "ArraySum",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ArraySum>;
    deployContract(
      name: "BooleanStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BooleanStorage>;
    deployContract(
      name: "CallLimiter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CallLimiter>;
    deployContract(
      name: "CircularBuffer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CircularBuffer>;
    deployContract(
      name: "ConditionChecker",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ConditionChecker>;
    deployContract(
      name: "DataStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DataStorage>;
    deployContract(
      name: "Divider",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Divider>;
    deployContract(
      name: "FeedbackContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FeedbackContract>;
    deployContract(
      name: "IncrementWithThreshold",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IncrementWithThreshold>;
    deployContract(
      name: "InputValidation",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InputValidation>;
    deployContract(
      name: "KeyExistence",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.KeyExistence>;
    deployContract(
      name: "Multiplier",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Multiplier>;
    deployContract(
      name: "MultiReturnExample",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MultiReturnExample>;
    deployContract(
      name: "OwnerContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnerContract>;
    deployContract(
      name: "RestrictedAccess",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RestrictedAccess>;
    deployContract(
      name: "RoleBasedAccessControl",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RoleBasedAccessControl>;
    deployContract(
      name: "SimpleStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SimpleStorage>;
    deployContract(
      name: "StringStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StringStorage>;
    deployContract(
      name: "Subtracter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Subtracter>;
    deployContract(
      name: "TimedLock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TimedLock>;
    deployContract(
      name: "TimestampRecorder",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TimestampRecorder>;
    deployContract(
      name: "UniqueArray",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UniqueArray>;
    deployContract(
      name: "UniqueCount",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UniqueCount>;
    deployContract(
      name: "Validator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Validator>;
    deployContract(
      name: "BaseContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BaseContract>;
    deployContract(
      name: "DataConsumer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DataConsumer>;
    deployContract(
      name: "DataProvider",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DataProvider>;
    deployContract(
      name: "EmployeeData",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmployeeData>;
    deployContract(
      name: "FallbackExample",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FallbackExample>;
    deployContract(
      name: "InheritedContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InheritedContract>;
    deployContract(
      name: "Library",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Library>;
    deployContract(
      name: "NestedMappings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NestedMappings>;
    deployContract(
      name: "PowerCalculator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PowerCalculator>;
    deployContract(
      name: "ProductStore",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ProductStore>;
    deployContract(
      name: "Receive",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Receive>;
    deployContract(
      name: "IMathContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMathContract>;
    deployContract(
      name: "InheritedMathContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InheritedMathContract>;
    deployContract(
      name: "InterfacrMathContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InterfacrMathContract>;
    deployContract(
      name: "Lesson",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Lesson>;
    deployContract(
      name: "Array",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Array>;
    deployContract(
      name: "LessonBool",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LessonBool>;
    deployContract(
      name: "Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Receiver>;
    deployContract(
      name: "Sender",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Sender>;
    deployContract(
      name: "Cycles",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Cycles>;
    deployContract(
      name: "Delegate",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Delegate>;
    deployContract(
      name: "Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Receiver>;
    deployContract(
      name: "Sender",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Sender>;
    deployContract(
      name: "ContractOne",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractOne>;
    deployContract(
      name: "ContractThree",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractThree>;
    deployContract(
      name: "ContractTwo",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContractTwo>;
    deployContract(
      name: "Enum",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Enum>;
    deployContract(
      name: "Error",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Error>;
    deployContract(
      name: "LessonErrorsAndConditions",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LessonErrorsAndConditions>;
    deployContract(
      name: "Event",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Event>;
    deployContract(
      name: "LessonExternalLibrary",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LessonExternalLibrary>;
    deployContract(
      name: "LessonGlobalVariablesAndConstructor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LessonGlobalVariablesAndConstructor>;
    deployContract(
      name: "UseLibraries",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UseLibraries>;
    deployContract(
      name: "Mapping",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Mapping>;
    deployContract(
      name: "NestedMapping",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NestedMapping>;
    deployContract(
      name: "FunctionModifier",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FunctionModifier>;
    deployContract(
      name: "UserOwnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UserOwnable>;
    deployContract(
      name: "Todos",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Todos>;
    deployContract(
      name: "LessonUint",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LessonUint>;
    deployContract(
      name: "LessonUintPractice",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LessonUintPractice>;
    deployContract(
      name: "MathContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MathContract>;
    deployContract(
      name: "Module1Lesson2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Module1Lesson2>;
    deployContract(
      name: "Module1Lesson2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Module1Lesson2>;
    deployContract(
      name: "Practicum",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Practicum>;
    deployContract(
      name: "Practicum",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Practicum>;
    deployContract(
      name: "BaseContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BaseContract>;
    deployContract(
      name: "Todos",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Todos>;
    deployContract(
      name: "DataTypes",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DataTypes>;
    deployContract(
      name: "DerivedContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DerivedContract>;
    deployContract(
      name: "Practicum1Module2Intensiv",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Practicum1Module2Intensiv>;
    deployContract(
      name: "Practicum",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Practicum>;
    deployContract(
      name: "Module2PracticumIntensive6",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Module2PracticumIntensive6>;
    deployContract(
      name: "MyERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyERC20>;
    deployContract(
      name: "MyOZToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyOZToken>;
    deployContract(
      name: "MyToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyToken>;
    deployContract(
      name: "OwnerContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnerContract>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
